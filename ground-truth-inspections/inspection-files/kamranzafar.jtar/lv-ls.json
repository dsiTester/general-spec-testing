[
    {
        "iid": 1,
        "inspection-start-time": "2022-01-12-17-37",
        "project": "kamranzafar.jtar",
        "spec-id": "00003",
        "method-a": "org.kamranzafar.jtar.TarEntry.extractTarHeader(Ljava/lang/String;)V",
        "method-b": "org.kamranzafar.jtar.TarEntry.isDirectory()Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "LV-verdict-count": 3,
        "LS-verdict-count": 1,
        "code-snippets-file": "snippets/lv-ls/00003.java",
        "validated-inspected-cases": [
            {
                "test": "org.kamranzafar.jtar.JTarAppendTest#testAppend",
                "stage": "stage-3-complete",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "TarEntry.java:39",
                        "method-b-site": "TarOutputStream.java:96",
                        "invocation-count": 3
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "",
                "notes": "The exception was caused by JTarAppendTest#untar relying on the name of the file made absent by delaying a, but the call to b returning false was still problematic as TarOutputStream#write uses it to check if the bytes being written exceed the current entry size."
            }
        ],
        "invalidated-inspected-cases": [
            {
                "test": "org.kamranzafar.jtar.JTarTest#tar",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "TarEntry.java:39",
                        "method-b-site": "TarOutputStream.java:96",
                        "invocation-count": 6
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "",
                "notes": "NO_COVERAGE Delaying a skipped the aforementioned check in TarOutputStream which did not end up resulting in an error, but presumably skipping that check would result in an error if the tests exercised the case that check was designed for."
            }
        ],
        "verdict": "true-spec",
        "is-oracle-weak": true,
        "spec-type": "precondition",
        "validating-test-file": "org.kamranzafar.jtar.JTarAppendTest#testAppend",
        "notes": "SOMETIMES_TRUE_SPEC, there are ways to give the TarEntry a valid header that do not involve a, but calling isDirectory before a valid header is made is dangerous as it will always return false.",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-12-18-30",
        "inspection-time-in-minutes": 53
    },
    {
        "iid": 2,
        "inspection-start-time": "2022-02-16-10-05",
        "project": "kamranzafar.jtar",
        "spec-id": "00004",
        "method-a": "org.kamranzafar.jtar.TarEntry.extractTarHeader(Ljava/lang/String;)V",
        "method-b": "org.kamranzafar.jtar.TarEntry.writeEntryHeader([B)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "LV-verdict-count": 3,
        "LS-verdict-count": 1,
        "code-snippets-file": "snippets/lv-ls/00004.java",
        "validated-inspected-cases": [
            {
                "test": "org.kamranzafar.jtar.JTarAppendTest#testAppend",
                "stage": "stage-3-complete",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "TarEntry.java:39",
                        "method-b-site": "TarOutputStream.java:122",
                        "invocation-count": 3
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "",
                "notes": "This test relies on the information that should get stored from the header to untar() a file, delaying method-a prevents this information from being written to the header which prevents method-b from storing it correctly."
            }
        ],
        "invalidated-inspected-cases": [
            {
                "test": "org.kamranzafar.jtar.JTarTest#tar",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "TarOutputStream.java:122",
                        "method-b-site": "TarOutputStream.java:96",
                        "invocation-count": 6
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "",
                "notes": "This test passed because the only test that was made was to check the size of the tar-ed folder, which did not rely on the information that didn't get stored from the header."
            }
        ],
        "verdict": "true-spec",
        "is-oracle-weak": true,
        "spec-type": "precondition",
        "validating-test-file": "",
        "notes": "SOMETIMES_TRUE_SPEC, there are ways to give the TarEntry a valid header that do not involve a, but calling writeEntryHeader() before creating valid header means you are only writing zeros instead of an actual header.",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-02-16-10-25",
        "inspection-time-in-minutes": 20
    },
    {
        "iid": 3,
        "inspection-start-time": "2022-02-16-15-27",
        "project": "kamranzafar.jtar",
        "spec-id": "00010",
        "method-a": "org.kamranzafar.jtar.TarEntry.writeEntryHeader([B)V",
        "method-b": "org.kamranzafar.jtar.TarEntry.isDirectory()Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "LV-verdict-count": 3,
        "LS-verdict-count": 1,
        "code-snippets-file": "snippets/lv-ls/00010.java",
        "validated-inspected-cases": [
            {
                "test": "org.kamranzafar.jtar.JTarAppendTest#testAppend",
                "stage": "stage-3-complete",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TarEntry.java:39",
                        "method-b-site": "TarOutputStream.java:122",
                        "invocation-count": 4
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "While method-a does not have a return value, it does write the header to the buffer it takes as argument, if this buffer is relied upon (as it is in untar-ing) the test will fail because the buffer does not have the information to allow the untar-ed file to be populated with the correct data.",
                "notes": "This test relies on the information that should get stored from the header to untar() a file, delaying method-a prevents this information from being written from the header to the buffer which causes untar-ing to fail to write anything to the untar-ed file."
            }
        ],
        "invalidated-inspected-cases": [
            {
                "test": "org.kamranzafar.jtar.JTarTest#tar",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "TarEntry.java:39",
                        "method-b-site": "TarOutputStream.java:122",
                        "invocation-count": 6
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "While method-a does not have a return value, it does write the header to the buffer it takes as argument, if this buffer is relied upon (as it is in untar-ing) the test will crash",
                "notes": "This test passed because the only test that was made was to check the size of the tar-ed folder, which did not rely on the information that didn't get written to the buffer from the header."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.kamranzafar.jtar.JTarTest#tar",
        "notes": "method-b only depends on that fact that the header of the TarEntry object has been constructed correctly, while method-a writes the information on the header to a buffer (spiritually a getter)",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-16-15-42",
        "inspection-time-in-minutes": 15
    }
]
