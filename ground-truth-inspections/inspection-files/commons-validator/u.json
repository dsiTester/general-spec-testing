[
    {
        "iid": 1,
        "inspection-start-time": "2022-01-20-00-15",
        "project": "commons-validator",
        "spec-id": "00002",
        "method-a": "org.apache.commons.validator.Arg.setKey(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Arg.getName()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00002.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.FieldTest#testDefaultUsingPositions",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "FieldTest.java:254",
                        "method-b-site": "Field.java:346",
                        "invocation-count": 3
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Couldn't quite reproduce the NullPointerException manually... It seems like there's a NullPointerException because there's no arg with position 1 due to the delay of method-a, so the return value of field.getArg() on line 96 returned null, causing a NullPointerException?"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "Inspection of the snippet shows that method-a is a 1-line getter, and method-b is a 1-line naive getter (ONE_STATELESS_METHOD), which both deal with different fields of the Arg class. Hence, this is a spurious spec. The reason why the DSI experiment resulted in stage-0-failure is because there was a check at the beginning of method-b's caller that returned immediately if the key was null, and the delay of method-a caused this return (refer to snippet for more details). Not calling method-a causes the method that calls method-b to exit early before calling method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-20-00-33",
        "inspection-time-in-minutes": 18
    },
    {
        "iid": 2,
        "inspection-start-time": "2022-01-21-16-45",
        "project": "commons-validator",
        "spec-id": "00014",
        "method-a": "org.apache.commons.validator.Field.ensureArgsCapacity(Lorg/apache/commons/validator/Arg;)V",
        "method-b": "org.apache.commons.validator.Field.getDepends()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 4,
        "test-methods-mine-count": 25,
        "code-snippets-file": "snippets/u/00014.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.RequiredNameTest#testRequired",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:338",
                        "method-b-site": "Field.java:884",
                        "invocation-count": 2
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "GOOD_EXAMPLE: ArrayOutOfBoundsException at Field.java:340, because method-a was supposed to increase the size of the array Field.args (Field.args starts out as a size 0 array, which means that accessing or writing any values would cause an ArrayOutOfBoundsException). DELAY_OF_A_CAUSES_UNEXPECTED_EXCEPTION"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "manual experimentation (refer to notes and snippet)",
        "notes": "method-a modifies the field variable Field.args (it sets the variable to a larger array if more space is needed to hold the argument Arg object). method-b is a 1-line getter that returns the field variable Field.depends (ONE_STATELESS_METHOD). Moreover, manual experimentation showed that method-b will return the same value even if it was called before the call to method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-21-17-09",
        "inspection-time-in-minutes": 24
    },
    {
        "iid": 3,
        "inspection-start-time": "2022-01-21-21-23",
        "project": "commons-validator",
        "spec-id": "00015",
        "method-a": "org.apache.commons.validator.Field.ensureArgsCapacity(Lorg/apache/commons/validator/Arg;)V",
        "method-b": "org.apache.commons.validator.Field.getPage()I",
        "method-a-return-type": "void",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 4,
        "test-methods-mine-count": 25,
        "code-snippets-file": "snippets/u/00015.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.RequiredNameTest#testRequired",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:338",
                        "method-b-site": "Form.java:291",
                        "invocation-count": 2
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "DELAY_OF_A_CAUSES_UNEXPECTED_EXCEPTION: ArrayOutOfBoundsException at Field.java:340, because method-a was supposed to increase the size of the array Field.args (Field.args starts out as a size 0 array, which means that accessing or writing any values would cause an ArrayOutOfBoundsException)."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "manual experimentation (refer to notes and snippet)",
        "notes": "method-a modifies the field variable Field.args (it sets the variable to a larger array if more space is needed to hold the argument Arg object). method-b is a 1-line getter that returns the field variable Field.page (ONE_STATELESS_METHOD). Moreover, manual experimentation showed that method-b will return the same value even if it was called before the call to method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-21-21-29",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 4,
        "inspection-start-time": "2022-01-21-21-45",
        "project": "commons-validator",
        "spec-id": "00016",
        "method-a": "org.apache.commons.validator.Field.ensureArgsCapacity(Lorg/apache/commons/validator/Arg;)V",
        "method-b": "org.apache.commons.validator.Field.getProperty()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 14,
        "code-snippets-file": "snippets/u/00016.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.RequiredNameTest#testRequired",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:338",
                        "method-b-site": "GenericValidatorImpl.java:67",
                        "invocation-count": 2
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "DELAY_OF_A_CAUSES_UNEXPECTED_EXCEPTION: ArrayOutOfBoundsException at Field.java:340, because method-a was supposed to increase the size of the array Field.args (Field.args starts out as a size 0 array, which means that accessing or writing any values would cause an ArrayOutOfBoundsException)."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "manual experimentation (refer to notes and snippet)",
        "notes": "method-a modifies the field variable Field.args (it sets the variable to a larger array if more space is needed to hold the argument Arg object). method-b is a 1-line getter that returns the field variable Field.property (ONE_STATELESS_METHOD). Moreover, manual experimentation showed that method-b will return the same value even if it was called before the call to method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-21-21-53",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 5,
        "inspection-start-time": "2022-01-21-21-53",
        "project": "commons-validator",
        "spec-id": "00017",
        "method-a": "org.apache.commons.validator.Field.ensureArgsCapacity(Lorg/apache/commons/validator/Arg;)V",
        "method-b": "org.apache.commons.validator.Field.getVarMap()Ljava/util/Map;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 4,
        "test-methods-mine-count": 21,
        "code-snippets-file": "snippets/u/00017.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.RequiredNameTest#testRequired",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:338",
                        "method-b-site": "Field.java:595",
                        "invocation-count": 2
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "DELAY_OF_A_CAUSES_UNEXPECTED_EXCEPTION: ArrayOutOfBoundsException at Field.java:340, because method-a was supposed to increase the size of the array Field.args (Field.args starts out as a size 0 array, which means that accessing or writing any values would cause an ArrayOutOfBoundsException)."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "manual experimentation (refer to notes and snippet)",
        "notes": "method-a modifies the field variable Field.args (it sets the variable to a larger array if more space is needed to hold the argument Arg object). method-b is a 1-line getter that returns the field variable Field.hVars (ONE_STATELESS_METHOD). Moreover, manual experimentation showed that method-b will return the same value even if it was called before the call to method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-21-22-01",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 6,
        "inspection-start-time": "2022-01-21-22-01",
        "project": "commons-validator",
        "spec-id": "00018",
        "method-a": "org.apache.commons.validator.Field.ensureArgsCapacity(Lorg/apache/commons/validator/Arg;)V",
        "method-b": "org.apache.commons.validator.Field.process(Ljava/util/Map;Ljava/util/Map;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 5,
        "test-methods-mine-count": 26,
        "code-snippets-file": "snippets/u/00018.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.RequiredNameTest#testRequired",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:338",
                        "method-b-site": "Form.java:207",
                        "invocation-count": 2
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "DELAY_OF_A_CAUSES_UNEXPECTED_EXCEPTION: ArrayOutOfBoundsException at Field.java:340, because method-a was supposed to increase the size of the array Field.args (Field.args starts out as a size 0 array, which means that accessing or writing any values would cause an ArrayOutOfBoundsException)."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "manual experimentation (refer to notes and snippet)",
        "notes": "GOOD_EXAMPLE: When one is constructing the ValidatorResources object via reading the XML file, one must call method-a successfully in order to pass the necessary components to digester. method-b is indirectly called by ValidatorResources.process(), but if ValidatorResources.process() is called before ValidatorResources.initDigester() (the indirect caller of method-a), then method-b is not called (to verify this, run the test with coverage and ValidatorResources.java:164 moved to before ValidatorResources.java:155). However, I don't think there is a direct relationship between method-a and method-b themselves, as I was able to insert a call to method-b before the call to method-a and have the test pass.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-21-22-24",
        "inspection-time-in-minutes": 23
    },
    {
        "iid": 7,
        "inspection-start-time": "2022-01-21-22-24",
        "project": "commons-validator",
        "spec-id": "00019",
        "method-a": "org.apache.commons.validator.Field.ensureArgsCapacity(Lorg/apache/commons/validator/Arg;)V",
        "method-b": "org.apache.commons.validator.Field.runDependentValidators(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 12,
        "code-snippets-file": "snippets/u/00019.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.RequiredNameTest#testRequired",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:338",
                        "method-b-site": "Field.java:822",
                        "invocation-count": 2
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "DELAY_OF_A_CAUSES_UNEXPECTED_EXCEPTION: ArrayOutOfBoundsException at Field.java:340, because method-a was supposed to increase the size of the array Field.args (Field.args starts out as a size 0 array, which means that accessing or writing any values would cause an ArrayOutOfBoundsException)."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "One can call method-a immediately after the call to method-b in Field.java:822 and run org.apache.commons.validator.RequiredNameTest#testRequired.",
        "notes": "One must construct and populate the ValidatorResource class before running Validator.validate() (and subsequently, method-b, which is indirectly called from that method). When one is populating this ValidatorResource class via reading an XML file, it is most likely necessary to call method-a in order to read correctly from the XML file. DECISION: this is a spurious spec because these two methods by themselves are UNRELATED_STATEFUL_METHODS, given that method-a can be called after method-b. method-a ought to be called before indexing into the field variable Field.args, but method-b does not affect Field.args (it runs the series of ValidatorAction objects based on its arguments via reflection).",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-21-22-45",
        "inspection-time-in-minutes": 21
    },
    {
        "iid": 8,
        "inspection-start-time": "2022-01-21-22-45",
        "project": "commons-validator",
        "spec-id": "00020",
        "method-a": "org.apache.commons.validator.Field.ensureArgsCapacity(Lorg/apache/commons/validator/Arg;)V",
        "method-b": "org.apache.commons.validator.Field.validate(Ljava/util/Map;Ljava/util/Map;)Lorg/apache/commons/validator/ValidatorResults;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.ValidatorResults",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 4,
        "test-methods-mine-count": 25,
        "code-snippets-file": "snippets/u/00020.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.RequiredNameTest#testRequired",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:338",
                        "method-b-site": "Form.java:292",
                        "invocation-count": 2
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "DELAY_OF_A_CAUSES_UNEXPECTED_EXCEPTION: ArrayOutOfBoundsException at Field.java:340, because method-a was supposed to increase the size of the array Field.args (Field.args starts out as a size 0 array, which means that accessing or writing any values would cause an ArrayOutOfBoundsException)."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "One can not manually call method-a after method-b, because method-b is called from a different class, and method-a is a private method.",
        "notes": "One must construct and populate the ValidatorResource class before running Validator.validate() (and subsequently, method-b, which is indirectly called from that method). When one is populating this ValidatorResource class via reading an XML file, it is most likely necessary to call method-a for the sake of correctness. DECISION: However, method-a by itself has no temporal relation with method-b (UNRELATED_STATEFUL_METHODS). method-a checks the field variable Field.args, and modifies if necessary. One ought to run method-a before indexing Field.args. method-b runs the ValidatorAction objects that ought to be run, but it does not access or modify the field.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-21-22-51",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 9,
        "inspection-start-time": "2022-01-21-22-51",
        "project": "commons-validator",
        "spec-id": "00021",
        "method-a": "org.apache.commons.validator.Field.ensureArgsCapacity(Lorg/apache/commons/validator/Arg;)V",
        "method-b": "org.apache.commons.validator.Field.validateForRule(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 12,
        "code-snippets-file": "snippets/u/00021.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.RequiredNameTest#testRequired",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:338",
                        "method-b-site": "Field.java:908",
                        "invocation-count": 2
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "DELAY_OF_A_CAUSES_UNEXPECTED_EXCEPTION: ArrayOutOfBoundsException at Field.java:340, because method-a was supposed to increase the size of the array Field.args (Field.args starts out as a size 0 array, which means that accessing or writing any values would cause an ArrayOutOfBoundsException)."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
       "validating-test-file": "One can include a call to method-a on Field.java:909 (immediately after method-b) and run org.apache.commons.validator.RequiredNameTest#testRequired; the test will still pass.",
        "notes": "One must construct and populate the ValidatorResource class before running Validator.validate() (and subsequently, method-b, which is indirectly called from that method). When one is populating this ValidatorResource class via reading an XML file, it is most likely necessary to call method-a for the sake of correctness. DECISION: However, method-a by itself has no temporal relation with method-b (UNRELATED_STATEFUL_METHODS). method-a checks the field variable Field.args, and modifies if necessary. One ought to run method-a before indexing Field.args. method-b runs the ValidatorAction object specified and all ValidatorAction object that it depends on, but it does not access or modify the field.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-21-22-58",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 10,
        "inspection-start-time": "2022-01-21-22-59",
        "project": "commons-validator",
        "spec-id": "00022",
        "method-a": "org.apache.commons.validator.Field.getArg(I)Lorg/apache/commons/validator/Arg;",
        "method-b": "org.apache.commons.validator.Field.getArg(Ljava/lang/String;I)Lorg/apache/commons/validator/Arg;",
        "method-a-return-type": "org.apache.commons.validator.Arg",
        "method-b-return-type": "org.apache.commons.validator.Arg",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00022.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ExtensionTest#testOverrideRule",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ExtensionTest.java:308",
                        "method-b-site": "Field.java:417",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at ExtensionTest.java:308.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-21-23-03",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 11,
        "inspection-start-time": "2022-01-22-12-40",
        "project": "commons-validator",
        "spec-id": "00026",
        "method-a": "org.apache.commons.validator.Field.getKey()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.Field.getProperty()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00026.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.VarTest#testVars",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:101",
                        "method-b-site": "VarTest.java:73",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Form.java:101",
                        "method-b-site": "VarTest.java:87",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 2,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: It seems that DSI replaced the return value of method-a with some other string value, which caused the Form to register an incorrect key value for the field. So, when the test tried to find the field with key \"field-1\" from the Form, the assertNotNull on VarTest.java:72 failed.",
                "notes": "ORDER_OF_ASSERTIONS - moving the assertNotNull() checks before the invocations of method-b to after the invocations of method-b would most likely prevent this DSI experiment from failing at stage-0."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "UNRELATED_STATELESS_METHODS - refer to snippet.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-22-12-54",
        "inspection-time-in-minutes": 14
    },
    {
        "iid": 12,
        "inspection-start-time": "2022-01-22-18-07",
        "project": "commons-validator",
        "spec-id": "00036",
        "method-a": "org.apache.commons.validator.Field.getVar(Ljava/lang/String;)Lorg/apache/commons/validator/Var;",
        "method-b": "org.apache.commons.validator.Field.getDepends()Ljava/lang/String;",
        "method-a-return-type": "org.apache.commons.validator.Var",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00036.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testInvalidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:597",
                        "method-b-site": "Field.java:884",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Field.java:598.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "method-a is stateful by potentially causing an exception to be thrown in the retrieval of a value from the map, but method-b is a 1-line naive getter that retrieves the field variable Field.depends, which is unrelated from method-a (ONE_STATELESS_METHOD). Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-22-18-16",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 13,
        "inspection-start-time": "2022-01-22-18-17",
        "project": "commons-validator",
        "spec-id": "00037",
        "method-a": "org.apache.commons.validator.Field.getVar(Ljava/lang/String;)Lorg/apache/commons/validator/Var;",
        "method-b": "org.apache.commons.validator.Field.getPage()I",
        "method-a-return-type": "org.apache.commons.validator.Var",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00037.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testInvalidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:597",
                        "method-b-site": "Form.java:291",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Field.java:598.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "method-a is stateful by potentially causing an exception to be thrown in the retrieval of a value from the map, but method-b is a 1-line naive getter that retrieves the field variable Field.page, which is unrelated from method-a (ONE_STATELESS_METHOD). Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-22-18-23",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 14,
        "inspection-start-time": "2022-01-22-18-23",
        "project": "commons-validator",
        "spec-id": "00038",
        "method-a": "org.apache.commons.validator.Field.getVar(Ljava/lang/String;)Lorg/apache/commons/validator/Var;",
        "method-b": "org.apache.commons.validator.Field.getProperty()Ljava/lang/String;",
        "method-a-return-type": "org.apache.commons.validator.Var",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00038.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testInvalidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:597",
                        "method-b-site": "GenericTypeValidatorImpl.java:235",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Field.java:598.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "method-a is stateful by potentially causing an exception to be thrown in the retrieval of a value from the map, but method-b is a 1-line naive getter that retrieves the field variable Field.property, which is unrelated from method-a. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-22-18-27",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 15,
        "inspection-start-time": "2022-01-22-18-27",
        "project": "commons-validator",
        "spec-id": "00039",
        "method-a": "org.apache.commons.validator.Field.getVar(Ljava/lang/String;)Lorg/apache/commons/validator/Var;",
        "method-b": "org.apache.commons.validator.Field.processArg(Ljava/lang/String;Ljava/lang/String;)V",
        "method-a-return-type": "org.apache.commons.validator.Var",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 7,
        "code-snippets-file": "snippets/u/00039.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testInvalidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:597",
                        "method-b-site": "Field.java:632",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Field.java:598.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "UNRELATED_STATEFUL_METHODS: Both method-a and method-b are stateful in different ways: method-a can throw an exception on an attempt to access a value on Field.getVarMap(), and method-b modifies Field.args. However, method-a is essentially a getter on Field.hVars, and method-b is essentially a modifier on Field.args, and the two field variables are not related. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-22-18-34",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 16,
        "inspection-start-time": "2022-01-22-18-27",
        "project": "commons-validator",
        "spec-id": "00040",
        "method-a": "org.apache.commons.validator.Field.getVar(Ljava/lang/String;)Lorg/apache/commons/validator/Var;",
        "method-b": "org.apache.commons.validator.Field.processMessageComponents(Ljava/lang/String;Ljava/lang/String;)V",
        "method-a-return-type": "org.apache.commons.validator.Var",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 7,
        "code-snippets-file": "snippets/u/00040.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testInvalidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:597",
                        "method-b-site": "Field.java:600",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Field.java:598.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "UNRELATED_STATEFUL_METHODS: Both method-a and method-b are stateful in different ways: method-a can throw an exception on an attempt to access a value on Field.getVarMap(), and method-b modifies Field.hMsgs and Field.args. However, method-a is essentially a getter on Field.hVars, and method-b is essentially a modifier on Field.hMsgs and Field.args, and the field variables are not related. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-22-18-43",
        "inspection-time-in-minutes": 16
    },
    {
        "iid": 17,
        "inspection-start-time": "2022-01-22-18-43",
        "project": "commons-validator",
        "spec-id": "00041",
        "method-a": "org.apache.commons.validator.Field.getVar(Ljava/lang/String;)Lorg/apache/commons/validator/Var;",
        "method-b": "org.apache.commons.validator.Field.runDependentValidators(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-a-return-type": "org.apache.commons.validator.Var",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00041.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testInvalidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:597",
                        "method-b-site": "Field.java:822",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Field.java:598.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet and manual checking of code",
        "notes": "UNRELATED_STATEFUL_METHODS: While method-a is simply a getter that is only stateful because it can throw an exception, method-b is a more complicated procedure. However, by analysis of the snippet, it was evident that method-b does not modify the value that method-a retrieves (Field.hVars). So, this is most likely a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-22-18-54",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 18,
        "inspection-start-time": "2022-01-22-18-54",
        "project": "commons-validator",
        "spec-id": "00042",
        "method-a": "org.apache.commons.validator.Field.getVar(Ljava/lang/String;)Lorg/apache/commons/validator/Var;",
        "method-b": "org.apache.commons.validator.Field.validate(Ljava/util/Map;Ljava/util/Map;)Lorg/apache/commons/validator/ValidatorResults;",
        "method-a-return-type": "org.apache.commons.validator.Var",
        "method-b-return-type": "org.apache.commons.validator.ValidatorResults",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00042.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testInvalidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:597",
                        "method-b-site": "Form.java:292",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Field.java:598.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet and manual checking of code",
        "notes": "UNRELATED_STATEFUL_METHODS: While method-a is simply a getter that is only stateful because it can throw an exception, method-b is a more complicated procedure. However, by analysis of the snippet, it was evident that method-b does not modify the value that method-a retrieves (Field.hVars). So, this is most likely a spurious spec. (It's entirely possible that hVars is only modified in the setup phase? before the valdating phase)",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-22-19-06",
        "inspection-time-in-minutes": 12
    },
    {
        "iid": 19,
        "inspection-start-time": "2022-01-22-19-11",
        "project": "commons-validator",
        "spec-id": "00043",
        "method-a": "org.apache.commons.validator.Field.getVar(Ljava/lang/String;)Lorg/apache/commons/validator/Var;",
        "method-b": "org.apache.commons.validator.Field.validateForRule(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-a-return-type": "org.apache.commons.validator.Var",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00043.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testInvalidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:597",
                        "method-b-site": "Field.java:908",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Field.java:598.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet and manual checking of code",
        "notes": "UNRELATED_STATEFUL_METHODS: While method-a is simply a getter that is only stateful because it can throw an exception, method-b is a more complicated procedure. However, by analysis of the code and the snippet, it was evident that method-b does not modify the value that method-a retrieves (Field.hVars). So, this is most likely a spurious spec. (It's entirely possible that hVars is only modified in the setup phase? before the valdating phase)",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-22-19-23",
        "inspection-time-in-minutes": 12
    },
    {
        "iid": 20,
        "inspection-start-time": "2022-01-23-15-28",
        "project": "commons-validator",
        "spec-id": "00053",
        "method-a": "org.apache.commons.validator.Field.process(Ljava/util/Map;Ljava/util/Map;)V",
        "method-b": "org.apache.commons.validator.Field.getVar(Ljava/lang/String;)Lorg/apache/commons/validator/Var;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.Var",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 7,
        "code-snippets-file": "snippets/u/00053.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:207",
                        "method-b-site": "Field.java:597",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-23-15-32",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 21,
        "inspection-start-time": "2022-01-23-15-32",
        "project": "commons-validator",
        "spec-id": "00054",
        "method-a": "org.apache.commons.validator.Field.process(Ljava/util/Map;Ljava/util/Map;)V",
        "method-b": "org.apache.commons.validator.Field.getVarMap()Ljava/util/Map;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 17,
        "test-methods-mine-count": 93,
        "code-snippets-file": "snippets/u/00054.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ByteTest#testByte",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:207",
                        "method-b-site": "Field.java:595",
                        "invocation-count": 6
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-23-15-36",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 22,
        "inspection-start-time": "2022-01-23-15-36",
        "project": "commons-validator",
        "spec-id": "00055",
        "method-a": "org.apache.commons.validator.Field.process(Ljava/util/Map;Ljava/util/Map;)V",
        "method-b": "org.apache.commons.validator.Field.processArg(Ljava/lang/String;Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 7,
        "code-snippets-file": "snippets/u/00055.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:207",
                        "method-b-site": "Field.java:632",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-23-15-40",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 23,
        "inspection-start-time": "2022-01-23-15-41",
        "project": "commons-validator",
        "spec-id": "00056",
        "method-a": "org.apache.commons.validator.Field.process(Ljava/util/Map;Ljava/util/Map;)V",
        "method-b": "org.apache.commons.validator.Field.processMessageComponents(Ljava/lang/String;Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 7,
        "code-snippets-file": "snippets/u/00056.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:207",
                        "method-b-site": "Field.java:600",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-23-15-44",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 24,
        "inspection-start-time": "2022-01-24-12-20",
        "project": "commons-validator",
        "spec-id": "00069",
        "method-a": "org.apache.commons.validator.Field.processMessageComponents(Ljava/lang/String;Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.processArg(Ljava/lang/String;Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 7,
        "code-snippets-file": "snippets/u/00069.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:600",
                        "method-b-site": "Field.java:632",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-12-23",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 25,
        "inspection-start-time": "2022-01-24-13-15",
        "project": "commons-validator",
        "spec-id": "00073",
        "method-a": "org.apache.commons.validator.Field.runDependentValidators(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-b": "org.apache.commons.validator.Field.getArg(I)Lorg/apache/commons/validator/Arg;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "org.apache.commons.validator.Arg",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00073.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ExtensionTest#testOverrideRule",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:822",
                        "method-b-site": "ExtensionTest.java:308",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: method-a is supposed to return true, but DSI replaced the return value with the default value false. This corrupted the state (PC to be specific), causing the caller (Field.validateForRule()) to exit prematurely. If the caller didn't exit prematurely, the ValidatorResults object would have been populated. The assertion failed precisely because the ValidatorResults object was not populated.",
                "notes": "ORDER_OF_ASSERTIONS - the assertNotNull() between method-a and method-b causes the DSI experiment to fail at stage-0."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ExtensionTest#testOverrideRule with changes noted in snippets",
        "notes": "method-b retrieves an element from the field variable Field.args, and while a callee of method-b (validateForRule() can invoke user-written validators via reflection) *could* potentially change the value of Field.args, I don't think there's a temporal relationship between method-a and method-b, as you can call method-b before method-a - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-13-37",
        "inspection-time-in-minutes": 22
    },
    {
        "iid": 26,
        "inspection-start-time": "2022-01-24-13-38",
        "project": "commons-validator",
        "spec-id": "00074",
        "method-a": "org.apache.commons.validator.Field.runDependentValidators(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-b": "org.apache.commons.validator.Field.getArg(Ljava/lang/String;I)Lorg/apache/commons/validator/Arg;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "org.apache.commons.validator.Arg",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00074.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ExtensionTest#testOverrideRule",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:822",
                        "method-b-site": "Field.java:417",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: method-a is supposed to return true, but DSI replaced the return value with the default value false. This corrupted the state (PC to be specific), causing the caller (Field.validateForRule()) to exit prematurely. If the caller didn't exit prematurely, the ValidatorResults object would have been populated. The assertion failed precisely because the ValidatorResults object was not populated.",
                "notes": "ORDER_OF_ASSERTIONS - the assertNotNull() between method-a and method-b causes the DSI experiment to fail at stage-0."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ExtensionTest#testOverrideRule with changes noted in snippets",
        "notes": "Refer to comment-on-return-values on the DSI replacement value and why the test failed before it got to method-b. method-b is a getter on an element of the field variable Field.args, and while a callee of method-b (validateForRule() can invoke user-written validators via reflection) *could* potentially change the value of Field.args, I don't think there's a temporal relationship between method-a and method-b, as you can easily indirectly call method-b before method-a - UNRELATED_STATEFUL_METHODS in the general case?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-13-48",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 27,
        "inspection-start-time": "2022-01-24-13-49",
        "project": "commons-validator",
        "spec-id": "00075",
        "method-a": "org.apache.commons.validator.Field.runDependentValidators(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-b": "org.apache.commons.validator.Field.getProperty()Ljava/lang/String;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 13,
        "test-methods-mine-count": 76,
        "code-snippets-file": "snippets/u/00075.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ExtensionTest#testOverrideRule",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:822",
                        "method-b-site": "GenericValidatorImpl.java:67",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: method-a is supposed to return true, but DSI replaced the return value with the default value false. This corrupted the state (PC to be specific), causing the caller (Field.validateForRule()) to exit prematurely. If the caller didn't exit prematurely, the ValidatorResults object would have been populated. The assertion failed precisely because the ValidatorResults object was not populated.",
                "notes": "ORDER_OF_ASSERTIONS - the assertNotNull() between method-a and method-b causes the DSI experiment to fail at stage-0."
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "Note that the nbp happens specifically because GenericValidatorImpl.validateRequired() was the method invoked via reflection due to the configuration. CONFIGURATION",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-13-56",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 28,
        "inspection-start-time": "2022-01-24-14-17",
        "project": "commons-validator",
        "spec-id": "00078",
        "method-a": "org.apache.commons.validator.Field.setDepends(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.getProperty()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00078.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:157",
                        "method-b-site": "ValidatorTest.java:246",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The DSI experiment resulted in stage-0-failure because the state changes that should have been caused by method-a did not happen because of the delay, which meant that the indirect caller of method-b (Field.validate()) exited prematurely without calling method-b. METHOD_B_AFTER_CRITICAL_POINT"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with modifications proposed in snippet.",
        "notes": "method-a modifies the field variables Field.depends and Field.dependencyList, and method-b is a 1-line naive getter for the field variable Field.property (ONE_STATELESS_METHOD).",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-14-25",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 29,
        "inspection-start-time": "2022-01-24-14-42",
        "project": "commons-validator",
        "spec-id": "00081",
        "method-a": "org.apache.commons.validator.Field.setDepends(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.runDependentValidators(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00081.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:157",
                        "method-b-site": "Field.java:822",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The DSI experiment resulted in stage-0-failure because the state changes that should have been caused by method-a did not happen because of the delay, which meant that the indirect caller of method-b (Field.validate()) exited prematurely without calling method-b. Refer to snippet for more details. GOOD_EXAMPLE + METHOD_B_AFTER_CRITICAL_POINT because the critical point at which method-a ought to have been called by that point was at Field.java:884."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "method-a modifies the field variables Field.depends and Field.dependencyList, and  method-b does not get executed if the field variable Field.dependencyList is empty/null, which is affected by method-a's computations (method-a is the only place where elements are added or removed from Field.dependencyList). This seems like a CONNECTION_DOES_NOT_NECESSITATE_ORDERING case, given that method-b itself does not use Field.depends, and one can call method-b using a new ValidatorAction object instead of through retrieving the variables modified by method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-14-49",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 30,
        "inspection-start-time": "2022-01-24-14-59",
        "project": "commons-validator",
        "spec-id": "00083",
        "method-a": "org.apache.commons.validator.Field.setDepends(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.validateForRule(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00083.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:157",
                        "method-b-site": "Field.java:908",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The DSI experiment resulted in stage-0-failure because the state changes that should have been caused by method-a did not happen because of the delay, which meant that the caller of method-b (Field.validate()) exited prematurely without calling method-b. Refer to snippet for more details. GOOD_EXAMPLE + METHOD_B_AFTER_CRITICAL_POINT because the critical point at which method-a ought to have been called by that point was at Field.java:884."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "One can call method-a in Field.java:909, which is immediately after the call to method-b",
        "notes": "method-a modifies the field variables Field.depends and Field.dependencyList. Field.dependencyList is necessary to prepare the argument action to method-b, but it is very much possible for one to simply pass in a new ValidatorAction object to method-b instead of referring to Field.dependencyList...  This seems like a CONNECTION_DOES_NOT_NECESSITATE_ORDERING case, given that method-b itself does not use Field.depends, and one can call method-b using a new ValidatorAction object instead of through retrieving the variables modified by method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-15-21",
        "inspection-time-in-minutes": 22
    },
    {
        "iid": 31,
        "inspection-start-time": "2022-01-24-16-24",
        "project": "commons-validator",
        "spec-id": "00084",
        "method-a": "org.apache.commons.validator.Field.setProperty(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.getDepends()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00084.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:156",
                        "method-b-site": "Field.java:884",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test throws an exception before method-b is called due to corrupted state from not calling method-a. The exception is thrown because Form.hFields doesn't have an entry with the key \"date\" (String fieldName). When an entry is added to Form.hFields via Form.addField, Field.generateKey is called, and in certain cases (like this test), Field.property (the return value from Field.getProperty()) will be used as the key value. Hence, since method-a was delayed, the key of the entry became null instead. So, there was no entry with the key \"date\", and the test failed."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "method-a is a pure setter to the field variable Field.property (ONE_PURE_SETTER), and method-b is a 1-line naive getter to the field variable Field.depends (ONE_STATELESS_METHOD).",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-16-42",
        "inspection-time-in-minutes": 18
    },
    {
        "iid": 32,
        "inspection-start-time": "2022-01-24-16-42",
        "project": "commons-validator",
        "spec-id": "00085",
        "method-a": "org.apache.commons.validator.Field.setProperty(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.getPage()I",
        "method-a-return-type": "void",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00085.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:156",
                        "method-b-site": "Form.java:281",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test throws an exception before method-b is called due to corrupted state from not calling method-a. The exception is thrown because Form.hFields doesn't have an entry with the key \"date\" (String fieldName). When an entry is added to Form.hFields via Form.addField, Field.generateKey is called, and in certain cases (like this test), Field.property (the return value from Field.getProperty()) will be used as the key value. Hence, since method-a was delayed, the key of the entry became null instead. So, there was no entry with the key \"date\", and the test failed."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "method-a is a pure setter to the field variable Field.property (ONE_PURE_SETTER), and method-b is a 1-line naive getter to the field variable Field.page (ONE_STATELESS_METHOD).",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-16-48",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 33,
        "inspection-start-time": "2022-01-24-17-07",
        "project": "commons-validator",
        "spec-id": "00086",
        "method-a": "org.apache.commons.validator.Field.setProperty(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.getProperty()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00086.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:156",
                        "method-b-site": "ValidatorTest.java:246",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test throws an exception before method-b is called due to corrupted state from not calling method-a. The exception is thrown because Form.hFields doesn't have an entry with the key \"date\" (String fieldName). When an entry is added to Form.hFields via Form.addField, Field.generateKey is called, and in certain cases (like this test), Field.property (the return value from Field.getProperty()) will be used as the key value. Hence, since method-a was delayed, the key of the entry became null instead. So, there was no entry with the key \"date\", and the test failed."
            }
        ],
        "verdict": "sometimes-true-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "Pretty simple setter-getter relationship - method-a is a pure setter to the field variable Field.property, and method-b is a 1-line naive getter to the same field variable (ONE_PURE_SETTER/ONE_STATELESS_METHOD). Note that the field variable can also be modified via Field.process(), and is initialized as null at declaration. This is a SOMETIMES_TRUE_SPEC on the first usage, since the declaration of the field variable Field.property sets the variable to null, and method-a is the only way to set the field variable, and method-b is the only way a user would retrieve the value of the field variable.",
        "findings": "The encoding in JavaMOP will most likely look something across the lines of: if method-a had not yet been called and method-b was called, with the return value of method-b not put in a nullness check, then issue a violation. However, if method-a had been called at some point in the past, there will be no violations issued.",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-24-17-14",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 34,
        "inspection-start-time": "2022-01-24-17-43",
        "project": "commons-validator",
        "spec-id": "00089",
        "method-a": "org.apache.commons.validator.Field.setProperty(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.runDependentValidators(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00089.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:156",
                        "method-b-site": "Field.java:822",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test throws an exception before method-b is called due to corrupted state from not calling method-a. The exception is thrown because Form.hFields doesn't have an entry with the key \"date\" (String fieldName). When an entry is added to Form.hFields via Form.addField, Field.generateKey is called, and in certain cases (like this test), Field.property (the return value from Field.getProperty()) will be used as the key value. Hence, since method-a was delayed, the key of the entry became null instead. So, there was no entry with the key \"date\", and the test failed."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet/code inspection - can try out an experiment following the snippet comments",
        "notes": "method-a is a pure setter to the field value Field.property (ONE_PURE_SETTER). method-b runs all of the validators that the particular validator depends on. method-b and its callees do not seem to access or use method-a, but just like in this specific test case, there is a chance that the method invoked via reflection from Field.executeValidationMethod() could access/manipulate the field value Field.property. Potentially this simply means that there would be a precondition relationship between method-a and the validation method called via reflection. In general, this seems like a UNRELATED_STATEFUL_METHODS case? DECISION: these notes do not sufficiently establish anything close to true spec",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-18-04",
        "inspection-time-in-minutes": 21
    },
    {
        "iid": 35,
        "inspection-start-time": "2022-01-24-18-13",
        "project": "commons-validator",
        "spec-id": "00091",
        "method-a": "org.apache.commons.validator.Field.setProperty(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.validate(Ljava/util/Map;Ljava/util/Map;)Lorg/apache/commons/validator/ValidatorResults;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.ValidatorResults",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00091.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:156",
                        "method-b-site": "Form.java:282",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test throws an exception before method-b is called due to corrupted state from not calling method-a. The exception is thrown because Form.hFields doesn't have an entry with the key \"date\" (String fieldName). When an entry is added to Form.hFields via Form.addField, Field.generateKey is called, and in certain cases (like this test), Field.property (the return value from Field.getProperty()) will be used as the key value. Hence, since method-a was delayed, the key of the entry became null instead. So, there was no entry with the key \"date\", and the test failed."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet/code inspection - can try out an experiment following the snippet comments",
        "notes": "method-a is a pure setter to the field value Field.property (ONE_PURE_SETTER). method-b runs via reflection the configured validations on the field. method-b and its callees do not seem to access or use method-a, but just like in this specific test case, there is a chance that the method invoked via reflection from Field.executeValidationMethod() could access/manipulate the field value Field.property. Potentially this simply means that there would be a precondition relationship between method-a and the validation method called via reflection. In general, this is most likely a UNRELATED_STATEFUL_METHODS case.  DECISION: these notes do not sufficiently establish anything close to true-spec",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-18-26",
        "inspection-time-in-minutes": 13
    },
    {
        "iid": 36,
        "inspection-start-time": "2022-01-24-18-27",
        "project": "commons-validator",
        "spec-id": "00092",
        "method-a": "org.apache.commons.validator.Field.setProperty(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.validateForRule(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00092.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:156",
                        "method-b-site": "Field.java:908",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test throws an exception before method-b is called due to corrupted state from not calling method-a. The exception is thrown because Form.hFields doesn't have an entry with the key \"date\" (String fieldName). When an entry is added to Form.hFields via Form.addField, Field.generateKey is called, and in certain cases (like this test), Field.property (the return value from Field.getProperty()) will be used as the key value. Hence, since method-a was delayed, the key of the entry became null instead. So, there was no entry with the key \"date\", and the test failed."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet/code inspection - can try out an experiment following the snippet comments",
        "notes": "method-a is a pure setter to the field value Field.property (ONE_PURE_SETTER). method-b calls via reflection all of the ValidatorActions to validate the Field. method-b and its callees do not seem to access or use method-a, but just like in this specific test case, there is a chance that the method invoked via reflection from Field.executeValidationMethod() could access/manipulate the field value Field.property. Potentially this simply means that there would be a precondition relationship between method-a and the validation method called via reflection. In general, this seems like an UNRELATED_STATEFUL_METHODS case?  DECISION: these notes do not sufficiently establish anything close to true-spec",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-18-34",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 37,
        "inspection-start-time": "2022-01-24-18-34",
        "project": "commons-validator",
        "spec-id": "00093",
        "method-a": "org.apache.commons.validator.Field.validate(Ljava/util/Map;Ljava/util/Map;)Lorg/apache/commons/validator/ValidatorResults;",
        "method-b": "org.apache.commons.validator.Field.getDepends()Ljava/lang/String;",
        "method-a-return-type": "org.apache.commons.validator.ValidatorResults",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 17,
        "test-methods-mine-count": 90,
        "code-snippets-file": "snippets/u/00093.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:282",
                        "method-b-site": "Field.java:884",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DSI most likely replaced the return value of method-a with the ValidatorResults variable results (Form.java:269), which caused an AssertionFailedError because results didn't contain any values (just a freshly initialized ValidatorResults object, and by skipping method-a it didn't gain any values.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-18-41",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 38,
        "inspection-start-time": "2022-01-24-18-41",
        "project": "commons-validator",
        "spec-id": "00094",
        "method-a": "org.apache.commons.validator.Field.validate(Ljava/util/Map;Ljava/util/Map;)Lorg/apache/commons/validator/ValidatorResults;",
        "method-b": "org.apache.commons.validator.Field.getProperty()Ljava/lang/String;",
        "method-a-return-type": "org.apache.commons.validator.ValidatorResults",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 11,
        "test-methods-mine-count": 74,
        "code-snippets-file": "snippets/u/00094.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:282",
                        "method-b-site": "ValidatorTest.java:246",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DSI most likely replaced the return value of method-a with the ValidatorResults variable results (Form.java:269), which caused an AssertionFailedError because results didn't contain any values (just a freshly initialized ValidatorResults object, and by skipping method-a it didn't gain any values.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "Note that this is a nbp spec only when a method that calls Field.getProperty() is invoked via reflection (this method needs to be configured or set manually).",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-18-48",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 39,
        "inspection-start-time": "2022-01-24-18-48",
        "project": "commons-validator",
        "spec-id": "00095",
        "method-a": "org.apache.commons.validator.Field.validate(Ljava/util/Map;Ljava/util/Map;)Lorg/apache/commons/validator/ValidatorResults;",
        "method-b": "org.apache.commons.validator.Field.runDependentValidators(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-a-return-type": "org.apache.commons.validator.ValidatorResults",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 12,
        "test-methods-mine-count": 73,
        "code-snippets-file": "snippets/u/00095.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:282",
                        "method-b-site": "Field.java:822",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DSI most likely replaced the return value of method-a with the ValidatorResults variable results (Form.java:269), which caused an AssertionFailedError because results didn't contain any values (just a freshly initialized ValidatorResults object, and by skipping method-a it didn't gain any values.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-18-51",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 40,
        "inspection-start-time": "2022-01-24-18-51",
        "project": "commons-validator",
        "spec-id": "00096",
        "method-a": "org.apache.commons.validator.Field.validate(Ljava/util/Map;Ljava/util/Map;)Lorg/apache/commons/validator/ValidatorResults;",
        "method-b": "org.apache.commons.validator.Field.validateForRule(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-a-return-type": "org.apache.commons.validator.ValidatorResults",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 12,
        "test-methods-mine-count": 73,
        "code-snippets-file": "snippets/u/00096.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:282",
                        "method-b-site": "Field.java:908",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DSI most likely replaced the return value of method-a with the ValidatorResults variable results (Form.java:269), which caused an AssertionFailedError because results didn't contain any values (just a freshly initialized ValidatorResults object, and by skipping method-a it didn't gain any values.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-18-53",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 41,
        "inspection-start-time": "2022-01-24-18-53",
        "project": "commons-validator",
        "spec-id": "00097",
        "method-a": "org.apache.commons.validator.Field.validateForRule(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-b": "org.apache.commons.validator.Field.getArg(I)Lorg/apache/commons/validator/Arg;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "org.apache.commons.validator.Arg",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00097.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ExtensionTest#testOverrideRule",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:908",
                        "method-b-site": "ExtensionTest.java:308",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with the default value false, which most likely caused a corruption in the state (the PC going into the next branch). However, since there is only one item in Field.dependencyList, the corrupted PC itself doesn't have any effects (one would merge the results and return regardless of the value method-a returned).",
                "notes": "The test failed because method-a was supposed to update the ValidatorResults variable results, but there was no state change because method-a was delayed. The DSI experiment resulted in stage-0-failure because the assertion that fails is done before the call to method-b. ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ExtensionTest#testOverrideRule with changes noted in snippet comments should call method-b before calling method-a.",
        "notes": "method-a executes the argument ValidatorAction and all of the ValidatorAction objects it depends on. method-b retrieves a value from the field variable Field.args. While method-a and its callees do not seem to modify Field.args, there is a slight chance that a validation method called via reflection by method-a's callees would? That being said, there is nothing wrong with calling method-b before method-a. In general, this seems like an UNRELATED_STATEFUL_METHODS case.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-19-06",
        "inspection-time-in-minutes": 13
    },
    {
        "iid": 42,
        "inspection-start-time": "2022-01-24-19-06",
        "project": "commons-validator",
        "spec-id": "00098",
        "method-a": "org.apache.commons.validator.Field.validateForRule(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-b": "org.apache.commons.validator.Field.getArg(Ljava/lang/String;I)Lorg/apache/commons/validator/Arg;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "org.apache.commons.validator.Arg",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00098.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ExtensionTest#testOverrideRule",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:908",
                        "method-b-site": "Field.java:417",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with the default value false, which most likely caused a corruption in the state (the PC going into the next branch). However, since there is only one item in Field.dependencyList, the corrupted PC itself doesn't have any effects (one would merge the results and return regardless of the value method-a returned).",
                "notes": "The test failed because method-a was supposed to update the ValidatorResults variable results, but there was no state change (results was not populated) because method-a was delayed. The DSI experiment resulted in stage-0-failure because the assertion that fails is done before the call to method-b. ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ExtensionTest#testOverrideRule with changes noted in snippet comments should indirectly call method-b before calling method-a.",
        "notes": "method-a executes the argument ValidatorAction and all of the ValidatorAction objects it depends on. method-b retrieves a value from the field variable Field.args. While method-a and its callees do not seem to modify Field.args, there is a slight chance that a validation method called via reflection by method-a's callees would? That being said, there is nothing wrong with calling method-b before method-a. In general, this seems like an UNRELATED_STATEFUL_METHODS case.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-19-14",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 43,
        "inspection-start-time": "2022-01-24-19-14",
        "project": "commons-validator",
        "spec-id": "00099",
        "method-a": "org.apache.commons.validator.Field.validateForRule(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-b": "org.apache.commons.validator.Field.getProperty()Ljava/lang/String;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 13,
        "test-methods-mine-count": 76,
        "code-snippets-file": "snippets/u/00099.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ExtensionTest#testOverrideRule",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:908",
                        "method-b-site": "GenericValidatorImpl.java:67",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with the default value false, which most likely caused a corruption in the state (the PC going into the next branch). However, since there is only one item in Field.dependencyList, the corrupted PC itself doesn't have any effects (one would merge the results and return regardless of the value method-a returned).",
                "notes": "The test failed because method-a was supposed to update the ValidatorResults variable results, but there was no state change (results was not populated) because method-a was delayed."
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "Note that this nbp happens only in tests/cases where a validation method that calls Field.getProperty() is configured to be called.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-19-22",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 44,
        "inspection-start-time": "2022-01-24-19-22",
        "project": "commons-validator",
        "spec-id": "00100",
        "method-a": "org.apache.commons.validator.Field.validateForRule(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-b": "org.apache.commons.validator.Field.runDependentValidators(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 14,
        "test-methods-mine-count": 77,
        "code-snippets-file": "snippets/u/00100.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ExtensionTest#testOverrideRule",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:908",
                        "method-b-site": "Field.java:822",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with the default value false, which most likely caused a corruption in the state (the PC going into the next branch). However, since there is only one item in Field.dependencyList, the corrupted PC itself doesn't have any effects (one would merge the results and return regardless of the value method-a returned).",
                "notes": "The test failed because method-a was supposed to update the ValidatorResults variable results, but there was no state change (results was not populated) because method-a was delayed."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-19-25",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 45,
        "inspection-start-time": "2022-01-24-22-49",
        "project": "commons-validator",
        "spec-id": "00101",
        "method-a": "org.apache.commons.validator.Form.addField(Lorg/apache/commons/validator/Field;)V",
        "method-b": "org.apache.commons.validator.Form.getFieldMap()Ljava/util/Map;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00101.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testManualBoolean",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:187",
                        "method-b-site": "Form.java:101",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-22-55",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 46,
        "inspection-start-time": "2022-01-25-00-00",
        "project": "commons-validator",
        "spec-id": "00106",
        "method-a": "org.apache.commons.validator.Form.containsField(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.Form.getField(Ljava/lang/String;)Lorg/apache/commons/validator/Field;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "org.apache.commons.validator.Field",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00106.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.RetrieveFormTest#testFormNotFound",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:155",
                        "method-b-site": "Form.java:160",
                        "invocation-count": 8
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: While method-a should return true here, the DSI replacement value was false. This causes method-b to not be called, because the negation of the return value of method-a was a conditional, where method-b was in the else branch of. Interestingly, this causes the state to be infected (causing Form.lFields to have 2 duplicate values instead of 1 value), but the test doesn't catch this, so it might be weak.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "REVISIT to construct an actual test that doesn't result in stage-0. ",
        "notes": "method-a checks whether the field variable Form.hFields contains an entry with the String argument, and method-b retrieves an entry from the field variable Form.hFields with the String argument as the key, or returns false. Given that both are public methods in which one can be called without the other being called, this is most likely a case of CONNECTION_DOES_NOT_NECESSITATE_ORDERING. The code that calls method-a and method-b seems to be depicting a particular use case of method-a and method-b - since method-a and method-b both work on the underlying Map structure, I think it's best to call this a true-spec. However, NO_COVERAGE - there's no coverage for a case where method-a returns false, so I wonder what would happen in the case that method-a actually did return false.",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-25-00-18",
        "inspection-time-in-minutes": 18
    },
    {
        "iid": 47,
        "inspection-start-time": "2022-01-25-00-18",
        "project": "commons-validator",
        "spec-id": "00107",
        "method-a": "org.apache.commons.validator.Form.getFieldMap()Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.Form.isExtending()Z",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 11,
        "test-methods-mine-count": 62,
        "code-snippets-file": "snippets/u/00107.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:101",
                        "method-b-site": "Form.java:186",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Form.java:101.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "INSPECTION_TODO",
        "notes": "method-a is a 1-line naive getter to the field variable Form.hFields (ONE_STATELESS_METHOD). method-b performs a non-nullness check on the field variable Form.inherit. Since these two field variables are not directly related, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-00-25",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 48,
        "inspection-start-time": "2022-01-25-00-26",
        "project": "commons-validator",
        "spec-id": "00108",
        "method-a": "org.apache.commons.validator.Form.getFieldMap()Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.Form.isProcessed()Z",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 11,
        "test-methods-mine-count": 62,
        "code-snippets-file": "snippets/u/00108.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:101",
                        "method-b-site": "Form.java:181",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Form.java:101.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "INSPECTION_TODO",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable Form.hFields, and method-b is a 1-line naive getter to the field variable Form.processed.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-00-30",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 49,
        "inspection-start-time": "2022-01-25-12-12",
        "project": "commons-validator",
        "spec-id": "00109",
        "method-a": "org.apache.commons.validator.Form.getFieldMap()Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.Form.process(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 11,
        "test-methods-mine-count": 62,
        "code-snippets-file": "snippets/u/00109.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:101",
                        "method-b-site": "FormSet.java:293",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Form.java:101.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "INSPECTION_TODO",
        "notes": "method-a is a 1-line naive getter to the field variable Form.hFields (ONE_STATELESS_METHOD). method-b actually calls method-a as part of its code (REVERSE_NBP), and modifies Form.hFields using a call to method-a (that part of the code just doesn't get invoked in the inspected test). So, there doesn't seem to be a relationship such that you *need* to call method-a before method-b, or method-b makes calling method-a unsafe - CONNECTION_DOES_NOT_NECESSITATE_ORDERING?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-12-19",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 50,
        "inspection-start-time": "2022-01-25-12-19",
        "project": "commons-validator",
        "spec-id": "00110",
        "method-a": "org.apache.commons.validator.Form.getFieldMap()Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.Form.validate(Ljava/util/Map;Ljava/util/Map;ILjava/lang/String;)Lorg/apache/commons/validator/ValidatorResults;",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "org.apache.commons.validator.ValidatorResults",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 3,
        "test-methods-mine-count": 7,
        "code-snippets-file": "snippets/u/00110.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:101",
                        "method-b-site": "Validator.java:363",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Form.java:101.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "method-a is a 1-line naive getter to the field variable Form.hFields (ONE_STATELESS_METHOD). method-b actually calls method-a as part of its code (REVERSE_NBP - that part of the code just doesn't get invoked in the inspected test). So, there doesn't seem to be a relationship such that you *need* to call method-a before method-b, or method-b makes calling method-a unsafe - CONNECTION_DOES_NOT_NECESSITATE_ORDERING?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-12-24",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 51,
        "inspection-start-time": "2022-01-25-12-57",
        "project": "commons-validator",
        "spec-id": "00114",
        "method-a": "org.apache.commons.validator.Form.merge(Lorg/apache/commons/validator/Form;)V",
        "method-b": "org.apache.commons.validator.Form.containsField(Ljava/lang/String;)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00114.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.RetrieveFormTest#testDefaultForm",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSet.java:156",
                        "method-b-site": "Form.java:155",
                        "invocation-count": 8
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-13-05",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 52,
        "inspection-start-time": "2022-01-25-13-05",
        "project": "commons-validator",
        "spec-id": "00115",
        "method-a": "org.apache.commons.validator.Form.merge(Lorg/apache/commons/validator/Form;)V",
        "method-b": "org.apache.commons.validator.Form.getField(Ljava/lang/String;)Lorg/apache/commons/validator/Field;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.Field",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00115.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.RetrieveFormTest#testFormNotFound",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSet.java:156",
                        "method-b-site": "Form.java:160",
                        "invocation-count": 8
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-13-10",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 53,
        "inspection-start-time": "2022-01-25-13-11",
        "project": "commons-validator",
        "spec-id": "00116",
        "method-a": "org.apache.commons.validator.Form.process(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V",
        "method-b": "org.apache.commons.validator.Form.isExtending()Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 93,
        "code-snippets-file": "snippets/u/00116.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSet.java:293",
                        "method-b-site": "Form.java:186",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-13-16",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 54,
        "inspection-start-time": "2022-01-25-13-16",
        "project": "commons-validator",
        "spec-id": "00117",
        "method-a": "org.apache.commons.validator.Form.process(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V",
        "method-b": "org.apache.commons.validator.Form.isProcessed()Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 93,
        "code-snippets-file": "snippets/u/00117.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSet.java:293",
                        "method-b-site": "Form.java:181",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-13-18",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 55,
        "inspection-start-time": "2022-01-25-15-08",
        "project": "commons-validator",
        "spec-id": "00124",
        "method-a": "org.apache.commons.validator.Form.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Form.validate(Ljava/util/Map;Ljava/util/Map;ILjava/lang/String;)Lorg/apache/commons/validator/ValidatorResults;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.ValidatorResults",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00124.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:154",
                        "method-b-site": "Validator.java:363",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "METHOD_B_AFTER_CRITICAL_POINT: The reason why this test fails is because if method-a is not called before ValidatorTest.java:160, the state will be infected, and method-b is after that point in the execution. If method-a is not called before ValidatorTest.java:159, then the FormSet wouldn't contain a Form object indexed under the key \"testForm\" (because the Form would have name null instead of \"testForm\", due to the delay of method-a. No validation would happen in this instance (method-b isn't called at all) because Validator.validate() (called from test) would check for a Form object indexed under the key \"testForm\", and run validation using that; but here, there was no such Form object."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "precondition",
        "validating-test-file": "INSPECTION_TODO: method-b is dependent on method-a in a way that method-b may never be called if method-a was not called.",
        "notes": "ONE_PURE_SETTER method-a is a pure setter to the field variable Form.name. method-b performs validation on either a singular Field object within Form.lFields, or through all Field objects iwthin Form.lFields. In this specific use case, method-b would not be called if method-a was not called. However, method-b itself does not use/modify the field variable Form.name, and method-a is a public method that can be called at any point. So, this is most likely a CONNECTION_DOES_NOT_NECESSITATE_ORDERING case.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-15-18",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 56,
        "inspection-start-time": "2022-01-25-23-07",
        "project": "commons-validator",
        "spec-id": "00152",
        "method-a": "org.apache.commons.validator.FormSet.setLanguage(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.FormSet.getForms()Ljava/util/Map;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00152.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:83",
                        "method-b-site": "FormSet.java:150",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "FormSetFactory.java:83",
                        "method-b-site": "FormSet.java:149",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 2,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Note that the first perturbation resulted in stage-0-failure, the second perturbation resulted in stage-3-complete. Commenting out the call to method-a results in an assertion failure, but since method-a was called after method-b, there was some STATE_RESTORED."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
        "notes": "method-a is a pure setter to the field variable FormSet.language (ONE_PURE_SETTER), and method-b retrieves the field variable FormSet.forms as an unmodifiable map, which is not related to the field variable that method-a modifies. So, this is clearly a spurious spec. More importantly, this DSI experiment is a very convuluted case of stage-0-failure. INSPECTION_TODO because I've tried to work this through for an hour and I couldn't quite figure it out.",
        "findings": "*Super* interesting case with multiple perturbations as to why the experiment resulted in a stage-0-failure. **THIS IS PROBABLY WRONG** --> (Not calling method-a for both perturbations infected the state, causing the variable holding the object of the first perturbation to be overwritten with the object of the second perturbation. Perhaps this may make a case for why we *may* want to have a separate DSI run for each perturbation?) I suspect that if each perturbation was run independently, the first perturbation would not have ended in stage-0-failure. Although, having a separate DSI run for each perturbation would be costly...",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-00-10",
        "inspection-time-in-minutes": 63
    },
    {
        "iid": 57,
        "inspection-start-time": "2022-01-26-12-01",
        "project": "commons-validator",
        "spec-id": "00164",
        "method-a": "org.apache.commons.validator.FormSetFactory.createFormSet(Lorg/apache/commons/validator/ValidatorResources;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/FormSet;",
        "method-b": "org.apache.commons.validator.FormSetFactory.getLog()Lorg/apache/commons/logging/Log;",
        "method-a-return-type": "org.apache.commons.validator.FormSet",
        "method-b-return-type": "org.apache.commons.logging.Log",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/u/00164.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:52",
                        "method-b-site": "FormSetFactory.java:90",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException in Digester.java:1345 (in commons-digester).",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-05",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 58,
        "inspection-start-time": "2022-01-26-12-44",
        "project": "commons-validator",
        "spec-id": "00189",
        "method-a": "org.apache.commons.validator.UrlValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.UrlValidator.isValidAuthority(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00189.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.UrlTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "UrlTest.java:131",
                        "method-b-site": "UrlValidator.java:261",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED - the test might have been checking whether the call to a wouldn't throw an exception?",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-49",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 59,
        "inspection-start-time": "2022-01-26-12-49",
        "project": "commons-validator",
        "spec-id": "00190",
        "method-a": "org.apache.commons.validator.UrlValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.UrlValidator.isValidFragment(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00190.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.UrlTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "UrlTest.java:131",
                        "method-b-site": "UrlValidator.java:273",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED - the test might have been checking whether the call to a wouldn't throw an exception?",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-52",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 60,
        "inspection-start-time": "2022-01-26-12-52",
        "project": "commons-validator",
        "spec-id": "00191",
        "method-a": "org.apache.commons.validator.UrlValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.UrlValidator.isValidPath(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00191.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.UrlTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "UrlTest.java:131",
                        "method-b-site": "UrlValidator.java:265",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED - the test might have been checking whether the call to a wouldn't throw an exception?",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-53",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 61,
        "inspection-start-time": "2022-01-26-12-53",
        "project": "commons-validator",
        "spec-id": "00192",
        "method-a": "org.apache.commons.validator.UrlValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.UrlValidator.isValidQuery(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00192.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.UrlTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "UrlTest.java:131",
                        "method-b-site": "UrlValidator.java:269",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED - the test might have been checking whether the call to a wouldn't throw an exception?",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-55",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 62,
        "inspection-start-time": "2022-01-26-12-55",
        "project": "commons-validator",
        "spec-id": "00193",
        "method-a": "org.apache.commons.validator.UrlValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.UrlValidator.isValidScheme(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00193.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.UrlTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "UrlTest.java:131",
                        "method-b-site": "UrlValidator.java:257",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED - the test might have been checking whether the call to a wouldn't throw an exception?",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-56",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 63,
        "inspection-start-time": "2022-01-26-13-07",
        "project": "commons-validator",
        "spec-id": "00194",
        "method-a": "org.apache.commons.validator.UrlValidator.isValidAuthority(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.UrlValidator.isValidFragment(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00194.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.UrlTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:261",
                        "method-b-site": "UrlValidator.java:273",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: The DSI replacement value infected the state (corrupted the PC). method-a is in a conditional to which if method-a returned false, the caller of method-a would return at that point. method-b is called by the caller of method-a, but since DSI replaced the return value of method-a with false, method-b was never called. Hence the DSI experiment resulted in a stage-0-failure.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.UrlTest#testValidator202 with the if block starting at UrlValidator.java:273 called before the if block starting at UrlValidator.java:261",
        "notes": "Both methods check different properties on their string arguments (their arguments are different String values), UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-13-21",
        "inspection-time-in-minutes": 14
    },
    {
        "iid": 64,
        "inspection-start-time": "2022-01-26-13-21",
        "project": "commons-validator",
        "spec-id": "00195",
        "method-a": "org.apache.commons.validator.UrlValidator.isValidAuthority(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.UrlValidator.isValidPath(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00195.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.UrlTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:261",
                        "method-b-site": "UrlValidator.java:265",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: The DSI replacement value infected the state (corrupted the PC). method-a is in a conditional to which if method-a returned false, the caller of method-a would return at that point. method-b is called by the caller of method-a, but since DSI replaced the return value of method-a with false, method-b was never called. Hence the DSI experiment resulted in a stage-0-failure.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.UrlTest#testValidator202 with the if block starting at UrlValidator.java:265 called before the if block starting at UrlValidator.java:261",
        "notes": "Both methods check different properties on their string arguments (their arguments are different String values) - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-13-26",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 65,
        "inspection-start-time": "2022-01-26-13-27",
        "project": "commons-validator",
        "spec-id": "00196",
        "method-a": "org.apache.commons.validator.UrlValidator.isValidAuthority(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.UrlValidator.isValidQuery(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00196.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.UrlTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:261",
                        "method-b-site": "UrlValidator.java:269",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: The DSI replacement value infected the state (corrupted the PC). method-a is in a conditional to which if method-a returned false, the caller of method-a would return at that point. method-b is called by the caller of method-a, but since DSI replaced the return value of method-a with false, method-b was never called. Hence the DSI experiment resulted in a stage-0-failure.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.UrlTest#testValidator202 with the if block starting at UrlValidator.java:269 called before the if block starting at UrlValidator.java:261",
        "notes": "Both methods check different properties on their string arguments (their arguments are different String values) - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-13-33",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 66,
        "inspection-start-time": "2022-01-26-13-33",
        "project": "commons-validator",
        "spec-id": "00197",
        "method-a": "org.apache.commons.validator.UrlValidator.isValidPath(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.UrlValidator.isValidFragment(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00197.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.UrlTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:265",
                        "method-b-site": "UrlValidator.java:273",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: The DSI replacement value infected the state (corrupted the PC). method-a is in a conditional to which if method-a returned false, the caller of method-a would return at that point. method-b is called by the caller of method-a, but since DSI replaced the return value of method-a with false, method-b was never called. Hence the DSI experiment resulted in a stage-0-failure.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.UrlTest#testValidator202 with the if block starting at UrlValidator.java:273 called before the if block starting at UrlValidator.java:265",
        "notes": "Both methods check different properties on their string arguments (their arguments are different String values) - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-13-38",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 67,
        "inspection-start-time": "2022-01-26-13-38",
        "project": "commons-validator",
        "spec-id": "00198",
        "method-a": "org.apache.commons.validator.UrlValidator.isValidPath(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.UrlValidator.isValidQuery(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00198.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.UrlTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:265",
                        "method-b-site": "UrlValidator.java:269",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: The DSI replacement value infected the state (corrupted the PC). method-a is in a conditional to which if method-a returned false, the caller of method-a would return at that point. method-b is called by the caller of method-a, but since DSI replaced the return value of method-a with false, method-b was never called. Hence the DSI experiment resulted in a stage-0-failure.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.UrlTest#testValidator202 with the if block starting at UrlValidator.java:269 called before the if block starting at UrlValidator.java:265",
        "notes": "Both methods check different properties on their string arguments (plus, their arguments are different String values - UNRELATED_STATEFUL_METHODS).",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-13-42",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 68,
        "inspection-start-time": "2022-01-26-13-42",
        "project": "commons-validator",
        "spec-id": "00199",
        "method-a": "org.apache.commons.validator.UrlValidator.isValidQuery(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.UrlValidator.isValidFragment(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00199.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.UrlTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:269",
                        "method-b-site": "UrlValidator.java:273",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: The DSI replacement value infected the state (corrupted the PC). method-a is in a conditional to which if method-a returned false, the caller of method-a would return at that point. method-b is called by the caller of method-a, but since DSI replaced the return value of method-a with false, method-b was never called. Hence the DSI experiment resulted in a stage-0-failure.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.UrlTest#testValidator202 with the if block starting at UrlValidator.java:273 called before the if block starting at UrlValidator.java:269",
        "notes": "Both methods check different properties on their string arguments (their arguments are different String values) - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-13-45",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 69,
        "inspection-start-time": "2022-01-26-13-45",
        "project": "commons-validator",
        "spec-id": "00200",
        "method-a": "org.apache.commons.validator.UrlValidator.isValidScheme(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.UrlValidator.isValidAuthority(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00200.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.UrlTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:257",
                        "method-b-site": "UrlValidator.java:261",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: The DSI replacement value infected the state (corrupted the PC). method-a is in a conditional to which if method-a returned false, the caller of method-a would return at that point. method-b is called by the caller of method-a, but since DSI replaced the return value of method-a with false, method-b was never called. Hence the DSI experiment resulted in a stage-0-failure.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.UrlTest#testValidator202 with the if block starting at UrlValidator.java:261 called before the if block starting at UrlValidator.java:257",
        "notes": "Both methods check different properties on their respective string arguments (which are different String values) - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-13-49",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 70,
        "inspection-start-time": "2022-01-26-13-49",
        "project": "commons-validator",
        "spec-id": "00201",
        "method-a": "org.apache.commons.validator.UrlValidator.isValidScheme(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.UrlValidator.isValidFragment(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00201.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.UrlTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:257",
                        "method-b-site": "UrlValidator.java:273",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: The DSI replacement value infected the state (corrupted the PC). method-a is in a conditional to which if method-a returned false, the caller of method-a would return at that point. method-b is called by the caller of method-a, but since DSI replaced the return value of method-a with false, method-b was never called. Hence the DSI experiment resulted in a stage-0-failure.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.UrlTest#testValidator202 with the if block starting at UrlValidator.java:273 called before the if block starting at UrlValidator.java:257",
        "notes": "Both methods check different properties on their string arguments (their arguments are different String values) - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-13-53",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 71,
        "inspection-start-time": "2022-01-26-13-53",
        "project": "commons-validator",
        "spec-id": "00202",
        "method-a": "org.apache.commons.validator.UrlValidator.isValidScheme(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.UrlValidator.isValidPath(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00202.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.UrlTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:257",
                        "method-b-site": "UrlValidator.java:265",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: The DSI replacement value infected the state (corrupted the PC). method-a is in a conditional to which if method-a returned false, the caller of method-a would return at that point. method-b is called by the caller of method-a, but since DSI replaced the return value of method-a with false, method-b was never called. Hence the DSI experiment resulted in a stage-0-failure.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.UrlTest#testValidator202 with the if block starting at UrlValidator.java:265 called before the if block starting at UrlValidator.java:257",
        "notes": "Both methods check different properties on their string arguments (their arguments are different String values) - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-13-56",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 72,
        "inspection-start-time": "2022-01-26-13-56",
        "project": "commons-validator",
        "spec-id": "00203",
        "method-a": "org.apache.commons.validator.UrlValidator.isValidScheme(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.UrlValidator.isValidQuery(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00203.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.UrlTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:257",
                        "method-b-site": "UrlValidator.java:269",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: The DSI replacement value infected the state (corrupted the PC). method-a is in a conditional to which if method-a returned false, the caller of method-a would return at that point. method-b is called by the caller of method-a, but since DSI replaced the return value of method-a with false, method-b was never called. Hence the DSI experiment resulted in a stage-0-failure.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.UrlTest#testValidator202 with the if block starting at UrlValidator.java:269 called before the if block starting at UrlValidator.java:257",
        "notes": "Both methods check different properties on their string arguments (their arguments are different String values) - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-13-58",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 73,
        "inspection-start-time": "2022-01-26-19-25",
        "project": "commons-validator",
        "spec-id": "00208",
        "method-a": "org.apache.commons.validator.Validator.validate()Lorg/apache/commons/validator/ValidatorResults;",
        "method-b": "org.apache.commons.validator.Validator.getClassLoader()Ljava/lang/ClassLoader;",
        "method-a-return-type": "org.apache.commons.validator.ValidatorResults",
        "method-b-return-type": "java.lang.ClassLoader",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 13,
        "test-methods-mine-count": 76,
        "code-snippets-file": "snippets/u/00208.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DateTest.java:98",
                        "method-b-site": "ValidatorAction.java:758",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with null, where the return value of method-a was checked in an assertNotNull().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-19-36",
        "inspection-time-in-minutes": 11
    },
    {
        "iid": 74,
        "inspection-start-time": "2022-01-26-19-36",
        "project": "commons-validator",
        "spec-id": "00209",
        "method-a": "org.apache.commons.validator.Validator.validate()Lorg/apache/commons/validator/ValidatorResults;",
        "method-b": "org.apache.commons.validator.Validator.getOnlyReturnErrors()Z",
        "method-a-return-type": "org.apache.commons.validator.ValidatorResults",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 37,
        "code-snippets-file": "snippets/u/00209.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DateTest.java:98",
                        "method-b-site": "ValidatorAction.java:767",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with null, where the return value of method-a was checked in an assertNotNull().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-19-39",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 75,
        "inspection-start-time": "2022-01-26-19-39",
        "project": "commons-validator",
        "spec-id": "00210",
        "method-a": "org.apache.commons.validator.Validator.validate()Lorg/apache/commons/validator/ValidatorResults;",
        "method-b": "org.apache.commons.validator.Validator.getParameterValue(Ljava/lang/String;)Ljava/lang/Object;",
        "method-a-return-type": "org.apache.commons.validator.ValidatorResults",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 16,
        "test-methods-mine-count": 91,
        "code-snippets-file": "snippets/u/00210.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DateTest.java:98",
                        "method-b-site": "Validator.java:352",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with null, where the return value of method-a was checked in an assertNotNull().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-19-44",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 76,
        "inspection-start-time": "2022-01-26-20-50",
        "project": "commons-validator",
        "spec-id": "00211",
        "method-a": "org.apache.commons.validator.ValidatorAction.executeValidationMethod(Lorg/apache/commons/validator/Field;Ljava/util/Map;Lorg/apache/commons/validator/ValidatorResults;I)Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.getClassLoader(Ljava/util/Map;)Ljava/lang/ClassLoader;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.ClassLoader",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/u/00211.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:826",
                        "method-b-site": "ValidatorAction.java:534",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "The return value of method-a should be true, but the DSI experiment replaced it with false. However, this replacement value itself had no bearing on the outcome of the test (the return value of method-a signifies in Field.validate() that validation failed and thus no other validation should be done, but there was only one ValidatorAction to be performed in the first place).",
                "notes": "The test fails because not calling method-a means that the ValidatorResults object that was eventually propagated to the test as the return value of Validator.validate() would not be populated with the appropriate values. When the test checked for a specific ValidatorResult object, it did not exist."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-21-02",
        "inspection-time-in-minutes": 12
    },
    {
        "iid": 77,
        "inspection-start-time": "2022-01-26-21-10",
        "project": "commons-validator",
        "spec-id": "00212",
        "method-a": "org.apache.commons.validator.ValidatorAction.executeValidationMethod(Lorg/apache/commons/validator/Field;Ljava/util/Map;Lorg/apache/commons/validator/ValidatorResults;I)Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.getParameterValues(Ljava/util/Map;)[Ljava/lang/Object;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.Object[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/u/00212.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:826",
                        "method-b-site": "ValidatorAction.java:541",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "The return value of method-a should be true, but the DSI experiment replaced it with false. However, this replacement value by itself had no bearing on the outcome of the test (the return value of method-a signifies in Field.validate() that validation failed and thus no other validation should be done, but there was only one ValidatorAction to be performed in the first place).",
                "notes": "The test fails because not calling method-a means that the ValidatorResults object that was eventually propagated to the test as the return value of Validator.validate() would not be populated with the appropriate values. When the test checked for a specific ValidatorResult object, it did not exist."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-21-12",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 78,
        "inspection-start-time": "2022-01-26-21-12",
        "project": "commons-validator",
        "spec-id": "00213",
        "method-a": "org.apache.commons.validator.ValidatorAction.executeValidationMethod(Lorg/apache/commons/validator/Field;Ljava/util/Map;Lorg/apache/commons/validator/ValidatorResults;I)Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.getValidationClassInstance()Ljava/lang/Object;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/u/00213.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:826",
                        "method-b-site": "ValidatorAction.java:551",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "The return value of method-a should be true, but the DSI experiment replaced it with false. However, this replacement value by itself had no bearing on the outcome of the test (the return value of method-a signifies in Field.validate() that validation failed and thus no other validation should be done, but there was only one ValidatorAction to be performed in the first place).",
                "notes": "The test fails because not calling method-a means that the ValidatorResults object that was eventually propagated to the test as the return value of Validator.validate() would not be populated with the appropriate values. When the test checked for a specific ValidatorResult object, it did not exist."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-21-15",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 79,
        "inspection-start-time": "2022-01-26-21-15",
        "project": "commons-validator",
        "spec-id": "00214",
        "method-a": "org.apache.commons.validator.ValidatorAction.executeValidationMethod(Lorg/apache/commons/validator/Field;Ljava/util/Map;Lorg/apache/commons/validator/ValidatorResults;I)Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 9,
        "test-methods-mine-count": 56,
        "code-snippets-file": "snippets/u/00214.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:826",
                        "method-b-site": "ValidatorAction.java:567",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "The return value of method-a should be true, but the DSI experiment replaced it with false. However, this replacement value by itself had no bearing on the outcome of the test (the return value of method-a signifies in Field.validate() that validation failed and thus no other validation should be done, but there was only one ValidatorAction to be performed in the first place).",
                "notes": "The test fails because not calling method-a means that the ValidatorResults object that was eventually propagated to the test as the return value of Validator.validate() would not be populated with the appropriate values. When the test checked for a specific ValidatorResult object, it did not exist."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-21-17",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 80,
        "inspection-start-time": "2022-01-26-21-17",
        "project": "commons-validator",
        "spec-id": "00215",
        "method-a": "org.apache.commons.validator.ValidatorAction.executeValidationMethod(Lorg/apache/commons/validator/Field;Ljava/util/Map;Lorg/apache/commons/validator/ValidatorResults;I)Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadParameterClasses(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "boolean",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/u/00215.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:826",
                        "method-b-site": "ValidatorAction.java:536",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "The return value of method-a should be true, but the DSI experiment replaced it with false. However, this replacement value by itself had no bearing on the outcome of the test (the return value of method-a signifies in Field.validate() that validation failed and thus no other validation should be done, but there was only one ValidatorAction to be performed in the first place).",
                "notes": "The test fails because not calling method-a means that the ValidatorResults object that was eventually propagated to the test as the return value of Validator.validate() would not be populated with the appropriate values. When the test checked for a specific ValidatorResult object, it did not exist."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-21-20",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 81,
        "inspection-start-time": "2022-01-27-12-59",
        "project": "commons-validator",
        "spec-id": "00216",
        "method-a": "org.apache.commons.validator.ValidatorAction.executeValidationMethod(Lorg/apache/commons/validator/Field;Ljava/util/Map;Lorg/apache/commons/validator/ValidatorResults;I)Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationClass(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "boolean",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/u/00216.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:826",
                        "method-b-site": "ValidatorAction.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "The return value of method-a should be true, but the DSI experiment replaced it with false. However, this replacement value by itself had no bearing on the outcome of the test (the return value of method-a signifies in Field.validate() that validation failed and thus no other validation should be done, but there was only one ValidatorAction to be performed in the first place).",
                "notes": "The test fails because not calling method-a means that the ValidatorResults object that was eventually propagated to the test as the return value of Validator.validate() would not be populated with the appropriate values. When the test checked for a specific ValidatorResult object, it did not exist."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-13-01",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 82,
        "inspection-start-time": "2022-01-27-13-01",
        "project": "commons-validator",
        "spec-id": "00217",
        "method-a": "org.apache.commons.validator.ValidatorAction.executeValidationMethod(Lorg/apache/commons/validator/Field;Ljava/util/Map;Lorg/apache/commons/validator/ValidatorResults;I)Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationMethod()V",
        "method-a-return-type": "boolean",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/u/00217.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:826",
                        "method-b-site": "ValidatorAction.java:537",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "The return value of method-a should be true, but the DSI experiment replaced it with false. However, this replacement value by itself had no bearing on the outcome of the test (the return value of method-a signifies in Field.validate() that validation failed and thus no other validation should be done, but there was only one ValidatorAction to be performed in the first place).",
                "notes": "The test fails because not calling method-a means that the ValidatorResults object that was eventually propagated to the test as the return value of Validator.validate() would not be populated with the appropriate values. When the test checked for a specific ValidatorResult object, it did not exist."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-13-03",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 83,
        "inspection-start-time": "2022-01-27-13-04",
        "project": "commons-validator",
        "spec-id": "00218",
        "method-a": "org.apache.commons.validator.ValidatorAction.executeValidationMethod(Lorg/apache/commons/validator/Field;Ljava/util/Map;Lorg/apache/commons/validator/ValidatorResults;I)Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.onlyReturnErrors(Ljava/util/Map;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 30,
        "code-snippets-file": "snippets/u/00218.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:826",
                        "method-b-site": "ValidatorAction.java:568",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "The return value of method-a should be true, but the DSI experiment replaced it with false. However, this replacement value by itself had no bearing on the outcome of the test (the return value of method-a signifies in Field.validate() that validation failed and thus no other validation should be done, but there was only one ValidatorAction to be performed in the first place).",
                "notes": "The test fails because not calling method-a means that the ValidatorResults object that was eventually propagated to the test as the return value of Validator.validate() would not be populated with the appropriate values. When the test checked for a specific ValidatorResult object, it did not exist."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-13-06",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 84,
        "inspection-start-time": "2022-01-27-18-10",
        "project": "commons-validator",
        "spec-id": "00231",
        "method-a": "org.apache.commons.validator.ValidatorAction.generateJsFunction()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.executeValidationMethod(Lorg/apache/commons/validator/Field;Ljava/util/Map;Lorg/apache/commons/validator/ValidatorResults;I)Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/u/00231.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:384",
                        "method-b-site": "Field.java:826",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR. Most likely replaced with the empty string because of the StringIndexOutOfBoundsException message (-1), but I can't find a declared variable containing the empty string. StringIndexOutOfBoundsException at ValidatorAction.java:450.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with the modification proposed in snippet - shows that you can indirectly call method-a after method-b.",
        "notes": "stage-0-failure because the DSI replacement with null caused a NullPointerException. method-a generates a new String object using the field variable ValidatorAction.name, and its return value is set to the field variable ValidatorAction.jsFunction. method-b doesn't access or modify that field variable (it runs a configured validation method via reflection). So, this is a case of UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-18-22",
        "inspection-time-in-minutes": 12
    },
    {
        "iid": 85,
        "inspection-start-time": "2022-01-27-18-36",
        "project": "commons-validator",
        "spec-id": "00233",
        "method-a": "org.apache.commons.validator.ValidatorAction.generateJsFunction()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getClassLoader(Ljava/util/Map;)Ljava/lang/ClassLoader;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.ClassLoader",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/u/00233.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:384",
                        "method-b-site": "ValidatorAction.java:534",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR. Most likely replaced with the empty string because of the StringIndexOutOfBoundsException message (-1), but I can't find a declared variable containing the empty string. StringIndexOutOfBoundsException at ValidatorAction.java:450.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with the modification proposed in snippet - shows that you can call method-a after method-b.",
        "notes": "stage-0-failure because the DSI replacement with null caused a StringIndexOutOfBoundsException. method-a generates a new String object using the field variable ValidatorAction.name, and its return value is set to the field variable ValidatorAction.jsFunction. method-b simply retrieves a ClassLoader object from the input parameter (method-b doesn't access or modify any field variables that method-a accesses/impacts). UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-18-42",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 86,
        "inspection-start-time": "2022-01-27-18-42",
        "project": "commons-validator",
        "spec-id": "00234",
        "method-a": "org.apache.commons.validator.ValidatorAction.generateJsFunction()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.util.List",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/u/00234.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:384",
                        "method-b-site": "Field.java:847",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR. Most likely replaced with the empty string because of the StringIndexOutOfBoundsException message (-1), but I can't find a declared variable containing the empty string. StringIndexOutOfBoundsException at ValidatorAction.java:450.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with the modification proposed in snippet - shows that you can call method-a after method-b.",
        "notes": "stage-0-failure because the DSI replacement with null caused a StringIndexOutOfBoundsException. method-a generates a new String object using the field variable ValidatorAction.name, and its return value is set to the field variable ValidatorAction.jsFunction. method-b simply returns an unmodifiable list object of the field variable ValidatorAction.dependencyList (method-b doesn't access or modify any field variables that method-a accesses/impacts). UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-18-54",
        "inspection-time-in-minutes": 12
    },
    {
        "iid": 87,
        "inspection-start-time": "2022-01-27-18-54",
        "project": "commons-validator",
        "spec-id": "00235",
        "method-a": "org.apache.commons.validator.ValidatorAction.generateJsFunction()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 100,
        "code-snippets-file": "snippets/u/00235.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:384",
                        "method-b-site": "ValidatorResources.java:367",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR. Most likely replaced with the empty string because of the StringIndexOutOfBoundsException message (-1), but I can't find a declared variable containing the empty string. StringIndexOutOfBoundsException at ValidatorAction.java:450.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with the modification proposed in snippet - shows that you can call method-a after method-b.",
        "notes": "stage-0-failure because the DSI replacement with null caused a StringIndexOutOfBoundsException. method-a generates a new String object using the field variable ValidatorAction.name, and its return value is set to the field variable ValidatorAction.jsFunction. method-b is a 1-line naive getter for the field variable ValidatorAction.name (ONE_STATELESS_METHOD).",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-19-00",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 88,
        "inspection-start-time": "2022-01-27-19-00",
        "project": "commons-validator",
        "spec-id": "00236",
        "method-a": "org.apache.commons.validator.ValidatorAction.generateJsFunction()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getParameterValues(Ljava/util/Map;)[Ljava/lang/Object;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.Object[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/u/00236.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:384",
                        "method-b-site": "ValidatorAction.java:541",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR. Most likely replaced with the empty string because of the StringIndexOutOfBoundsException message (-1), but I can't find a declared variable containing the empty string. StringIndexOutOfBoundsException at ValidatorAction.java:450.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with the modification proposed in snippet - shows that you can call method-a after method-b.",
        "notes": "stage-0-failure because the DSI replacement with null caused a StringIndexOutOfBoundsException. method-a generates a new String object using the field variable ValidatorAction.name, and its return value is set to the field variable ValidatorAction.jsFunction. method-b applies a map operation to generate a new Object[] containing parts of the content in the field variable ValidatorAction.methodParameterList (method-b doesn't access or modify any field variables that method-a accesses/impacts). UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-19-03",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 89,
        "inspection-start-time": "2022-01-27-19-03",
        "project": "commons-validator",
        "spec-id": "00237",
        "method-a": "org.apache.commons.validator.ValidatorAction.generateJsFunction()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getValidationClassInstance()Ljava/lang/Object;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/u/00237.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:384",
                        "method-b-site": "ValidatorAction.java:551",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR. Most likely replaced with the empty string because of the StringIndexOutOfBoundsException message (-1), but I can't find a declared variable containing the empty string. StringIndexOutOfBoundsException at ValidatorAction.java:450.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with the modification proposed in snippet - shows that you can call method-a after method-b.",
        "notes": "stage-0-failure because the DSI replacement with null caused a StringIndexOutOfBoundsException. method-a generates a new String object using the field variable ValidatorAction.name, and its return value is set to the field variable ValidatorAction.jsFunction. method-b creates a new instance of the Java class that will be used to validate (method-b doesn't access or modify any field variables that method-a accesses/impacts). UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-19-08",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 90,
        "inspection-start-time": "2022-01-27-19-08",
        "project": "commons-validator",
        "spec-id": "00238",
        "method-a": "org.apache.commons.validator.ValidatorAction.generateJsFunction()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 9,
        "code-snippets-file": "snippets/u/00238.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:384",
                        "method-b-site": "ValidatorAction.java:567",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR. Most likely replaced with the empty string because of the StringIndexOutOfBoundsException message (-1), but I can't find a declared variable containing the empty string. StringIndexOutOfBoundsException at ValidatorAction.java:450.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with the modification proposed in snippet - shows that you can call method-a after method-b.",
        "notes": "stage-0-failure because the DSI replacement with null caused a StringIndexOutOfBoundsException. method-a generates a new String object using the field variable ValidatorAction.name, and its return value is set to the field variable ValidatorAction.jsFunction. method-b is an operation that either retrieves a boolean from its Object argument, or performs a check on its Object argument (method-b doesn't access or modify any field variables that method-a uses/influences). UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-19-14",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 91,
        "inspection-start-time": "2022-01-27-19-15",
        "project": "commons-validator",
        "spec-id": "00239",
        "method-a": "org.apache.commons.validator.ValidatorAction.generateJsFunction()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadParameterClasses(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/u/00239.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:384",
                        "method-b-site": "ValidatorAction.java:536",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR. Most likely replaced with the empty string because of the StringIndexOutOfBoundsException message (-1), but I can't find a declared variable containing the empty string. StringIndexOutOfBoundsException at ValidatorAction.java:450.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with the modification proposed in snippet - shows that you can call method-a after method-b.",
        "notes": "stage-0-failure because the DSI replacement with null caused a StringIndexOutOfBoundsException. method-a uses ValidatorAction.name to compute and return a new javascript name, which is set to the field variable ValidatorAction.jsFunction, and method-b uses the field variable ValidatorAction.methodParameterList to construct a Class[] object is set to the field variable ValidatorAction.parameterClasses (method-b doesn't access or modify the field variables used/affected by method-a). UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-19-23",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 92,
        "inspection-start-time": "2022-01-27-19-28",
        "project": "commons-validator",
        "spec-id": "00240",
        "method-a": "org.apache.commons.validator.ValidatorAction.generateJsFunction()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationClass(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/u/00240.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:384",
                        "method-b-site": "ValidatorAction.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR. Most likely replaced with the empty string because of the StringIndexOutOfBoundsException message (-1), but I can't find a declared variable containing the empty string. StringIndexOutOfBoundsException at ValidatorAction.java:450.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with the modification proposed in snippet - shows that you can call method-a after method-b.",
        "notes": "stage-0-failure because the DSI replacement with null caused a StringIndexOutOfBoundsException. method-a uses ValidatorAction.name to compute and return a new javascript name, which is set to the field variable ValidatorAction.jsFunction. method-b either sets the field variable ValidatorAction.validationClass or throws an exception (method-b doesn't access or modify any field variables that method-a uses/impacts). UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-19-32",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 93,
        "inspection-start-time": "2022-01-27-19-39",
        "project": "commons-validator",
        "spec-id": "00241",
        "method-a": "org.apache.commons.validator.ValidatorAction.generateJsFunction()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationMethod()V",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/u/00241.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:384",
                        "method-b-site": "ValidatorAction.java:537",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR. Most likely replaced with the empty string because of the StringIndexOutOfBoundsException message (-1), but I can't find a declared variable containing the empty string. StringIndexOutOfBoundsException at ValidatorAction.java:450.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with the modification proposed in snippet - shows that you can call method-a after method-b.",
        "notes": "stage-0-failure because the DSI replacement with null caused a StringIndexOutOfBoundsException. method-a uses ValidatorAction.name to compute and return a new javascript name, which is set to the field variable ValidatorAction.jsFunction. and method-b either sets the field variable ValidatorAction.validationMethod, or throws an exception (method-b doesn't access or modify any field variables that method-a uses/impacts). UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-19-43",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 94,
        "inspection-start-time": "2022-01-27-19-47",
        "project": "commons-validator",
        "spec-id": "00242",
        "method-a": "org.apache.commons.validator.ValidatorAction.generateJsFunction()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.onlyReturnErrors(Ljava/util/Map;)Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 14,
        "code-snippets-file": "snippets/u/00242.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:384",
                        "method-b-site": "ValidatorAction.java:568",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR. Most likely replaced with the empty string because of the StringIndexOutOfBoundsException message (-1), but I can't find a declared variable containing the empty string. StringIndexOutOfBoundsException at ValidatorAction.java:450.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with the modification proposed in snippet - shows that you can call method-a after method-b.",
        "notes": "stage-0-failure because the DSI replacement with null caused a StringIndexOutOfBoundsException. method-a uses ValidatorAction.name to compute and return a new javascript name, which is set to the field variable ValidatorAction.jsFunction. method-b simply retrieves a boolean value from a particular entry in its Map argument (method-b doesn't access or modify any field variables used/affected by method-a). UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-19-53",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 95,
        "inspection-start-time": "2022-01-27-20-06",
        "project": "commons-validator",
        "spec-id": "00243",
        "method-a": "org.apache.commons.validator.ValidatorAction.generateJsFunction()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.readJavascriptFile(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 22,
        "test-methods-mine-count": 111,
        "code-snippets-file": "snippets/u/00243.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:384",
                        "method-b-site": "ValidatorAction.java:393",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR. Most likely replaced with the empty string because of the StringIndexOutOfBoundsException message (-1), but I can't find a declared variable containing the empty string. StringIndexOutOfBoundsException at ValidatorAction.java:450.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with modifications proposed in snippet",
        "notes": "stage-0-failure because the DSI replacement caused a StringIndexOutOfBoundsException. Here, the use case displays a possible relationship between method-a and method-b. The return value of method-a is set to be the field variable ValidatorAction.jsFunction. The method ValidatorAction.formatJavascriptFileName() uses the field variable ValidatorAction.jsFunction in order to produce an argument to method-b. In some sense, this could illustrate parts of a \"bigger spec\", but I feel like it's not a strong enough connection to be seen as a spec. Mainly, because this connection hinges on the fact that the return value of method-a is set to the field variable ValidatorAction.jsFunction, otherwise, method-a is a method that doesn't change any field variables. DECISION: this is a CONNECTION_DOES_NOT_NECESSITATE_ORDERING case. The connection is only made by the fact that ValidatorAction.loadJavascriptFunction() sets the return value of method-a to the field variable ValidatorAction.jsFunction, and the specific input string to method-b depended on that field variable. method-a and method-b by themselves are simply methods that apply computations to their String arguments and return a String object, so there is no direct ordering association between the two methods themselves.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-20-24",
        "inspection-time-in-minutes": 18
    },
    {
        "iid": 96,
        "inspection-start-time": "2022-01-27-20-24",
        "project": "commons-validator",
        "spec-id": "00244",
        "method-a": "org.apache.commons.validator.ValidatorAction.getClassLoader(Ljava/util/Map;)Ljava/lang/ClassLoader;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getParameterValues(Ljava/util/Map;)[Ljava/lang/Object;",
        "method-a-return-type": "java.lang.ClassLoader",
        "method-b-return-type": "java.lang.Object[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/u/00244.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:534",
                        "method-b-site": "ValidatorAction.java:541",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Technically NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at ValidatorAction.java:626, but the exception got swallowed by the catch block on ValidatorAction.java:579, so the test still passed. SWALLOWED_EXCEPTION",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with ValidatorAction.java:541 moved to right before the if on ValidatorAction.java:532.",
        "notes": "method-a retrieves a ClassLoader object from a particular entry in the Map argument, and method-b uses its Map argument and the field variable ValidatorAction.methodParameterList to construct a new array. Neither of them modifies the input and/or any field variables. This is a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-20-39",
        "inspection-time-in-minutes": 15
    },
    {
        "iid": 97,
        "inspection-start-time": "2022-01-27-21-17",
        "project": "commons-validator",
        "spec-id": "00245",
        "method-a": "org.apache.commons.validator.ValidatorAction.getClassLoader(Ljava/util/Map;)Ljava/lang/ClassLoader;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getValidationClassInstance()Ljava/lang/Object;",
        "method-a-return-type": "java.lang.ClassLoader",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/u/00245.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:534",
                        "method-b-site": "ValidatorAction.java:551",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Technically NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at ValidatorAction.java:626, but the exception got swallowed by the catch block on ValidatorAction.java:579, so the test still passed. SWALLOWED_EXCEPTION",
                "notes": ""
            }
        ],
        "verdict": "true-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with ValidatorAction.java:551 moved to right before the if on ValidatorAction.java:532.",
        "notes": "method-a retrieves a ClassLoader object from a particular entry in the Map argument. ValidatorAction.loadValidationClass() uses the return value of method-a to set up the field variable ValidatorAction.validationClass, and later ValidatorAction.loadValidationMethod() uses the field variable ValidatorAction.validationClass to set up the field variable ValidatorAction.validationMethod. method-b relies on both ValidatorAction.validationClass and ValidatorAction.validatorMethod to be non-null values, but that depends on method-a's return value being passed to ValidatorAction.loadValidationClass(). Hence, this seems like a true spec.",
        "findings": "Seems like a part of a bigger spec to me. Type-c: method-b is always preceded by method-a",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-21-31",
        "inspection-time-in-minutes": 14
    },
    {
        "iid": 98,
        "inspection-start-time": "2022-01-27-21-31",
        "project": "commons-validator",
        "spec-id": "00246",
        "method-a": "org.apache.commons.validator.ValidatorAction.getClassLoader(Ljava/util/Map;)Ljava/lang/ClassLoader;",
        "method-b": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-a-return-type": "java.lang.ClassLoader",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 9,
        "test-methods-mine-count": 56,
        "code-snippets-file": "snippets/u/00246.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:534",
                        "method-b-site": "ValidatorAction.java:567",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Technically NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at ValidatorAction.java:626, but the exception got swallowed by the catch block on ValidatorAction.java:579, so the test still passed. SWALLOWED_EXCEPTION",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with ValidatorAction.java:541 moved to right before the if on ValidatorAction.java:532.",
        "notes": "method-a retrieves a ClassLoader object from a particular entry in the Map argument, and method-b either returns the boolean value of its argument if it is a Boolean object or returns whether the argument is null otherwise, which is not directly related to method-a. Neither of them modifies the input and/or any field variables. This is a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-21-35",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 99,
        "inspection-start-time": "2022-01-27-23-37",
        "project": "commons-validator",
        "spec-id": "00251",
        "method-a": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-b": "org.apache.commons.validator.ValidatorAction.executeValidationMethod(Lorg/apache/commons/validator/Field;Ljava/util/Map;Lorg/apache/commons/validator/ValidatorResults;I)Z",
        "method-a-return-type": "java.util.List",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/u/00251.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:847",
                        "method-b-site": "Field.java:826",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Field.java:849.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The spec is spurious because method-a simply returns an unmodifiable list containing the contents of ValidatorAction.dependencyList, and while the use case illustrates that the return value of method-a could be used to set up an object that calls method-b, there isn't a direct relationship between method-a and method-b themselves - UNRELATED_STATEFUL_METHODS. Note that while there is some recursion in the code, the test doesn't actually enter the recursive calls because method-a returns an empty list.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-23-57",
        "inspection-time-in-minutes": 20
    },
    {
        "iid": 100,
        "inspection-start-time": "2022-01-27-23-57",
        "project": "commons-validator",
        "spec-id": "00252",
        "method-a": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getClassLoader(Ljava/util/Map;)Ljava/lang/ClassLoader;",
        "method-a-return-type": "java.util.List",
        "method-b-return-type": "java.lang.ClassLoader",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/u/00252.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:847",
                        "method-b-site": "ValidatorAction.java:534",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Field.java:849.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The spec is spurious because method-a simply returns an unmodifiable list containing the contents of ValidatorAction.dependencyList, and while the use case illustrates that the return value of method-a could be used to set up an object that indirectly calls method-b, there isn't a direct relationship between method-a and method-b themselves - UNRELATED_STATEFUL_METHODS. method-b simply retrieves some data from its parameter. Note that while there is some recursion in the code, the test doesn't actually enter the recursive calls because method-a returns an empty list.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-00-01",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 101,
        "inspection-start-time": "2022-01-28-00-01",
        "project": "commons-validator",
        "spec-id": "00253",
        "method-a": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getParameterValues(Ljava/util/Map;)[Ljava/lang/Object;",
        "method-a-return-type": "java.util.List",
        "method-b-return-type": "java.lang.Object[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/u/00253.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:847",
                        "method-b-site": "ValidatorAction.java:541",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Field.java:849.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The spec is spurious because method-a simply returns an unmodifiable list containing the contents of ValidatorAction.dependencyList, and while the use case illustrates that the return value of method-a **could** be used to set up an object that indirectly calls method-b (via the recursive case), there isn't a direct relationship between method-a and method-b themselves - UNRELATED_STATEFUL_METHODS. method-b is a map operation over the input list returning a list of corresponding values, using the field variable ValidatorAction.methodParameterList. Note that while there is some recursion in the code, the test doesn't actually enter the recursive calls because method-a returns an empty list.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-00-10",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 102,
        "inspection-start-time": "2022-01-28-00-10",
        "project": "commons-validator",
        "spec-id": "00254",
        "method-a": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getValidationClassInstance()Ljava/lang/Object;",
        "method-a-return-type": "java.util.List",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/u/00254.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:847",
                        "method-b-site": "ValidatorAction.java:551",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Field.java:849.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The spec is spurious because method-a simply returns an unmodifiable list containing the contents of ValidatorAction.dependencyList, and while the use case illustrates that the return value of method-a **could** be used to set up an object that indirectly calls method-b (via the recursive case), there isn't a direct relationship between method-a and method-b themselves - UNRELATED_STATEFUL_METHODS. Additionally, method-b itself is not related to method-a itself because method-a is only affected by the value of the field variable ValidatorAction.dependencyList, and method-b does not access or modify that field variable. method-b accesses the field variables ValidatorAction.validationMethod, ValidatorAction.instance, and ValidatorAction.validationClass, and modifies the field variables ValidatorAction.instance. Note that while there is some recursion in the code, the test doesn't actually enter the recursive calls because method-a returns an empty list.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-00-14",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 103,
        "inspection-start-time": "2022-01-28-00-14",
        "project": "commons-validator",
        "spec-id": "00255",
        "method-a": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-b": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-a-return-type": "java.util.List",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 9,
        "test-methods-mine-count": 56,
        "code-snippets-file": "snippets/u/00255.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:847",
                        "method-b-site": "ValidatorAction.java:567",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Field.java:849.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The spec is spurious because method-a simply returns an unmodifiable list containing the contents of ValidatorAction.dependencyList, and while the use case illustrates that the return value of method-a **could** be used to set up an object that indirectly calls method-b (via the recursive case), there isn't a direct relationship between method-a and method-b themselves - UNRELATED_STATEFUL_METHODS. Additionally, method-b itself is not related to method-a itself because method-a is only affected by the value of the field variable ValidatorAction.dependencyList, and method-b does not access or modify that field variable. method-b either returns the boolean value of its argument if it is a Boolean object, or returns whether the argument is not null otherwise. Note that while there is some recursion in the code, the test doesn't actually enter the recursive calls because method-a returns an empty list.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-00-17",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 104,
        "inspection-start-time": "2022-01-28-00-26",
        "project": "commons-validator",
        "spec-id": "00256",
        "method-a": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadParameterClasses(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "java.util.List",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/u/00256.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:847",
                        "method-b-site": "ValidatorAction.java:536",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Field.java:849.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The spec is spurious because method-a simply returns an unmodifiable list containing the contents of ValidatorAction.dependencyList, and while the use case illustrates that the return value of method-a **could** be used to set up an object that indirectly calls method-b (via the recursive case), there isn't a direct relationship between method-a and method-b themselves - UNRELATED_STATEFUL_METHODS. Additionally, method-b itself is not related to method-a itself because method-a is only affected by the value of the field variable ValidatorAction.dependencyList, and method-b does not access or modify that field variable. method-b accesses the field variables ValidatorAction.parameterClasses, ValidatorAction.methodParameterList, and modifies the field variable ValidatorAction.parameterClasses. Note that while there is some recursion in the code, the test doesn't actually enter the recursive calls because method-a returns an empty list.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-00-29",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 105,
        "inspection-start-time": "2022-01-28-00-49",
        "project": "commons-validator",
        "spec-id": "00257",
        "method-a": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationClass(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "java.util.List",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/u/00257.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:847",
                        "method-b-site": "ValidatorAction.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Field.java:849.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The spec is spurious because method-a simply returns an unmodifiable list containing the contents of ValidatorAction.dependencyList, and while the use case illustrates that the return value of method-a **could** be used to set up an object that indirectly calls method-b (via the recursive case), there isn't a direct relationship between method-a and method-b themselves - UNRELATED_STATEFUL_METHODS. Additionally, method-b itself is not related to method-a itself because method-a is only affected by the value of the field variable ValidatorAction.dependencyList, and method-b does not access or modify that field variable. method-b accesses the field variables ValidatorAction.validationClass, ValidatorAction.classname, and modifies the field variable ValidatorAction.validationClass. Note that while there is some recursion in the code, the test doesn't actually enter the recursive calls because method-a returns an empty list.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-00-52",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 106,
        "inspection-start-time": "2022-01-28-00-52",
        "project": "commons-validator",
        "spec-id": "00258",
        "method-a": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationMethod()V",
        "method-a-return-type": "java.util.List",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/u/00258.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:847",
                        "method-b-site": "ValidatorAction.java:537",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Field.java:849.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The spec is spurious because method-a simply returns an unmodifiable list containing the contents of ValidatorAction.dependencyList, and while the use case illustrates that the return value of method-a **could** be used to set up an object that indirectly calls method-b (via the recursive case), there isn't a direct relationship between method-a and method-b themselves - UNRELATED_STATEFUL_METHODS. Additionally, method-b itself is not related to method-a itself because method-a is only affected by the value of the field variable ValidatorAction.dependencyList, and method-b does not access or modify that field variable. method-b is only affected by its argument, accesses the field variable ValidatorAction.validationClass, and it sets a value for the field variable ValidatorAction.validationMethod. Note that while there is some recursion in the code, the test doesn't actually enter the recursive calls because method-a returns an empty list.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-00-54",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 107,
        "inspection-start-time": "2022-01-28-00-54",
        "project": "commons-validator",
        "spec-id": "00259",
        "method-a": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-b": "org.apache.commons.validator.ValidatorAction.onlyReturnErrors(Ljava/util/Map;)Z",
        "method-a-return-type": "java.util.List",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 30,
        "code-snippets-file": "snippets/u/00259.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:847",
                        "method-b-site": "ValidatorAction.java:568",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Field.java:849.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The spec is spurious because method-a simply returns an unmodifiable list containing the contents of ValidatorAction.dependencyList, and while the use case illustrates that the return value of method-a **could** be used to set up an object that indirectly calls method-b (via the recursive case), there isn't a direct relationship between method-a and method-b themselves - UNRELATED_STATEFUL_METHODS. Additionally, method-b itself is not related to method-a itself because method-a is only affected by the value of the field variable ValidatorAction.dependencyList, and method-b does not access or modify that field variable. method-b retrieves the onlyReturnErrors boolean value from a particular entry in its Map argument. Note that while there is some recursion in the code, the test doesn't actually enter the recursive calls because method-a returns an empty list.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-00-59",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 108,
        "inspection-start-time": "2022-01-28-01-00",
        "project": "commons-validator",
        "spec-id": "00260",
        "method-a": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.executeValidationMethod(Lorg/apache/commons/validator/Field;Ljava/util/Map;Lorg/apache/commons/validator/ValidatorResults;I)Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/u/00260.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:367",
                        "method-b-site": "Field.java:826",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "GOOD_EXAMPLE: Most likely replaced the return value of method-a (which was supposed to be \"date\") with null, which caused the corresponding ValidationAction object to be indexed under the key null instead of \"date\". Subsequently, the test run tried to look for a ValidationAction object indexed under \"date\", but couldn't find one, so it threw an exception at Field.java:930 (which is before method-b is called). Refer to snippet for more info.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorAction.name. method-b uses reflection to execute the particular validation method on the Field, and does not access/modify ValidatorAction.name. Hence, there is no direct relationship between method-a and method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-01-19",
        "inspection-time-in-minutes": 19
    },
    {
        "iid": 109,
        "inspection-start-time": "2022-01-28-01-30",
        "project": "commons-validator",
        "spec-id": "00261",
        "method-a": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getClassLoader(Ljava/util/Map;)Ljava/lang/ClassLoader;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.ClassLoader",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 39,
        "code-snippets-file": "snippets/u/00261.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:367",
                        "method-b-site": "ValidatorAction.java:534",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "GOOD_EXAMPLE: Most likely replaced the return value of method-a (which was supposed to be \"date\") with null, which caused the corresponding ValidationAction object to be indexed under the key null instead of \"date\". Subsequently, the test run tried to look for a ValidationAction object indexed under \"date\", but couldn't find one, so it threw an exception at Field.java:930 (which is before method-b is called). Refer to snippet for more info.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorAction.name. method-b does not modify or access the value of ValidatorAction.name, it retrieves a ClassLoader object from a particular entry in its Map argument. Hence, there is no direct relationship between method-a and method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-01-34",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 110,
        "inspection-start-time": "2022-01-28-01-34",
        "project": "commons-validator",
        "spec-id": "00262",
        "method-a": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.util.List",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/u/00262.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:367",
                        "method-b-site": "Field.java:847",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "GOOD_EXAMPLE: Most likely replaced the return value of method-a (which was supposed to be \"date\") with null, which caused the corresponding ValidationAction object to be indexed under the key null instead of \"date\". Subsequently, the test run tried to look for a ValidationAction object indexed under \"date\", but couldn't find one, so it threw an exception at Field.java:930 (which is before method-b is called). Refer to snippet for more info.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorAction.name, and method-b simply retrieves an unmodifiable list version of the field variable ValidatorAction.dependencyList. Hence, there is no direct relationship between method-a and method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-01-42",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 111,
        "inspection-start-time": "2022-01-28-01-42",
        "project": "commons-validator",
        "spec-id": "00263",
        "method-a": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getParameterValues(Ljava/util/Map;)[Ljava/lang/Object;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.Object[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/u/00263.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:367",
                        "method-b-site": "ValidatorAction.java:541",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "GOOD_EXAMPLE: Most likely replaced the return value of method-a (which was supposed to be \"date\") with null, which caused the corresponding ValidationAction object to be indexed under the key null instead of \"date\". Subsequently, the test run tried to look for a ValidationAction object indexed under \"date\", but couldn't find one, so it threw an exception at Field.java:930 (which is before method-b is called). Refer to snippet for more info.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorAction.name. method-b does not modify or access the value of ValidatorAction.name; it uses its Map argument and the field variable ValidatorAction.methodParameterList to construct and return a list that contains the corresponding values. Hence, there is no direct relationship between method-a and method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-01-49",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 112,
        "inspection-start-time": "2022-01-28-01-58",
        "project": "commons-validator",
        "spec-id": "00264",
        "method-a": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getValidationClassInstance()Ljava/lang/Object;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/u/00264.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:367",
                        "method-b-site": "ValidatorAction.java:551",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "GOOD_EXAMPLE: Most likely replaced the return value of method-a (which was supposed to be \"date\") with null, which caused the corresponding ValidationAction object to be indexed under the key null instead of \"date\". Subsequently, the test run tried to look for a ValidationAction object indexed under \"date\", but couldn't find one, so it threw an exception at Field.java:930 (which is before method-b is called). Refer to snippet for more info.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorAction.name. method-b does not modify or access the value of ValidatorAction.name (and its argument is not related to the field value as well); method-b accesses the field variables ValidatorAction.validationMethod, ValidatorAction.instance, ValidatorAction.validationClass, and sets the field variable ValidatorAction.instance. Hence, there is no direct relationship between method-a and method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-02-02",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 113,
        "inspection-start-time": "2022-01-28-02-02",
        "project": "commons-validator",
        "spec-id": "00265",
        "method-a": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 9,
        "code-snippets-file": "snippets/u/00265.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:367",
                        "method-b-site": "ValidatorAction.java:567",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "GOOD_EXAMPLE: Most likely replaced the return value of method-a (which was supposed to be \"date\") with null, which caused the corresponding ValidationAction object to be indexed under the key null instead of \"date\". Subsequently, the test run tried to look for a ValidationAction object indexed under \"date\", but couldn't find one, so it threw an exception at Field.java:930 (which is before method-b is called). Refer to snippet for more info.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorAction.name. method-b does not modify or access any field variables (and its argument is not related to the field value as well); it returns either the boolean value of the argument if it is a Boolean object, or whether the argument is not null otherwise. Hence, there is no direct relationship between method-a and method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-02-04",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 114,
        "inspection-start-time": "2022-01-28-02-04",
        "project": "commons-validator",
        "spec-id": "00266",
        "method-a": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadParameterClasses(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 39,
        "code-snippets-file": "snippets/u/00266.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:367",
                        "method-b-site": "ValidatorAction.java:536",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "GOOD_EXAMPLE: Most likely replaced the return value of method-a (which was supposed to be \"date\") with null, which caused the corresponding ValidationAction object to be indexed under the key null instead of \"date\". Subsequently, the test run tried to look for a ValidationAction object indexed under \"date\", but couldn't find one, so it threw an exception at Field.java:930 (which is before method-b is called). Refer to snippet for more info.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorAction.name. method-b does not modify or access the field variable ValidatorAction.name (and its argument is not related to the field value as well); it accesses the field variables ValidatorAction.parameterClasses, ValidatorAction.methodParameterList, and modifies the field variable ValidatorAction.parameterClasses. Hence, there is no direct relationship between method-a and method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-02-06",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 115,
        "inspection-start-time": "2022-01-28-02-06",
        "project": "commons-validator",
        "spec-id": "00267",
        "method-a": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationClass(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 39,
        "code-snippets-file": "snippets/u/00267.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:367",
                        "method-b-site": "ValidatorAction.java:537",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "GOOD_EXAMPLE: Most likely replaced the return value of method-a (which was supposed to be \"date\") with null, which caused the corresponding ValidationAction object to be indexed under the key null instead of \"date\". Subsequently, the test run tried to look for a ValidationAction object indexed under \"date\", but couldn't find one, so it threw an exception at Field.java:930 (which is before method-b is called). Refer to snippet for more info.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorAction.name. method-b does not modify or access the field variable ValidatorAction.name (and its argument is a ClassLoader object which is not related to the field variable as well); it accesses the field variables ValidatorAction.validationClass and ValidatorAction.classname, and modifies the field variable ValidatorAction.validationClass (or throws an exception). Hence, there is no direct relationship between method-a and method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-02-08",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 116,
        "inspection-start-time": "2022-01-28-02-08",
        "project": "commons-validator",
        "spec-id": "00268",
        "method-a": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationMethod()V",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 39,
        "code-snippets-file": "snippets/u/00268.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:367",
                        "method-b-site": "ValidatorAction.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "GOOD_EXAMPLE: Most likely replaced the return value of method-a (which was supposed to be \"date\") with null, which caused the corresponding ValidationAction object to be indexed under the key null instead of \"date\". Subsequently, the test run tried to look for a ValidationAction object indexed under \"date\", but couldn't find one, so it threw an exception at Field.java:930 (which is before method-b is called). Refer to snippet for more info.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorAction.name. method-b does not modify or access the field variable ValidatorAction.name (it also does not have any arguments); it accesses the field variabes ValidatorAction.validationMethod, ValidatorAction.validationClass, ValidatorAction.method, and ValidatorAction.parameterClasses, and modifies the field variable ValidatorAction.validationMethod (or throws an exception). Hence, there is no direct relationship between method-a and method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-02-12",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 117,
        "inspection-start-time": "2022-01-28-02-12",
        "project": "commons-validator",
        "spec-id": "00269",
        "method-a": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.onlyReturnErrors(Ljava/util/Map;)Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 13,
        "code-snippets-file": "snippets/u/00269.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:367",
                        "method-b-site": "ValidatorAction.java:568",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "GOOD_EXAMPLE: Most likely replaced the return value of method-a (which was supposed to be \"date\") with null, which caused the corresponding ValidationAction object to be indexed under the key null instead of \"date\". Subsequently, the test run tried to look for a ValidationAction object indexed under \"date\", but couldn't find one, so it threw an exception at Field.java:930 (which is before method-b is called). Refer to snippet for more info.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorAction.name. method-b does not modify or access the field variable ValidatorAction.name (its argument comes from an operation that is not related to method-a as well); it retrieves the onlyReturnErrors boolean from a particular entry in the Map argument. Hence, there is no direct relationship between method-a and method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-02-16",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 118,
        "inspection-start-time": "2022-01-28-02-30",
        "project": "commons-validator",
        "spec-id": "00271",
        "method-a": "org.apache.commons.validator.ValidatorAction.getParameterValues(Ljava/util/Map;)[Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-a-return-type": "java.lang.Object[]",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 9,
        "test-methods-mine-count": 56,
        "code-snippets-file": "snippets/u/00271.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:541",
                        "method-b-site": "ValidatorAction.java:567",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with null, which caused an IllegalArgumentException on the attempt to reflection (that was swallowed and then thrown as a ValidatorException()). The reason why the IllegalArgumentException was thrown was because the return value of method-a was used as the list of parameters that would go into the Class object returned by method-b.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with modifications proposed by snippet shows a use case that connects method-a and method-b",
        "notes": "The argument to method-b is the return value of the method called via reflection, of which parameters were provided by the return value of method-a. method-b is essentially a check on whether the reflective call passed or not, which is used to determine whether the result should be collected. This is the only use case of method-b. I think that one can argue that this is a true spec because you can't process the result of invoking a method if you don't have the parameters for it, but one can also say that there is nothing directly linking these two methods. DECISION: In general, method-b is a utility method that either returns the boolean value of the Object argument if it is a Boolean object, or whether it is non-null otherwise. This implies that method-b can be called at any point regardless of method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-02-49",
        "inspection-time-in-minutes": 19
    },
    {
        "iid": 119,
        "inspection-start-time": "2022-01-28-02-49",
        "project": "commons-validator",
        "spec-id": "00272",
        "method-a": "org.apache.commons.validator.ValidatorAction.getParameterValues(Ljava/util/Map;)[Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.ValidatorAction.onlyReturnErrors(Ljava/util/Map;)Z",
        "method-a-return-type": "java.lang.Object[]",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 30,
        "code-snippets-file": "snippets/u/00272.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:541",
                        "method-b-site": "ValidatorAction.java:568",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with null, which caused an IllegalArgumentException on the attempt to reflection (that was swallowed and then thrown as a ValidatorException(). The reason why the IllegalArgumentException was thrown was because the return value of method-a was used as the list of parameters that would go into the Class object returned by method-b.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with modifications proposed by snippet",
        "notes": "method-a creates a list using its argument and the field value ValidatorAction.methodParameterList, and method-b retrieves the onlyReturnErrors setting from a particular entry in its Map argument, so these are two unrelated methods - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-02-53",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 120,
        "inspection-start-time": "2022-01-28-19-29",
        "project": "commons-validator",
        "spec-id": "00276",
        "method-a": "org.apache.commons.validator.ValidatorAction.init()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.formatJavascriptFileName()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 22,
        "test-methods-mine-count": 111,
        "code-snippets-file": "snippets/u/00276.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:365",
                        "method-b-site": "ValidatorAction.java:387",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-19-32",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 121,
        "inspection-start-time": "2022-01-28-19-32",
        "project": "commons-validator",
        "spec-id": "00277",
        "method-a": "org.apache.commons.validator.ValidatorAction.init()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.generateJsFunction()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 22,
        "test-methods-mine-count": 111,
        "code-snippets-file": "snippets/u/00277.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:365",
                        "method-b-site": "ValidatorAction.java:384",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-19-34",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 122,
        "inspection-start-time": "2022-01-28-19-52",
        "project": "commons-validator",
        "spec-id": "00284",
        "method-a": "org.apache.commons.validator.ValidatorAction.init()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.javascriptAlreadyLoaded()Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 22,
        "test-methods-mine-count": 111,
        "code-snippets-file": "snippets/u/00284.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:365",
                        "method-b-site": "ValidatorAction.java:375",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-19-53",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 123,
        "inspection-start-time": "2022-01-28-19-53",
        "project": "commons-validator",
        "spec-id": "00285",
        "method-a": "org.apache.commons.validator.ValidatorAction.init()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadJavascriptFunction()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 22,
        "test-methods-mine-count": 111,
        "code-snippets-file": "snippets/u/00285.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:365",
                        "method-b-site": "ValidatorAction.java:359",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-19-55",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 124,
        "inspection-start-time": "2022-01-28-20-09",
        "project": "commons-validator",
        "spec-id": "00290",
        "method-a": "org.apache.commons.validator.ValidatorAction.init()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.readJavascriptFile(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 22,
        "test-methods-mine-count": 111,
        "code-snippets-file": "snippets/u/00290.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:365",
                        "method-b-site": "ValidatorAction.java:393",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-20-11",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 125,
        "inspection-start-time": "2022-01-28-20-11",
        "project": "commons-validator",
        "spec-id": "00291",
        "method-a": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.onlyReturnErrors(Ljava/util/Map;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 30,
        "code-snippets-file": "snippets/u/00291.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:567",
                        "method-b-site": "ValidatorAction.java:568",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: method-a was supposed to return true in this test, but DSI replaced the return value of method-a with the default value false. The negation of the return value of method-a was in a short circuit OR expression with the call to method-b; since method-a was replaced with false, the expression cut off at that point, and method-b was never called. Hence, the DSI experiment resulted in stage-0-failure, and method-b was never called.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "UNRELATED_STATEFUL_METHODS: method-a returns the boolean value of its input if the input is a Boolean object, or whether the input is a non-null value otherwise, and method-b retrieves the onlyReturnErrors boolean value from a particular entry in its Map argument. Hence, there's no ordering relationship between these two methods.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-20-20",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 126,
        "inspection-start-time": "2022-01-28-22-14",
        "project": "commons-validator",
        "spec-id": "00307",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadJavascriptFunction()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.formatJavascriptFileName()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 22,
        "test-methods-mine-count": 111,
        "code-snippets-file": "snippets/u/00307.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:359",
                        "method-b-site": "ValidatorAction.java:387",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-22-16",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 127,
        "inspection-start-time": "2022-01-28-22-16",
        "project": "commons-validator",
        "spec-id": "00308",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadJavascriptFunction()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.generateJsFunction()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 22,
        "test-methods-mine-count": 111,
        "code-snippets-file": "snippets/u/00308.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:359",
                        "method-b-site": "ValidatorAction.java:384",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-22-18",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 128,
        "inspection-start-time": "2022-01-28-22-43",
        "project": "commons-validator",
        "spec-id": "00315",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadJavascriptFunction()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.javascriptAlreadyLoaded()Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 22,
        "test-methods-mine-count": 111,
        "code-snippets-file": "snippets/u/00315.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:359",
                        "method-b-site": "ValidatorAction.java:375",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-22-45",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 129,
        "inspection-start-time": "2022-01-28-23-03",
        "project": "commons-validator",
        "spec-id": "00320",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadJavascriptFunction()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.readJavascriptFile(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 22,
        "test-methods-mine-count": 111,
        "code-snippets-file": "snippets/u/00320.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:359",
                        "method-b-site": "ValidatorAction.java:393",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-23-06",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 130,
        "inspection-start-time": "2022-01-28-23-06",
        "project": "commons-validator",
        "spec-id": "00321",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadParameterClasses(Ljava/lang/ClassLoader;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getParameterValues(Ljava/util/Map;)[Ljava/lang/Object;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.Object[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/u/00321.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:536",
                        "method-b-site": "ValidatorAction.java:541",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test failed because method-a was needed in order to populate the field variable ValidatorAction.parameterClasses; otherwise the method retrieval in ValidatorAction.loadValidationMethod() would fail and throw an exception. Refer to snippet for more info."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with ValidatorAction.java:541 moved to before ValidatorAction.java:536",
        "notes": "method-a accesses the field variables ValidatorAction.parameterClasses, ValidatorAction.methodParameterList, and modifies the field variable ValidatorAction.parameterClasses (or throws an exception). method-b uses its argument and accesses the field variable ValidatorAction.methodParameterList in order to construct a new list object containing corresponding values. method-a and method-b both access the field variable ValidatorAction.methodParameterList, but other than that they have no relation. So, there is no temporal ordering relation between method-a and method-b - CONNECTION_DOES_NOT_NECESSITATE_ORDERING.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-23-16",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 131,
        "inspection-start-time": "2022-01-28-23-16",
        "project": "commons-validator",
        "spec-id": "00322",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadParameterClasses(Ljava/lang/ClassLoader;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getValidationClassInstance()Ljava/lang/Object;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/u/00322.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:536",
                        "method-b-site": "ValidatorAction.java:551",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test failed because method-a was needed in order to populate the field variable ValidatorAction.parameterClasses; otherwise the method retrieval in ValidatorAction.loadValidationMethod() would fail and throw an exception. Refer to snippet for more info."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with modifications proposed in snippet",
        "notes": "method-a accesses the field variables ValidatorAction.parameterClasses, ValidatorAction.methodParameterList, and modifies the field variable ValidatorAction.parameterClasses (or throws an exception). method-b accesses the field variables ValidatorAction.validationClass, ValidatorAction.instance, and ValidatorAction.validationMethod, and modifies the field variable ValidatorAction.instance. So, there is no temporal ordering relation between method-a and method-b - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-23-23",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 132,
        "inspection-start-time": "2022-01-29-00-10",
        "project": "commons-validator",
        "spec-id": "00323",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadParameterClasses(Ljava/lang/ClassLoader;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 9,
        "test-methods-mine-count": 56,
        "code-snippets-file": "snippets/u/00323.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:536",
                        "method-b-site": "ValidatorAction.java:567",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test failed because method-a was needed in order to populate the field variable ValidatorAction.parameterClasses; otherwise the method retrieval in ValidatorAction.loadValidationMethod() would fail and throw an exception. Refer to snippet for more info."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with modifications in snippet",
        "notes": "method-a accesses the field variables ValidatorAction.parameterClasses, ValidatorAction.methodParameterList, and modifies the field variable ValidatorAction.parameterClasses (or throws an exception). The use case shows that method-a is called before method-b for a reason; method-a is necessary for the reflective call to the validation method, and method-b evaluates the result of the reflective call to the validation method. One could potentially argue that there is a kind of transitive spec relationship between method-a and method-b, but I'm not sure whether method-a always ought to be called before method-b in general, because method-b simply performs some checks/retrieves a value from the argument. DECISION: This is a spurious spec because method-b by itself is simply an utility method that returns either the boolean value of the Object argument if it was a Boolean object, or a non-nullness check of the argument otherwise. This means that method-b can be called anytime regardless of method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-00-19",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 133,
        "inspection-start-time": "2022-01-29-00-25",
        "project": "commons-validator",
        "spec-id": "00325",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadParameterClasses(Ljava/lang/ClassLoader;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.onlyReturnErrors(Ljava/util/Map;)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 41,
        "code-snippets-file": "snippets/u/00325.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:536",
                        "method-b-site": "ValidatorAction.java:568",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "method-a was needed in order to populate the field variable ValidatorAction.parameterClasses; otherwise the method retrieval in ValidatorAction.loadValidationMethod() would fail and throw an exception. Refer to snippet for more info."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with modifications proposed in snippet",
        "notes": "method-a accesses the field values ValidatorAction.parameterClasses and ValidatorAction.methodParameterList, and modifies the field value ValidatorAction.parameterClasses. method-b doesn't access or modify any field variables, and simply retrieves the onlyReturnErrors data from a particular entry in the Map argument (which is not related to the field variable that method-a modifies). Hence, it seems reasonable to conclude that this is a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-00-29",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 134,
        "inspection-start-time": "2022-01-29-00-29",
        "project": "commons-validator",
        "spec-id": "00326",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadValidationClass(Ljava/lang/ClassLoader;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getParameterValues(Ljava/util/Map;)[Ljava/lang/Object;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.Object[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/u/00326.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:535",
                        "method-b-site": "ValidatorAction.java:541",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "method-a was needed in order to populate the field variable ValidatorAction.validationClass; otherwise the invocation in ValidatorAction.loadValidationMethod() would throw a NullPointerException. However, the test still passed because SWALLOWED_EXCEPTION. Refer to snippet for more info."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with modifications proposed in snippet",
        "notes": "method-a accesses the field variables ValidatorAction.validationClass and ValidatorAction.classname, and modifies the field value ValidatorAction.validationClass (or throws an exception). method-b only accesses the field value ValidatorAction.methodParameterList, which is not related to the field variable that method-a modifies. method-b uses its Map argument and ValidatorAction.methodParameterList in order to construct and return a list of corresponding values. Hence, it seems reasonable to conclude that this is a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-00-36",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 135,
        "inspection-start-time": "2022-01-29-00-36",
        "project": "commons-validator",
        "spec-id": "00327",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadValidationClass(Ljava/lang/ClassLoader;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getValidationClassInstance()Ljava/lang/Object;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/u/00327.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:535",
                        "method-b-site": "ValidatorAction.java:551",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "method-a was needed in order to populate the field variable ValidatorAction.validationClass; otherwise the invocation in ValidatorAction.loadValidationMethod() would throw a NullPointerException. However, the test still passed because SWALLOWED_EXCEPTION. Refer to snippet for more info."
            }
        ],
        "verdict": "true-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with modifications proposed in snippet",
        "notes": "method-a accesses the field variables ValidatorAction.validationClass and ValidatorAction.classname, and modifies the field value ValidatorAction.validationClass (or throws an exception). method-b accesses ValidatorAction.validationClass (along with the field variables ValidatorAction.validationMethod and ValidatorAction.instance). So, if method-a was not called before method-b, then method-b would throw a NullPointerException, given that method-a is the only location in the project where ValidatorAction.validationClass is set. Hence, this is a true spec.",
        "findings": "Type-c: method-b is always preceded by method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-00-43",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 136,
        "inspection-start-time": "2022-01-29-00-43",
        "project": "commons-validator",
        "spec-id": "00328",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadValidationClass(Ljava/lang/ClassLoader;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 9,
        "test-methods-mine-count": 56,
        "code-snippets-file": "snippets/u/00328.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:535",
                        "method-b-site": "ValidatorAction.java:567",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "method-a was needed in order to populate the field variable ValidatorAction.validationClass; otherwise the invocation in ValidatorAction.loadValidationMethod() would throw a NullPointerException. However, the test still passed because SWALLOWED_EXCEPTION. Refer to snippet for more info."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "precondition",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with modifications as proposed in snippet.",
        "notes": "method-a accesses the field variables ValidatorAction.validationClass and ValidatorAction.classname, and modifies the field value ValidatorAction.validationClass (or throws an exception). The use case shows that method-a is called before method-b for a reason; method-a is necessary for the reflective call to the validation method, and method-b evaluates the result of the reflective call to the validation method. One could potentially argue that there is a kind of transitive spec relationship between method-a and method-b, but I'm not sure whether method-a always ought to be called before method-b in general, because method-b simply performs some checks/retrieves a value from the argument. DECISION: This is a spurious spec because method-b by itself is simply an utility method that returns either the boolean value of the Object argument if it was a Boolean object, or a non-nullness check of the argument otherwise. This means that method-b can be called anytime regardless of method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-00-46",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 137,
        "inspection-start-time": "2022-01-29-03-06",
        "project": "commons-validator",
        "spec-id": "00334",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadValidationMethod()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 9,
        "test-methods-mine-count": 56,
        "code-snippets-file": "snippets/u/00334.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:537",
                        "method-b-site": "ValidatorAction.java:567",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "method-a was needed in order to populate the field variable ValidatorAction.validationClass; otherwise the invocation in ValidatorAction.loadValidationMethod() would throw a NullPointerException. However, the test still passed because SWALLOWED_EXCEPTION. Refer to snippet for more info."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with modifications as proposed in snippet.",
        "notes": "method-a accesses the field variables ValidatorAction.validationMethod, ValidatorAction.validationClass, ValidatorAction.method, and ValidatorAction.parameterClasses, and modifies the field variable ValidatorAction.validationMethod. The use case shows that method-a is called before method-b for a reason; method-a is necessary for the reflective call to the validation method, and method-b evaluates the result of the reflective call to the validation method. One could potentially argue that there is a kind of transitive spec relationship between method-a and method-b, but I'm not sure whether method-a always ought to be called before method-b in general, because method-b simply performs some checks/retrieves a value from the argument. DECISION: This is a spurious spec because method-b by itself is simply an utility method that returns either the boolean value of the Object argument if it was a Boolean object, or a non-nullness check of the argument otherwise. This means that method-b can be called anytime regardless of method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-03-11",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 138,
        "inspection-start-time": "2022-01-29-16-32",
        "project": "commons-validator",
        "spec-id": "00353",
        "method-a": "org.apache.commons.validator.ValidatorAction.setClassname(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getParameterValues(Ljava/util/Map;)[Ljava/lang/Object;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.Object[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00353.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:148",
                        "method-b-site": "ValidatorAction.java:541",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The call to ValidatorAction.loadValidationClass() throws a NullPointerException because the delayed call to method-a meant that the field variable ValidatorAction.classname was never set. However, this results in a SWALLOWED_EXCEPTION caught by the catch block in ValidatorAction.java:578."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.classname, and method-b returns a new list object created by using the field variable ValidatorAction.methodParameterList, which is not related to the field variable set by method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-16-37",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 139,
        "inspection-start-time": "2022-01-29-16-37",
        "project": "commons-validator",
        "spec-id": "00354",
        "method-a": "org.apache.commons.validator.ValidatorAction.setClassname(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getValidationClassInstance()Ljava/lang/Object;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00354.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:148",
                        "method-b-site": "ValidatorAction.java:551",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The call to ValidatorAction.loadValidationClass() throws a NullPointerException because the delayed call to method-a meant that the field variable ValidatorAction.classname was never set. However, this results in a SWALLOWED_EXCEPTION caught by the catch block in ValidatorAction.java:578."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.classname. method-b accesses the field variables ValidatorAction.validationMethod (which is only set in ValidatorAction.loadValidationMethod(), which depends on ValidatorAction.loadValidationClass()) and ValidatorAction.validationClass (which is only set in ValidatorAction.loadValidationClass()), and ValidatorAction.loadValidationClass() throws an exception if method-a was not called. So, given that ValidatorAction.loadValidationClass() is the only location in the project where ValidatorAction.validationClass is set, I think there is a kind of transitive relationship between method-a and method-b. Of course, if there were any other places where the two field variables ValidatorAction.validationMethod and ValidatorAction.validatorClass were set, there wouldn't be a relationship between method-a and method-b. DECISION: I think this may be a 3-letter spec \"ValidatorAction.loadValidationClass() --> ValidatorAction.loadValidationMethod() --> method-b\". However, method-a and method-b by themselves are not in a temporal relationship, as method-a is a pure setter that can be called at any point.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-16-44",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 140,
        "inspection-start-time": "2022-01-29-16-50",
        "project": "commons-validator",
        "spec-id": "00356",
        "method-a": "org.apache.commons.validator.ValidatorAction.setClassname(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00356.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:148",
                        "method-b-site": "ValidatorAction.java:567",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The call to ValidatorAction.loadValidationClass() throws a NullPointerException because the delayed call to method-a meant that the field variable ValidatorAction.classname was never set. However, this results in a SWALLOWED_EXCEPTION caught by the catch block in ValidatorAction.java:578."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.classname. method-b performs some checks on the argument and returns a boolean. The use case depicts that method-b checks the return value of the reflective call to the validation method, and setting up the validation method depends on method-a. However, I don't think this means that there is a true spec relationship between method-a and method-b, given that one *could* set up a Method object without calling method-a, and check its return value using method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-16-56",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 141,
        "inspection-start-time": "2022-01-29-17-06",
        "project": "commons-validator",
        "spec-id": "00359",
        "method-a": "org.apache.commons.validator.ValidatorAction.setClassname(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadParameterClasses(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00359.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:148",
                        "method-b-site": "ValidatorAction.java:536",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The call to ValidatorAction.loadValidationClass() throws a NullPointerException because the delayed call to method-a meant that the field variable ValidatorAction.classname was never set. However, this results in a SWALLOWED_EXCEPTION caught by the catch block in ValidatorAction.java:578."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.classname. method-b accesses the field variables ValidatorAction.parameterClasses and ValidatorAction.methodParameterList, and modifies the field variable ValidatorAction.parameterClasses, which are not related to the field variable that method-a modifies.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-17-10",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 142,
        "inspection-start-time": "2022-01-29-17-27",
        "project": "commons-validator",
        "spec-id": "00361",
        "method-a": "org.apache.commons.validator.ValidatorAction.setClassname(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationMethod()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00361.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:148",
                        "method-b-site": "ValidatorAction.java:537",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The call to ValidatorAction.loadValidationClass() throws a NullPointerException because the delayed call to method-a meant that the field variable ValidatorAction.classname was never set. However, this results in a SWALLOWED_EXCEPTION caught by the catch block in ValidatorAction.java:578."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.classname. method-b accesses the field variables ValidatorAction.validationMethod, ValidatorAction.method, and ValidatorAction.validationClass (which is only set in ValidatorAction.loadValidationClass()), and modifies the field variables ValidatorAction.validationMethod. As seen in the snippet, ValidatorAction.loadValidationClass() throws an exception if method-a was not called. So, given that ValidatorAction.loadValidationClass() is the only location in the project where ValidatorAction.validationClass is set, I think there is a kind of transitive relationship between method-a and method-b. Of course, if there were any other places where the field variable ValidatorAction.validatorClass is set, there wouldn't be a relationship between method-a and method-b. DECISION: I think there is can be a 3-letter spec of the nature \"method-a --> ValidatorAction.loadValidationClass() --> method-b\", but the two methods by themselves are not related to each other (CONNECTION_DOES_NOT_NECESSITATE_ORDERING?), especially given that method-a is a public pure setter that can be called at any point.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-17-35",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 143,
        "inspection-start-time": "2022-01-29-17-35",
        "project": "commons-validator",
        "spec-id": "00362",
        "method-a": "org.apache.commons.validator.ValidatorAction.setClassname(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.onlyReturnErrors(Ljava/util/Map;)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00362.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:148",
                        "method-b-site": "ValidatorAction.java:568",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The call to ValidatorAction.loadValidationClass() throws a NullPointerException because the delayed call to method-a meant that the field variable ValidatorAction.classname was never set. However, this results in a SWALLOWED_EXCEPTION caught by the catch block in ValidatorAction.java:578."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.classname. method-b retrieves some data from its argument, which is not related to the field variable that method-a sets.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-17-39",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 144,
        "inspection-start-time": "2022-01-29-20-47",
        "project": "commons-validator",
        "spec-id": "00372",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethod(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getParameterValues(Ljava/util/Map;)[Ljava/lang/Object;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.Object[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00372.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:149",
                        "method-b-site": "ValidatorAction.java:541",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The call to ValidatorAction.loadValidationMethod() throws a NullPointerException because the delayed call to method-a meant that the field variable ValidatorAction.method was never set. However, this results in a SWALLOWED_EXCEPTION caught by the catch block in ValidatorAction.java:578."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.method, and method-b returns a new list object created by using the field variable ValidatorAction.methodParameterList, which is not related to the field variable set by method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-20-50",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 145,
        "inspection-start-time": "2022-01-29-20-50",
        "project": "commons-validator",
        "spec-id": "00373",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethod(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getValidationClassInstance()Ljava/lang/Object;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00373.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:149",
                        "method-b-site": "ValidatorAction.java:551",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The call to ValidatorAction.loadValidationMethod() throws a NullPointerException because the delayed call to method-a meant that the field variable ValidatorAction.method was never set. However, this results in a SWALLOWED_EXCEPTION caught by the catch block in ValidatorAction.java:578."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "precondition",
        "validating-test-file": "Difficult to construct a scenario; refer to snippet and notes?",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.method (and method-a is the only place in the project where ValidatorAction.method is set), and because of that both the method ValidatorAction.loadValidationMethod() and the field value ValidatorAction.validationMethod (which is only set by the method) depend on method-a. This method-b uses the field value ValidatorAction.validationMethod and throws a NullPointerException if it is not already set. DECISION: it seems that there may be a \"(method-b ==> (*) ValidatorAction.loadValidationMethod()) && (ValidatorAction.loadValidationMethod() ==> (*) method-a)\" spec here, but method-a and method-b are not directly related in the way that this spec suggests. This is especially true because method-a is a public pure setter that can be called at any point.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-20-58",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 146,
        "inspection-start-time": "2022-01-29-21-02",
        "project": "commons-validator",
        "spec-id": "00375",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethod(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00375.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:149",
                        "method-b-site": "ValidatorAction.java:567",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The call to ValidatorAction.loadValidationMethod() throws a NullPointerException because the delayed call to method-a meant that the field variable ValidatorAction.method was never set. However, this results in a SWALLOWED_EXCEPTION caught by the catch block in ValidatorAction.java:578."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.method. method-b performs some checks on the argument and returns a boolean. The use case depicts that method-b checks the return value of the reflective call to the validation method, and setting up the validation method depends on method-a. However, I don't think this means that there is a true spec relationship between method-a and method-b, given that one *could* set up a Method object without calling method-a, and check its return value using method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-21-12",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 147,
        "inspection-start-time": "2022-01-29-21-31",
        "project": "commons-validator",
        "spec-id": "00381",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethod(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.onlyReturnErrors(Ljava/util/Map;)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00381.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:149",
                        "method-b-site": "ValidatorAction.java:568",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The call to ValidatorAction.loadValidationMethod() throws a NullPointerException because the delayed call to method-a meant that the field variable ValidatorAction.method was never set. However, this results in a SWALLOWED_EXCEPTION caught by the catch block in ValidatorAction.java:578."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.method. method-b retrieves some data from its argument, which is not related to the field variable that method-a sets.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-21-33",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 148,
        "inspection-start-time": "2022-01-29-22-34",
        "project": "commons-validator",
        "spec-id": "00390",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethodParams(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getParameterValues(Ljava/util/Map;)[Ljava/lang/Object;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.Object[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00390.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:150",
                        "method-b-site": "ValidatorAction.java:541",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Not calling method-a caused the field variable ValidatorAction.methodParameterList to be empty (because method-a is the only place in the code that populates it). This caused ValidatorAction.loadParameterClasses() to set the field variable ValidatorAction.parameterClasses to be set to a size 0 list. This causes ValidatorAction.loadValidationMethod() to throw an exception, because there was no zero-argument method that matched the method name that was being searched. So, an exception was thrown before the program reached the call site of method-b. While there is a catch block at ValidatorAction.java:578, it catches the exception and propagates it forward."
            }
        ],
        "verdict": "true-spec",
        "spec-type": "precondition",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with modifications proposed in snippet will cause an IllegalArgumentException.",
        "notes": "method-a populates the field variables ValidatorAction.methodParams and ValidatorAction.methodParameterList, and method-b's return value depends on the field variable ValidatorAction.methodParameterList (if method-a was not called, method-b will return a size 0 list). This seems like a SOMETIMES_TRUE_SPEC based on the number of arguments that the method that will be invoked by reflection ought to have (which we can also figure out via reflection as well).",
        "findings": "The JavaMOP spec ought to look like: \" if the method that is intended to be invoked has more than 0 arguments, then method-a must be called before method-b.\"",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-29-22-46",
        "inspection-time-in-minutes":  13
    },
    {
        "iid": 149,
        "inspection-start-time": "2022-01-29-22-47",
        "project": "commons-validator",
        "spec-id": "00391",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethodParams(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getValidationClassInstance()Ljava/lang/Object;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00391.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:150",
                        "method-b-site": "ValidatorAction.java:551",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Not calling method-a caused the field variable ValidatorAction.methodParameterList to be empty (because method-a is the only place in the code that populates it). This caused ValidatorAction.loadParameterClasses() to set the field variable ValidatorAction.parameterClasses to be set to a size 0 list. This causes ValidatorAction.loadValidationMethod() to throw an exception, because there was no zero-argument method that matched the method name that was being searched. So, an exception was thrown before the program reached the call site of method-b. While there is a catch block at ValidatorAction.java:578, it catches the exception and propagates it forward."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField shows connection between method-a and method-b.",
        "notes": "method-a modifies/populates the field variables ValidatorAction.methodParams and ValidatorAction.methodParameterList, and the method ValidatorAction.loadParameterClasses() and the field variable ValidatorAction.parameterClasses depend on ValidatorAction.methodParameterList. Transitively, both the method ValidatorAction.loadValidationMethod() and the field value ValidatorAction.validationMethod (which is only set by the method) depend on method-a. This method-b uses the field value ValidatorAction.validationMethod and throws a NullPointerException if it is not already set. DECISION: There seems to be the extended spec that looks like \"(method-b ==> (*) ValidatorAction.loadValidationMethod()) && (ValidatorAction.loadValidationMethod() ==> (*) ValidatorAction.loadParameterClasses()) && (ValidatorAction.loadParameterClasses() ==> method-a)\". However, method-a and method-b themselves are not temporally related, especially considering that method-a is a public setter that can be called at any point. So, this seems like a CONNECTION_DOES_NOT_NECESSITATE_ORDERING case?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-22-55",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 150,
        "inspection-start-time": "2022-01-29-22-58",
        "project": "commons-validator",
        "spec-id": "00393",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethodParams(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00393.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:150",
                        "method-b-site": "ValidatorAction.java:567",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Not calling method-a caused the field variable ValidatorAction.methodParameterList to be empty (because method-a is the only place in the code that populates it). This caused ValidatorAction.loadParameterClasses() to set the field variable ValidatorAction.parameterClasses to be set to a size 0 list. This causes ValidatorAction.loadValidationMethod() to throw an exception, because there was no zero-argument method that matched the method name that was being searched. So, an exception was thrown before the program reached the call site of method-b. While there is a catch block at ValidatorAction.java:578, it catches the exception and propagates it forward."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "method-a modifies/populates the field variables ValidatorAction.methodParams and ValidatorAction.methodParameterList. method-b performs some checks on the argument and returns a boolean. The use case depicts that method-b checks the return value of the reflective call to the validation method, and setting up the validation method depends on method-a. However, I don't think this means that there is a true spec relationship between method-a and method-b, given that one *could* set up a Method object without calling method-a, and check its return value using method-b. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-23-04",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 151,
        "inspection-start-time": "2022-01-29-23-45",
        "project": "commons-validator",
        "spec-id": "00399",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethodParams(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.onlyReturnErrors(Ljava/util/Map;)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00399.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:150",
                        "method-b-site": "ValidatorAction.java:568",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Not calling method-a caused the field variable ValidatorAction.methodParameterList to be empty (because method-a is the only place in the code that populates it). This caused ValidatorAction.loadParameterClasses() to set the field variable ValidatorAction.parameterClasses to be set to a size 0 list. This causes ValidatorAction.loadValidationMethod() to throw an exception, because there was no zero-argument method that matched the method name that was being searched. So, an exception was thrown before the program reached the call site of method-b. While there is a catch block at ValidatorAction.java:578, it catches the exception and propagates it forward."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "method-a modifies/populates the field variables ValidatorAction.methodParams and ValidatorAction.methodParameterList. method-b retrieves the onlyReturnErrors data from a particular entry in its Map argument, which is not related to the field variable that method-a sets - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-23-47",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 152,
        "inspection-start-time": "2022-01-29-23-56",
        "project": "commons-validator",
        "spec-id": "00401",
        "method-a": "org.apache.commons.validator.ValidatorAction.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.executeValidationMethod(Lorg/apache/commons/validator/Field;Ljava/util/Map;Lorg/apache/commons/validator/ValidatorResults;I)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00401.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:147",
                        "method-b-site": "Field.java:826",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "NullPointerException thrown at ValidatorAction.java:474 because the delayed call to method-a meant that the field variable ValidatorAction.name was never set (was null); refer to snippet. DELAY_CAUSES_OUTPUT_CORRUPTION"
            }
        ],
        "verdict": "true-spec",
        "spec-type": "NA",
        "validating-test-file": "INSPECTION_TODO/REVISIT",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.name. method-b uses ValidatorAction.name, as observed by the snippet. If method-a was not called before method-b, then the ValidatorResults object that holds the results of validation will contain an incorrect storage key for the validator that ran (it would be null instead of the name that method-a sets). Hence, this is a true spec.",
        "findings": "Type-c: method-b is always preceded by method-a",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-20-00-06",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 153,
        "inspection-start-time": "2022-01-20-00-06",
        "project": "commons-validator",
        "spec-id": "00402",
        "method-a": "org.apache.commons.validator.ValidatorAction.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.formatJavascriptFileName()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00402.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:147",
                        "method-b-site": "ValidatorAction.java:387",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "NullPointerException thrown at ValidatorAction.java:474 because the delayed call to method-a meant that the field variable ValidatorAction.name was never set (was null); refer to snippet."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "INSPECTION_TODO/REVISIT",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.name. method-b accesses the field variable ValidatorAction.jsFunction. In the use case of this test, the field variable ValidatorAction.jsFunction is set to the return value of method ValidatorAction.generateJsFunction(), which is the method that throws a NullPointerException if method-a was not called. One could argue that hence, there is a relationship between method-a and method-b, but I think this is a bit too weak because the dependency is simply because of the use case (if ValidatorAction.jsFunction was set without calling ValidatorAction.generateJsFunction(), then method-b wouldn't be related to method-a at all). DECISION: notes suggest that this spec is not necessary for correctness.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-00-15",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 154,
        "inspection-start-time": "2022-01-30-00-22",
        "project": "commons-validator",
        "spec-id": "00404",
        "method-a": "org.apache.commons.validator.ValidatorAction.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getClassLoader(Ljava/util/Map;)Ljava/lang/ClassLoader;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.ClassLoader",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00404.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:147",
                        "method-b-site": "ValidatorAction.java:534",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "NullPointerException thrown at ValidatorAction.java:474 because the delayed call to method-a meant that the field variable ValidatorAction.name was never set (was null); refer to snippet."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "Difficult to contrive an example without breaking the test; INSPECTION_TODO",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.name. method-b does not acceess/modify any field variables, and its argument is also unrelated to the field variable set by method-a; it retrieves a ClassLoader object from a particular entry in its Map argument. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-00-27",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 155,
        "inspection-start-time": "2022-01-30-00-27",
        "project": "commons-validator",
        "spec-id": "00405",
        "method-a": "org.apache.commons.validator.ValidatorAction.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.List",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00405.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:147",
                        "method-b-site": "Field.java:847",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "NullPointerException thrown at ValidatorAction.java:474 because the delayed call to method-a meant that the field variable ValidatorAction.name was never set (was null); refer to snippet."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "Difficult to contrive an example without breaking the test; INSPECTION_TODO",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.name. method-b returns an unmodifiable list version of the field variable ValidatorAction.dependencyList, which is unrelated to the field variable set by method-a. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-00-31",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 156,
        "inspection-start-time": "2022-01-30-00-31",
        "project": "commons-validator",
        "spec-id": "00406",
        "method-a": "org.apache.commons.validator.ValidatorAction.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00406.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:147",
                        "method-b-site": "ValidatorResources.java:367",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "NullPointerException thrown at ValidatorAction.java:474 because the delayed call to method-a meant that the field variable ValidatorAction.name was never set (was null); refer to snippet."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "Difficult to contrive an example without breaking the test; snippet?",
        "notes": "ONE_PURE_SETTER/ONE_STATELESS_METHOD: Pretty simple setter-getter case. method-a is a setter to the field variable ValidatorAction.name (the declaration of ValidatorAction.name sets the field variable to null, and the field variable is not modified otherwise), and method-b is a 1-line naive getter to the same field variable. DECISION: two public methods that can be called in any order",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-00-35",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 157,
        "inspection-start-time": "2022-01-30-00-35",
        "project": "commons-validator",
        "spec-id": "00407",
        "method-a": "org.apache.commons.validator.ValidatorAction.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getParameterValues(Ljava/util/Map;)[Ljava/lang/Object;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.Object[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00407.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:147",
                        "method-b-site": "ValidatorAction.java:541",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "NullPointerException thrown at ValidatorAction.java:474 because the delayed call to method-a meant that the field variable ValidatorAction.name was never set (was null); refer to snippet."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "Difficult to contrive an example without breaking the test; snippet?",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.name, method-b accesses the field variable ValidatorAction.methodParameterList, which is unrelated to the field variable set by method-a. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-00-38",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 158,
        "inspection-start-time": "2022-01-30-00-38",
        "project": "commons-validator",
        "spec-id": "00408",
        "method-a": "org.apache.commons.validator.ValidatorAction.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getValidationClassInstance()Ljava/lang/Object;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00408.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:147",
                        "method-b-site": "ValidatorAction.java:551",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "NullPointerException thrown at ValidatorAction.java:474 because the delayed call to method-a meant that the field variable ValidatorAction.name was never set (was null); refer to snippet."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "Difficult to contrive an example without breaking the test; snippet?",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.name, method-b accesses the field variables ValidatorAction.validationMethod, ValidatorAction.validationClass, and modifies the field variable ValidatorAction.instance, all of which are unrelated to the field variable set by method-a. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-00-40",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 159,
        "inspection-start-time": "2022-01-30-00-45",
        "project": "commons-validator",
        "spec-id": "00410",
        "method-a": "org.apache.commons.validator.ValidatorAction.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00410.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:147",
                        "method-b-site": "ValidatorAction.java:567",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "NullPointerException thrown at ValidatorAction.java:474 because the delayed call to method-a meant that the field variable ValidatorAction.name was never set (was null); refer to snippet."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "Difficult to contrive an example without breaking the test; snippet?",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.name. method-b does not access any field variables, and its argument is also unrelated to the field variable set by method-a; method-b either returns the boolean value of the argument if it is a Boolean object, or returns whether the argument is not null otherwise. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-00-48",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 160,
        "inspection-start-time": "2022-01-30-00-58",
        "project": "commons-validator",
        "spec-id": "00413",
        "method-a": "org.apache.commons.validator.ValidatorAction.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadParameterClasses(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00413.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:147",
                        "method-b-site": "ValidatorAction.java:536",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "NullPointerException thrown at ValidatorAction.java:474 because the delayed call to method-a meant that the field variable ValidatorAction.name was never set (was null); refer to snippet."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "Difficult to contrive an example without breaking the test; snippet?",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.name, and method-b accesses the field variables ValidatorAction.parameterClasses, ValidatorAction.methodParameterList and modifies the field variable ValidatorAction.parameterClasses, which are unrelated to the field variable set by method-a. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-01-07",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 161,
        "inspection-start-time": "2022-01-30-01-27",
        "project": "commons-validator",
        "spec-id": "00414",
        "method-a": "org.apache.commons.validator.ValidatorAction.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationClass(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00414.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:147",
                        "method-b-site": "ValidatorAction.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "NullPointerException thrown at ValidatorAction.java:474 because the delayed call to method-a meant that the field variable ValidatorAction.name was never set (was null); refer to snippet."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "Difficult to contrive an example without breaking the test; snippet?",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.name, and method-b accesses the field variables ValidatorAction.validationClass and Validationclass.classname, and modifies the field variable ValidatorAction.validationClass, which are unrelated to the field variable set by method-a. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-01-29",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 162,
        "inspection-start-time": "2022-01-30-01-29",
        "project": "commons-validator",
        "spec-id": "00415",
        "method-a": "org.apache.commons.validator.ValidatorAction.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationMethod()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00415.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:147",
                        "method-b-site": "ValidatorAction.java:537",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "NullPointerException thrown at ValidatorAction.java:474 because the delayed call to method-a meant that the field variable ValidatorAction.name was never set (was null); refer to snippet."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "Difficult to contrive an example without breaking the test; snippet?",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.name, and method-b accesses the field variables ValidatorAction.validationMethod, ValidatorAction.validationClass, ValidatorAction.method, and ValidatorAction.parameterClasses, and modifies the field variable ValidatorAction.validationMethod, which are unrelated to the field variable set by method-a. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-01-32",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 163,
        "inspection-start-time": "2022-01-30-01-32",
        "project": "commons-validator",
        "spec-id": "00416",
        "method-a": "org.apache.commons.validator.ValidatorAction.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.onlyReturnErrors(Ljava/util/Map;)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00416.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:147",
                        "method-b-site": "ValidatorAction.java:568",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "NullPointerException thrown at ValidatorAction.java:474 because the delayed call to method-a meant that the field variable ValidatorAction.name was never set (was null); refer to snippet."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "Difficult to contrive an example without breaking the test; snippet?",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.name, and method-b simply accesses some data from its argument, which is unrelated to the field variable set by method-a. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-01-34",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 164,
        "inspection-start-time": "2022-01-30-01-34",
        "project": "commons-validator",
        "spec-id": "00417",
        "method-a": "org.apache.commons.validator.ValidatorAction.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.readJavascriptFile(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00417.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:147",
                        "method-b-site": "ValidatorAction.java:393",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "NullPointerException thrown at ValidatorAction.java:474 because the delayed call to method-a meant that the field variable ValidatorAction.name was never set (was null); refer to snippet."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "Difficult to contrive an example without breaking the test; snippet?",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.name, and method-b does not access/modify any field variables but its return value is assigned to the variable ValidatorAction.javascript, which is unrelated to the field variable set by method-a. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-01-39",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 165,
        "inspection-start-time": "2022-01-30-13-35",
        "project": "commons-validator",
        "spec-id": "00421",
        "method-a": "org.apache.commons.validator.ValidatorResources.addFormSet(Lorg/apache/commons/validator/FormSet;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.buildKey(Lorg/apache/commons/validator/FormSet;)Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 96,
        "code-snippets-file": "snippets/u/00421.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:162",
                        "method-b-site": "ValidatorResources.java:321",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test failes because no validation was done, because the variable resources.defaultFormSet.forms was an empty map (because method-a was not called), and when Validator.validate() tries to find the appropriate Form value in which to validate, nothing is found."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-13-48",
        "inspection-time-in-minutes": 13
    },
    {
        "iid": 166,
        "inspection-start-time": "2022-01-30-15-43",
        "project": "commons-validator",
        "spec-id": "00425",
        "method-a": "org.apache.commons.validator.ValidatorResources.addFormSet(Lorg/apache/commons/validator/FormSet;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getValidatorActions()Ljava/util/Map;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 14,
        "test-methods-mine-count": 81,
        "code-snippets-file": "snippets/u/00425.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:162",
                        "method-b-site": "Validator.java:365",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The DSI experiment results in stage-0 because Validator.validate() (the caller of method-b) doesn't call method-b if the return value of the ValidatorResources.getForm() call on Validator.java:360 returns null. Because method-a was not called by that point, the ValidatorResources.getForm() call returned null, and thus method-b was not called."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with modifications proposed by snippet (calls method-b before method-a).",
        "notes": "method-a modifies the field variable ValidatorResources.defaultFormSet or the field variable ValidatorResources.hFormSets, and method-b simply returns an unmodifiable list version of the field variable ValidatorResources.hActions, which is not related to the field variables modified by method-a. Thus, this is a spurious spec. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-15-51",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 167,
        "inspection-start-time": "2022-01-30-22-21",
        "project": "commons-validator",
        "spec-id": "00453",
        "method-a": "org.apache.commons.validator.ValidatorResources.getActions()Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.ValidatorResources.addFormSet(Lorg/apache/commons/validator/FormSet;)V",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00453.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ExtensionTest#testOrder",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:367",
                        "method-b-site": "FormSetFactory.java:88",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:367.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ExtensionTest#testOrder with modifications proposed in snippet.",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorResources.hActions, and method-b does not access/modify/affect that field variable. Hence, this is a spurious spec. method-a sets the field variable ValidatorResources.defaultFormSet to the argument or adds the argument to the field variable ValidatorResources.hFormSets. Since these fields are unrelated, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-22-30",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 168,
        "inspection-start-time": "2022-01-30-22-30",
        "project": "commons-validator",
        "spec-id": "00454",
        "method-a": "org.apache.commons.validator.ValidatorResources.getActions()Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.ValidatorResources.buildKey(Lorg/apache/commons/validator/FormSet;)Ljava/lang/String;",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00454.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ExtensionTest#testOrder",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:367",
                        "method-b-site": "ValidatorResources.java:321",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:367.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ExtensionTest#testOrder with modifications proposed in snippet.",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorResources.hActions. method-b does not access/modify/affect that field variable (it by itself doesn't access/modify any field variables of ValidatorResources, and its return value is not set to a field variable of ValidatorResources either); it returns a String using the language, country, and variant fields from the FormSet argument. Hence, this is a spurious spec. ",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-22-34",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 169,
        "inspection-start-time": "2022-01-30-22-34",
        "project": "commons-validator",
        "spec-id": "00455",
        "method-a": "org.apache.commons.validator.ValidatorResources.getActions()Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getConstants()Ljava/util/Map;",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00455.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ExtensionTest#testOrder",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:367",
                        "method-b-site": "ValidatorResources.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:367.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ExtensionTest#testOrder with modifications proposed in snippet.",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable ValidatorResources.hActions, and method-b is a 1-line naive getter to the field variable ValidatorResources.hConstants.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-22-36",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 170,
        "inspection-start-time": "2022-01-30-22-36",
        "project": "commons-validator",
        "spec-id": "00456",
        "method-a": "org.apache.commons.validator.ValidatorResources.getActions()Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00456.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:367",
                        "method-b-site": "ValidatorResources.java:428",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:367.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.EntityImportTest#testEntityImport with modification proposed in snippet (calls a after b)",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorResources.hActions, and method-b does not access/modify/affect that field variable (method-b retrieves a Form value from either of the field variables ValidatorResources.hFormSets or ValidatorResources.defaultFormSet). Hence, this is a spurious spec. ",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-22-44",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 171,
        "inspection-start-time": "2022-01-30-22-44",
        "project": "commons-validator",
        "spec-id": "00457",
        "method-a": "org.apache.commons.validator.ValidatorResources.getActions()Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/util/Locale;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00457.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:367",
                        "method-b-site": "EntityImportTest.java:40",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:367.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.EntityImportTest#testEntityImport with modification proposed in snippet (calls a after b)",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorResources.hActions, and method-b does not access/modify/affect that field variable (method-b retrieves a Form value from either of the field variables ValidatorResources.hFormSets or ValidatorResources.defaultFormSet). Hence, this is a spurious spec. ",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-22-46",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 172,
        "inspection-start-time": "2022-01-30-22-46",
        "project": "commons-validator",
        "spec-id": "00458",
        "method-a": "org.apache.commons.validator.ValidatorResources.getActions()Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getFormSet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/FormSet;",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "org.apache.commons.validator.FormSet",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00458.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:367",
                        "method-b-site": "FormSetFactory.java:73",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:367.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.EntityImportTest#testEntityImport with modification proposed in snippet (calls a after b)",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorResources.hActions, and method-b does not access/modify/affect that field variable (method-b retrieves a FormSet value from either of the field variables ValidatorResources.hFormSets or ValidatorResources.defaultFormSet). Hence, this is a spurious spec. ",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-22-49",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 173,
        "inspection-start-time": "2022-01-30-22-49",
        "project": "commons-validator",
        "spec-id": "00459",
        "method-a": "org.apache.commons.validator.ValidatorResources.getActions()Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.ValidatorResources.process()V",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 3,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/u/00459.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:367",
                        "method-b-site": "ValidatorResources.java:199",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:367.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.EntityImportTest#testEntityImport with modification proposed in snippet (calls a after b)",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorResources.hActions, and while method-b modifies ValidatorResources.hActions, it does not affect the elements of the field variable (it only sets the map to fast mode). Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-22-53",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 174,
        "inspection-start-time": "2022-01-30-21-13",
        "project": "commons-validator",
        "spec-id": "00460",
        "method-a": "org.apache.commons.validator.ValidatorResources.getActions()Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.ValidatorResources.processForms()V",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 3,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/u/00460.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:367",
                        "method-b-site": "ValidatorResources.java:522",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:367.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.EntityImportTest#testEntityImport with modification proposed in snippet (calls a after b)",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorResources.hActions, and method-b does not access/modify/affect the field variable (only modifies the contents of ValidatorResources.defaultFormSet and ValidatorResources.hFormSets). Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-23-18",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 175,
        "inspection-start-time": "2022-01-30-23-25",
        "project": "commons-validator",
        "spec-id": "00461",
        "method-a": "org.apache.commons.validator.ValidatorResources.getConstants()Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 16,
        "test-methods-mine-count": 84,
        "code-snippets-file": "snippets/u/00461.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:535",
                        "method-b-site": "ValidatorResources.java:428",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at Field.java:582 (first use of the return value of method-a).",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.EntityImportTest#testEntityImport with modification proposed in snippet (calls a after b)",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorResources.hConstants, and method-b does not access/modify/affect the field variable (method-b retrieves a Form value from either of the field variables ValidatorResources.hFormSets or ValidatorResources.defaultFormSet). Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-23-37",
        "inspection-time-in-minutes": 12
    },
    {
        "iid": 176,
        "inspection-start-time": "2022-01-30-23-37",
        "project": "commons-validator",
        "spec-id": "00462",
        "method-a": "org.apache.commons.validator.ValidatorResources.getConstants()Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/util/Locale;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 16,
        "test-methods-mine-count": 84,
        "code-snippets-file": "snippets/u/00462.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:535",
                        "method-b-site": "EntityImportTest.java:40",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at Field.java:582 (first use of the return value of method-a).",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.EntityImportTest#testEntityImport with modification proposed in snippet (calls a after b)",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorResources.hConstants, and method-b does not access/modify/affect the field variable (method-b retrieves a Form value from either of the field variables ValidatorResources.hFormSets or ValidatorResources.defaultFormSet). Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-23-40",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 177,
        "inspection-start-time": "2022-01-30-23-40",
        "project": "commons-validator",
        "spec-id": "00463",
        "method-a": "org.apache.commons.validator.ValidatorResources.getConstants()Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getValidatorActions()Ljava/util/Map;",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 14,
        "test-methods-mine-count": 81,
        "code-snippets-file": "snippets/u/00463.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:535",
                        "method-b-site": "Validator.java:365",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at Field.java:582 (first use of the return value of method-a).",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with modification proposed in snippet (calls a after b)",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter for the field variable ValidatorResources.hConstants, and method-b does not access/modify/affect the field variable (only returns an unmodifiable list verion of the field variable ValidatorResources.hActions). Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-23-45",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 178,
        "inspection-start-time": "2022-01-30-23-45",
        "project": "commons-validator",
        "spec-id": "00464",
        "method-a": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getValidatorActions()Ljava/util/Map;",
        "method-a-return-type": "org.apache.commons.validator.Form",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 15,
        "test-methods-mine-count": 90,
        "code-snippets-file": "snippets/u/00464.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:428",
                        "method-b-site": "Validator.java:365",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "The assertion failed because there was no validation done because the return value of method-a was replaced with null; hence, the ValidationResult object was simply a blank value.",
                "notes": "The DSI experiment results in stage-0 because method-b is only called if the return value of method-a is not null; however, since method-a's return value was replaced with null, method-b was never called. METHOD_B_AFTER_CRITICAL_POINT"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with modification proposed in snippet (calls b before a)",
        "notes": "method-a retrieves a Form value from either the field variable ValidatorResources.defaultFormSet or ValidatorResources.hFormSets, and method-b only returns an unmodifiable list verion of the field variable ValidatorResources.hActions, which are unrelated to the field variables that method-a uses. Hence, this is a spurious spec. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-23-52",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 179,
        "inspection-start-time": "2022-01-30-23-52",
        "project": "commons-validator",
        "spec-id": "00465",
        "method-a": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/util/Locale;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "org.apache.commons.validator.Form",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 17,
        "test-methods-mine-count": 93,
        "code-snippets-file": "snippets/u/00465.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Validator.java:360",
                        "method-b-site": "ValidatorResources.java:428",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "The assertion failed because there was no validation done because the return value of method-a was replaced with null; hence, the ValidationResult object was simply a blank value.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-23-56",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 180,
        "inspection-start-time": "2022-01-30-23-56",
        "project": "commons-validator",
        "spec-id": "00466",
        "method-a": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/util/Locale;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getValidatorActions()Ljava/util/Map;",
        "method-a-return-type": "org.apache.commons.validator.Form",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 16,
        "test-methods-mine-count": 90,
        "code-snippets-file": "snippets/u/00466.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Validator.java:360",
                        "method-b-site": "Validator.java:365",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "The assertion failed because there was no validation done because the return value of method-a was replaced with null; hence, the ValidationResult object was simply a blank value. METHOD_B_AFTER_CRITICAL_POINT",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with modification proposed in snippet (calls b before a)",
        "notes": "method-a retrieves a Form value from either the field variable ValidatorResources.defaultFormSet or ValidatorResources.hFormSets, and method-b only returns an unmodifiable list verion of the field variable ValidatorResources.hActions, which are unrelated to the field variables that method-a uses. Hence, this is a spurious spec. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-00-02",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 181,
        "inspection-start-time": "2022-01-31-01-11",
        "project": "commons-validator",
        "spec-id": "00475",
        "method-a": "org.apache.commons.validator.ValidatorResources.getLog()Lorg/apache/commons/logging/Log;",
        "method-b": "org.apache.commons.validator.ValidatorResources.addOldArgRules(Lorg/apache/commons/digester/Digester;)V",
        "method-a-return-type": "org.apache.commons.logging.Log",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00475.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorResourcesTest#testNullInputStream",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:248",
                        "method-b-site": "ValidatorResources.java:257",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:248.",
                "notes": "Not related to the DSI experiment, but EXPECTED_EXCEPTION."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorResourcesTest#testNullInputStream with the if block from ValidatorResources.java:248-250 moved to after ValidatorResources.java:257",
        "notes": "method-a sets the field variable ValidatorResources.log if it is null, and returns the same field variable. method-b operates on its Digester argument. The two methods are completely unrelated - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-01-20",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 182,
        "inspection-start-time": "2022-01-31-01-20",
        "project": "commons-validator",
        "spec-id": "00476",
        "method-a": "org.apache.commons.validator.ValidatorResources.getParent(Lorg/apache/commons/validator/FormSet;)Lorg/apache/commons/validator/FormSet;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "org.apache.commons.validator.FormSet",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00476.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:539",
                        "method-b-site": "ValidatorResources.java:428",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DSI replaced the return value of method-a with the nearest defined FormSet variable, which is fs (declared in ValidatorResources.java:538). However, this causes the call immediately after method-a (fs.merge()) make fs merge with itself (because the return vlaue of method-a is passed into fs.merge()). This causes a ConcurrentModificationException, because fs iterates over itself while modifying itself (as shown in snippet). GOOD_EXAMPLE",
                "notes": "method-b was never called because the ConcurrentModificationException was thrown before the program can get to calling method-b."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
        "notes": "method-a retrieves a FormSet object from either field variable ValidatorResources.hFormSets or field variable ValidatorResources.defaultFormSet, based on its FormSet argument. method-b retrieves a Form object from either field variable ValidatorResources.hFormSets or field variable ValidatorResources.defaultFormSet. Given that both methods only access these field variables, it should be safe to call this a spurious spec - CONNECTION_DOES_NOT_NECESSITATE_ORDERING.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-01-42",
        "inspection-time-in-minutes": 22
    },
    {
        "iid": 183,
        "inspection-start-time": "2022-01-31-01-42",
        "project": "commons-validator",
        "spec-id": "00477",
        "method-a": "org.apache.commons.validator.ValidatorResources.getParent(Lorg/apache/commons/validator/FormSet;)Lorg/apache/commons/validator/FormSet;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/util/Locale;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "org.apache.commons.validator.FormSet",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00477.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:539",
                        "method-b-site": "Validator.java:360",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DSI replaced the return value of method-a with the nearest defined FormSet variable, which is fs (declared in ValidatorResources.java:538). However, this causes the call immediately after method-a (fs.merge()) make fs merge with itself (because the return vlaue of method-a is passed into fs.merge()). This causes a ConcurrentModificationException, because fs iterates over itself while modifying itself (as shown in snippet). GOOD_EXAMPLE",
                "notes": "method-b was never called because the ConcurrentModificationException was thrown before the program can get to calling method-b."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
        "notes": "method-a retrieves a FormSet object from either field variable ValidatorResources.hFormSets or field variable ValidatorResources.defaultFormSet, based on its FormSet argument. method-b retrieves a Form object from either field variable ValidatorResources.hFormSets or field variable ValidatorResources.defaultFormSet. Given that both methods only access these field variables, it should be safe to call this a spurious spec - CONNECTION_DOES_NOT_NECESSITATE_ORDERING.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-01-46",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 184,
        "inspection-start-time": "2022-01-31-01-49",
        "project": "commons-validator",
        "spec-id": "00478",
        "method-a": "org.apache.commons.validator.ValidatorResources.getParent(Lorg/apache/commons/validator/FormSet;)Lorg/apache/commons/validator/FormSet;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getValidatorActions()Ljava/util/Map;",
        "method-a-return-type": "org.apache.commons.validator.FormSet",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00478.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:539",
                        "method-b-site": "Validator.java:365",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DSI replaced the return value of method-a with the nearest defined FormSet variable, which is fs (declared in ValidatorResources.java:538). However, this causes the call immediately after method-a (fs.merge()) make fs merge with itself (because the return vlaue of method-a is passed into fs.merge()). This causes a ConcurrentModificationException, because fs iterates over itself while modifying itself (as shown in snippet). GOOD_EXAMPLE",
                "notes": "method-b was never called because the ConcurrentModificationException was thrown before the program can get to calling method-b."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
        "notes": "method-a retrieves a FormSet object from either field variable ValidatorResources.hFormSets or field variable ValidatorResources.defaultFormSet, based on its FormSet argument. method-b returns an unmodifiable list representation of the field variable ValdiatorResources.hActions, which is not related to the field variables accessed by method-a - UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-01-52",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 185,
        "inspection-start-time": "2022-01-31-01-52",
        "project": "commons-validator",
        "spec-id": "00479",
        "method-a": "org.apache.commons.validator.ValidatorResources.initDigester()Lorg/apache/commons/digester/Digester;",
        "method-b": "org.apache.commons.validator.ValidatorResources.addFormSet(Lorg/apache/commons/validator/FormSet;)V",
        "method-a-return-type": "org.apache.commons.digester.Digester",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/u/00479.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:193",
                        "method-b-site": "FormSetFactory.java:88",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:195.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.EntityImportTest#testEntityImport with modifications in snippet",
        "notes": "The use case is such that one has to call method-a in order for method-b's caller to be called, because method-a initializes the Digester object, and method-b's caller is intended to be called indirectly via the Digester object (as specified in digester-rules.xml). However, method-b itself is not tied to Digester, so this is a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-02-10",
        "inspection-time-in-minutes": 18
    },
    {
        "iid": 186,
        "inspection-start-time": "2022-01-31-02-10",
        "project": "commons-validator",
        "spec-id": "00480",
        "method-a": "org.apache.commons.validator.ValidatorResources.initDigester()Lorg/apache/commons/digester/Digester;",
        "method-b": "org.apache.commons.validator.ValidatorResources.addOldArgRules(Lorg/apache/commons/digester/Digester;)V",
        "method-a-return-type": "org.apache.commons.digester.Digester",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 22,
        "test-methods-mine-count": 108,
        "code-snippets-file": "snippets/u/00480.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:193",
                        "method-b-site": "ValidatorResources.java:257",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:195.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-02-12",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 187,
        "inspection-start-time": "2022-01-31-02-12",
        "project": "commons-validator",
        "spec-id": "00481",
        "method-a": "org.apache.commons.validator.ValidatorResources.initDigester()Lorg/apache/commons/digester/Digester;",
        "method-b": "org.apache.commons.validator.ValidatorResources.buildKey(Lorg/apache/commons/validator/FormSet;)Ljava/lang/String;",
        "method-a-return-type": "org.apache.commons.digester.Digester",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/u/00481.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:193",
                        "method-b-site": "FormSetFactory.java:88",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:195.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.EntityImportTest#testEntityImport with modifications in snippet",
        "notes": "The use case is such that one has to call method-a in order for method-b's caller to be called, because method-a initializes the Digester object, and method-b's caller is intended to be called indirectly via the Digester object (as specified in digester-rules.xml - FormSetFactory.createObject() will most likely be called via digester). However, method-b itself is not tied to Digester, so this is a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-02-16",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 188,
        "inspection-start-time": "2022-01-31-02-16",
        "project": "commons-validator",
        "spec-id": "00482",
        "method-a": "org.apache.commons.validator.ValidatorResources.initDigester()Lorg/apache/commons/digester/Digester;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getActions()Ljava/util/Map;",
        "method-a-return-type": "org.apache.commons.digester.Digester",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 3,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/u/00482.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:193",
                        "method-b-site": "ValidatorResources.java:367",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:195.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "INSPECTION_TODO",
        "notes": "ONE_STATELESS_METHOD: method-b is a 1-line naive getter to the field variable ValidatorResources.hActions, which is initialized at declaration. The use case is such that method-a sets up the Digester object, which populates the map that method-b retrieves based on the input XML file, so it would be good practice to call method-b after method-a and the Digester object have finished processing. However, given that method-b is a 1-line naive getter and could technically be called before method-a, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-02-24",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 189,
        "inspection-start-time": "2022-01-31-02-58",
        "project": "commons-validator",
        "spec-id": "00483",
        "method-a": "org.apache.commons.validator.ValidatorResources.initDigester()Lorg/apache/commons/digester/Digester;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getConstants()Ljava/util/Map;",
        "method-a-return-type": "org.apache.commons.digester.Digester",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/u/00483.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:193",
                        "method-b-site": "ValidatorResources.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:195.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "INSPECTION_TODO",
        "notes": "ONE_STATELESS_METHOD: method-b is a 1-line naive getter to the field variable ValidatorResources.hConstants, which is initialized at declaration. The use case is such that method-a sets up the Digester object, which populates the map that method-b retrieves based on the input XML file, so it would be good practice to call method-b after method-a. However, given that method-b is a 1-line naive getter and could technically be called before method-a, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-03-03",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 190,
        "inspection-start-time": "2022-01-31-03-03",
        "project": "commons-validator",
        "spec-id": "00484",
        "method-a": "org.apache.commons.validator.ValidatorResources.initDigester()Lorg/apache/commons/digester/Digester;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "org.apache.commons.digester.Digester",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 17,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/u/00484.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:193",
                        "method-b-site": "ValidatorResources.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:195.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "INSPECTION_TODO",
        "notes": "method-a creates a new Digester class instance, and populates it accordingly so that the Digester object can read the appropriate XML file. method-b retrieves a Form object from either the field variable ValidatorResources.hFormSets, or the field variable ValidatorResources.defaultFormSet. The use case is such that method-a sets up the Digester object, which populates the map that method-b accesses based on the input XML file, so it would be good practice to call method-b after method-a. However, since method-b is a public method that technically can be called at any point, I think this is a CONNECTION_DOES_NOT_NECESSITATE_ORDERING case?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-03-11",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 191,
        "inspection-start-time": "2022-01-31-03-11",
        "project": "commons-validator",
        "spec-id": "00485",
        "method-a": "org.apache.commons.validator.ValidatorResources.initDigester()Lorg/apache/commons/digester/Digester;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/util/Locale;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "org.apache.commons.digester.Digester",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 17,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/u/00485.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:193",
                        "method-b-site": "EntityImportTest.java:40",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:195.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "INSPECTION_TODO",
        "notes": "method-a creates a new Digester class instance, and populates it accordingly so that the Digester object can read the appropriate XML file. method-b retrieves a Form object from either the field variable ValidatorResources.hFormSets, or the field variable ValidatorResources.defaultFormSet. The use case is such that method-a sets up the Digester object, which populates the map that method-b accesses based on the input XML file, so it would be good practice to call method-b after method-a. However, since method-b is a public method that can technically be called at any point, I think this is either CONNECTION_DOES_NOT_NECESSITATE_ORDERING or UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-03-13",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 192,
        "inspection-start-time": "2022-01-31-03-13",
        "project": "commons-validator",
        "spec-id": "00486",
        "method-a": "org.apache.commons.validator.ValidatorResources.initDigester()Lorg/apache/commons/digester/Digester;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getFormSet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/FormSet;",
        "method-a-return-type": "org.apache.commons.digester.Digester",
        "method-b-return-type": "org.apache.commons.validator.FormSet",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/u/00486.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:193",
                        "method-b-site": "FormSetFactory.java:73",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:195.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "INSPECTION_TODO",
        "notes": "method-a creates a new Digester class instance, and populates it accordingly so that the Digester object can read the appropriate XML file. method-b retrieves a FormSet object from either the field variable ValidatorResources.hFormSets, or the field variable ValidatorResources.defaultFormSet. The use case is such that method-a sets up the Digester object, which populates the map that method-b accesses based on the input XML file, so it would be good practice to call method-b after method-a. However, it seems like method-b can technically be called at any point, so this seems like either a CONNECTION_DOES_NOT_NECESSITATE_ORDERING or UNRELATED_STATEFUL_METHODS case.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-03-19",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 193,
        "inspection-start-time": "2022-01-31-03-19",
        "project": "commons-validator",
        "spec-id": "00487",
        "method-a": "org.apache.commons.validator.ValidatorResources.initDigester()Lorg/apache/commons/digester/Digester;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getLog()Lorg/apache/commons/logging/Log;",
        "method-a-return-type": "org.apache.commons.digester.Digester",
        "method-b-return-type": "org.apache.commons.logging.Log",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00487.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorResourcesTest#testNullInputStream",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:155",
                        "method-b-site": "ValidatorResources.java:248",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a's return value was replaced with null, but before a NullPointerException would have been thrown, ValidatorResources.java:158 threw the EXPECTED_EXCEPTION. Hence, the test still passed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-03-26",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 194,
        "inspection-start-time": "2022-01-31-03-26",
        "project": "commons-validator",
        "spec-id": "00488",
        "method-a": "org.apache.commons.validator.ValidatorResources.initDigester()Lorg/apache/commons/digester/Digester;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getParent(Lorg/apache/commons/validator/FormSet;)Lorg/apache/commons/validator/FormSet;",
        "method-a-return-type": "org.apache.commons.digester.Digester",
        "method-b-return-type": "org.apache.commons.validator.FormSet",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00488.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:155",
                        "method-b-site": "ValidatorResources.java:539",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:160.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "INSPECTION_TODO",
        "notes": "method-a creates a new Digester class instance, and populates it accordingly so that the Digester object can read the appropriate XML file. method-b retrieves the appropriate a FormSet object from either the field variable ValidatorResources.hFormSets, or the field variable ValidatorResources.defaultFormSet based on the argument. The use case is such that method-a sets up the Digester object, which populates the map that method-b accesses based on the input XML file, so it would be good practice to call method-b after method-a. However, since method-b technically can be called at any point, it seems that this is either a CONNECTION_DOES_NOT_NECESSITATE_ORDERING or UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-03-32",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 195,
        "inspection-start-time": "2022-01-31-03-32",
        "project": "commons-validator",
        "spec-id": "00489",
        "method-a": "org.apache.commons.validator.ValidatorResources.initDigester()Lorg/apache/commons/digester/Digester;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getValidatorActions()Ljava/util/Map;",
        "method-a-return-type": "org.apache.commons.digester.Digester",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 15,
        "test-methods-mine-count": 89,
        "code-snippets-file": "snippets/u/00489.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:155",
                        "method-b-site": "Validator.java:365",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:160.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet?",
        "notes": "method-a creates a new Digester class instance, and populates it accordingly so that the Digester object can read the appropriate XML file. method-b returns an unmodifiable list version of the field variable ValidatorResources.hActions, which is initialized at declaration. The use case is such that method-a sets up the Digester object, which populates the map that method-b retrieves based on the input XML file, so it would be good practice to call method-b after method-a and the Digester object have finished processing. However, given that method-b is (mainly) a getter of an object that was initialized at its declaration and could technically be called before method-a, I think this is a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-03-37",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 196,
        "inspection-start-time": "2022-01-31-03-37",
        "project": "commons-validator",
        "spec-id": "00490",
        "method-a": "org.apache.commons.validator.ValidatorResources.initDigester()Lorg/apache/commons/digester/Digester;",
        "method-b": "org.apache.commons.validator.ValidatorResources.process()V",
        "method-a-return-type": "org.apache.commons.digester.Digester",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 21,
        "test-methods-mine-count": 107,
        "code-snippets-file": "snippets/u/00490.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:155",
                        "method-b-site": "ValidatorResources.java:164",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:160.",
                "notes": ""
            }
        ],
        "verdict": "unknown",
        "spec-type": "NA",
        "validating-test-file": "INSPECTION_TODO",
        "notes": "method-a creates a new Digester class instance, and populates it accordingly so that the Digester object can read the appropriate XML file. method-b processes and further populates the data in the ValidatorResources object, by further populating the field variables ValidatorResources.hFormSets, ValidatorResources.defaultFormSet, etc. The use case is such that method-a sets up the Digester object, which initializes/sets up the field variables to a point that method-b can process it. I think this is closer to a SOMETIMES_TRUE_SPEC, in the case that the user is using an XML file to specify their validators. (ValidatorTest depicts a situation where one would not need to call method-a before calling method-b) Calling method-b without initializing/calling Digester nor manually initializing the various portions of the ValidatorResources object would lead to a no-op. DECISION/INSPECTION_TODO: how do we encode this is JavaMOP without generating too many FPs?",
        "findings": "This could be a (ab|b) spec? MORE_COMPLEX_THAN_AB",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-03-46",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 197,
        "inspection-start-time": "2022-01-31-03-46",
        "project": "commons-validator",
        "spec-id": "00491",
        "method-a": "org.apache.commons.validator.ValidatorResources.initDigester()Lorg/apache/commons/digester/Digester;",
        "method-b": "org.apache.commons.validator.ValidatorResources.processForms()V",
        "method-a-return-type": "org.apache.commons.digester.Digester",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 21,
        "test-methods-mine-count": 107,
        "code-snippets-file": "snippets/u/00491.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:155",
                        "method-b-site": "ValidatorResources.java:522",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION: NullPointerException at ValidatorResources.java:160.",
                "notes": ""
            }
        ],
        "verdict": "unknown",
        "spec-type": "NA",
        "validating-test-file": "INSPECTION_TODO",
        "notes": "By extension of 00490 - method-a creates a new Digester class instance, and populates it accordingly so that the Digester object can read the appropriate XML file. method-b processes and further populates the data in the ValidatorResources object, by further populating the field variables ValidatorResources.hFormSets, ValidatorResources.defaultFormSet, etc. The use case is such that method-a sets up the Digester object, which initializes/sets up the field variables to a point that method-b can process it. I think this is closer to a SOMETIMES_TRUE_SPEC, in the case that the user is using an XML file to specify their validators. (ValidatorTest depicts a situation where one would not need to call method-a before calling method-b) Calling method-b without initializing/calling Digester nor manually initializing the various portions of the ValidatorResources object would lead to a no-op. DECISION/INSPECTION_TODO: how do we encode this is JavaMOP without generating too many FPs?",
        "findings": "This could be a (ab|b) spec? MORE_COMPLEX_THAN_AB",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-03-48",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 198,
        "inspection-start-time": "2022-01-31-03-49",
        "project": "commons-validator",
        "spec-id": "00492",
        "method-a": "org.apache.commons.validator.ValidatorResources.process()V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getConstants()Ljava/util/Map;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 96,
        "code-snippets-file": "snippets/u/00492.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:163",
                        "method-b-site": "ValidatorResources.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-03-54",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 199,
        "inspection-start-time": "2022-01-31-04-23",
        "project": "commons-validator",
        "spec-id": "00495",
        "method-a": "org.apache.commons.validator.ValidatorResources.process()V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getParent(Lorg/apache/commons/validator/FormSet;)Lorg/apache/commons/validator/FormSet;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.FormSet",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00495.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:163",
                        "method-b-site": "ValidatorResources.java:539",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-04-26",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 200,
        "inspection-start-time": "2022-01-31-04-30",
        "project": "commons-validator",
        "spec-id": "00497",
        "method-a": "org.apache.commons.validator.ValidatorResources.process()V",
        "method-b": "org.apache.commons.validator.ValidatorResources.processForms()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 22,
        "test-methods-mine-count": 111,
        "code-snippets-file": "snippets/u/00497.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:163",
                        "method-b-site": "ValidatorResources.java:522",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-04-32",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 201,
        "inspection-start-time": "2022-01-31-04-32",
        "project": "commons-validator",
        "spec-id": "00498",
        "method-a": "org.apache.commons.validator.ValidatorResources.processForms()V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getConstants()Ljava/util/Map;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 96,
        "code-snippets-file": "snippets/u/00498.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:522",
                        "method-b-site": "ValidatorResources.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-04-34",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 202,
        "inspection-start-time": "2022-01-31-13-11",
        "project": "commons-validator",
        "spec-id": "00501",
        "method-a": "org.apache.commons.validator.ValidatorResources.processForms()V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getParent(Lorg/apache/commons/validator/FormSet;)Lorg/apache/commons/validator/FormSet;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.FormSet",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00501.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:522",
                        "method-b-site": "ValidatorResources.java:539",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-13-15",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 203,
        "inspection-start-time": "2022-01-31-14-11",
        "project": "commons-validator",
        "spec-id": "00505",
        "method-a": "org.apache.commons.validator.ValidatorResult.add(Ljava/lang/String;ZLjava/lang/Object;)V",
        "method-b": "org.apache.commons.validator.ValidatorResult.getResult(Ljava/lang/String;)Ljava/lang/Object;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00505.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testUSLocale",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResults.java:83",
                        "method-b-site": "ValidatorResults.java:140",
                        "invocation-count": 7
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test failed because the delay of method-a caused ValidatorResult.getActions() (for the first ValidatorResult object) to return what is basically an empty iterator, causing the for loop to exit before method-b was called. METHOD_B_AFTER_CRITICAL_POINT"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "both",
        "validating-test-file": "INSPECTION_TODO",
        "notes": "The return value of method-b may change depending on whether method-a was called beforehand or not. method-a adds the result of a validator action to the map field variable ValidatorResult.hAction, and method-b returns the appropriate result object in the map ValidatorResult.hAction (or null). MORE_COMPLEX_THAN_AB - The spec may actually be of the form \"b*a+b*\". However, since both methods are public methods and neither prevents the other from being called safely, this seems like a CONNECTION_DOES_NOT_NECESSITATE_ORDERING case?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-14-33",
        "inspection-time-in-minutes": 22
    },
    {
        "iid": 204,
        "inspection-start-time": "2022-01-31-14-33",
        "project": "commons-validator",
        "spec-id": "00506",
        "method-a": "org.apache.commons.validator.ValidatorResult.add(Ljava/lang/String;ZLjava/lang/Object;)V",
        "method-b": "org.apache.commons.validator.ValidatorResult.isValid(Ljava/lang/String;)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 73,
        "code-snippets-file": "snippets/u/00506.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResults.java:83",
                        "method-b-site": "DateTest.java:106",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The DSI experiment results in stage-0-failure because the test fails on an assertion before method-b is called. ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "precondition",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate with modifications in snippet calls method-b before method-a.",
        "notes": "The return value of method-b may change depending on whether method-a was called beforehand or not. method-a adds the result of a validator action to the map field variable ValidatorResult.hAction, and method-b performs a check on the appropriate result object in the map ValidatorResult.hAction (or returns false if the object doesn't exist).  MORE_COMPLEX_THAN_AB - The spec may actually be of the form \"b*a+b*\". However, since both methods are public methods and neither prevents the other from being called safely, this seems like a CONNECTION_DOES_NOT_NECESSITATE_ORDERING case?",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-31-14-45",
        "inspection-time-in-minutes": 12
    },
    {
        "iid": 205,
        "inspection-start-time": "2022-01-31-14-45",
        "project": "commons-validator",
        "spec-id": "00507",
        "method-a": "org.apache.commons.validator.ValidatorResult.containsAction(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.ValidatorResult.isValid(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 12,
        "test-methods-mine-count": 72,
        "code-snippets-file": "snippets/u/00507.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DateTest.java:105",
                        "method-b-site": "DateTest.java:106",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate with DateTest.java:105 and DateTest.java:106 switched.",
        "notes": "Both method-a and method-b check properties of the argument String with respect to the field variable ValidatorResult.hAction. Since they don't influence each other (although method-a returning false implies that method-b would return false as well), this is a spurious spec. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-14-52",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 206,
        "inspection-start-time": "2022-01-31-15-24",
        "project": "commons-validator",
        "spec-id": "00509",
        "method-a": "org.apache.commons.validator.Var.getJsType()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.Var.getBundle()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00509.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.VarTest#testVars",
                "stage": "pre-stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "VarTest.java:80",
                        "method-b-site": "VarTest.java:82",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "VarTest.java:94",
                        "method-b-site": "VarTest.java:96",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "VarTest.java:103",
                        "method-b-site": "VarTest.java:105",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 3,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR - the assertion failure shows that the return value of method-a was replaced with \"\" (the empty string), but I can't find a String variable that contains the empty string initialized.",
                "notes": "Note that the DSI experiment resulted in pre-stage-0 because the first delay of method-a caused an assertion failure (resulting in stage-0), and neither of the other perturbations were performed. ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.VarTest#testVars with VarTest.java:82 before VarTest.java:80",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable Var.jsType, and method-b is a 1-line naive getter to the field variable Var.bundle.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-15-35",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 207,
        "inspection-start-time": "2022-01-31-15-35",
        "project": "commons-validator",
        "spec-id": "00510",
        "method-a": "org.apache.commons.validator.Var.getJsType()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.Var.isResource()Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00510.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.VarTest#testVars",
                "stage": "pre-stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "VarTest.java:80",
                        "method-b-site": "VarTest.java:81",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "VarTest.java:94",
                        "method-b-site": "VarTest.java:95",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "VarTest.java:103",
                        "method-b-site": "VarTest.java:104",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 3,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR - the assertion failure shows that the return value of method-a was replaced with \"\" (the empty string), but I can't find a String variable that contains the empty string initialized.",
                "notes": "Note that the DSI experiment resulted in pre-stage-0 because the first delay of method-a caused an assertion failure (resulting in stage-0), and neither of the other perturbations were performed. ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.VarTest#testVars with VarTest.java:81 before VarTest.java:80",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable Var.jsType, and method-b is a 1-line naive getter to the field variable Var.resource.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-15-38",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 208,
        "inspection-start-time": "2022-01-31-17-45",
        "project": "commons-validator",
        "spec-id": "00512",
        "method-a": "org.apache.commons.validator.Var.isResource()Z",
        "method-b": "org.apache.commons.validator.Var.getBundle()Ljava/lang/String;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00512.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.VarTest#testVars",
                "stage": "pre-stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "VarTest.java:81",
                        "method-b-site": "VarTest.java:82",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "VarTest.java:95",
                        "method-b-site": "VarTest.java:96",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "VarTest.java:104",
                        "method-b-site": "VarTest.java:105",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 3,
                "comment-on-return-values": "Both REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION and REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with false for the perturbations that were performed, and the first call to method-a was around an assertFalse, while the second was around an assertTrue.",
                "notes": "Note that the DSI experiment resulted in pre-stage-0 because the second delay of method-a caused an assertion failure (resulting in stage-0), and the third perturbation was not  performed. ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.VarTest#testVars with VarTest.java:82 before VarTest.java:81",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable Var.resource, and method-b is a 1-line naive getter to the field variable Var.bundle.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-17-49",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 209,
        "inspection-start-time": "2022-01-31-17-59",
        "project": "commons-validator",
        "spec-id": "00513",
        "method-a": "org.apache.commons.validator.routines.AbstractCalendarValidator.format(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.AbstractCalendarValidator.format(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00513.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractCalendarValidatorTest.java:188",
                        "method-b-site": "AbstractCalendarValidatorTest.java:189",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR - The assertion failure message shows that method-a was replaced with the String value \"\" (empty string), but I can't find a variable that was assigned to the empty string in scope.",
                "notes": "This resulted in a stage-0-failure because the assertion failed immediately after DSI replaced the return value of method-a. ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testFormat with AbstractCalendarValidatorTest.java:188 and AbstractCalendarValidatorTest.java:189 swapped",
        "notes": "snippets show that method-a and method-b are both different wrapper methods to the method AbstractFormatValidator.format(Object, String, Locale). Hence, there is no ordering relationship between the two methods - CONNECTION_DOES_NOT_NECESSITATE_ORDERING.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-18-08",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 210,
        "inspection-start-time": "2022-01-31-18-08",
        "project": "commons-validator",
        "spec-id": "00514",
        "method-a": "org.apache.commons.validator.routines.AbstractCalendarValidator.format(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.AbstractCalendarValidator.getFormat(Ljava/util/Locale;)Ljava/text/Format;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.text.Format",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00514.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractCalendarValidatorTest.java:188",
                        "method-b-site": "AbstractCalendarValidator.java:217",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR - The assertion failure message shows that method-a was replaced with the String value \"\" (empty string), but I can't find a variable that was assigned to the empty string in scope.",
                "notes": "This resulted in a stage-0-failure because the assertion failed immediately after DSI replaced the return value of method-a, and method-b is called from AbstractCalendarValidatorTest.java:189 (the next statement after method-a). ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testFormat with AbstractCalendarValidatorTest.java:188 and AbstractCalendarValidatorTest.java:189 swapped",
        "notes": "While method-a does formatting by not using a Locale, method-b explicitly retrieves the appropriate format from the argument Locale object. So, it seems like this spec is spurious. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-18-18",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 211,
        "inspection-start-time": "2022-01-31-18-18",
        "project": "commons-validator",
        "spec-id": "00515",
        "method-a": "org.apache.commons.validator.routines.AbstractCalendarValidator.format(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.AbstractCalendarValidator.getFormat(Ljava/util/Locale;)Ljava/text/Format;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.text.Format",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00515.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractCalendarValidatorTest.java:189",
                        "method-b-site": "AbstractCalendarValidator.java:217",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR - The assertion failure message shows that method-a was replaced with the String value \"\" (empty string), but I can't find a variable that was assigned to the empty string in scope.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-18-22",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 212,
        "inspection-start-time": "2022-01-31-18-22",
        "project": "commons-validator",
        "spec-id": "00516",
        "method-a": "org.apache.commons.validator.routines.AbstractCalendarValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.AbstractCalendarValidator.isValid(Ljava/lang/String;Ljava/util/Locale;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00516.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CalendarValidatorTest#testDateTimeStyle",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "CalendarValidatorTest.java:197",
                        "method-b-site": "CalendarValidatorTest.java:198",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - method-a replaced the return of method-a with false, but method-a was in a call to assertTrue(). ORDER_OF_ASSERTIONS",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CalendarValidatorTest#testDateTimeStyle with CalendarValidatorTest.java:197 and CalendarValidatorTest.java:198 swapped.",
        "notes": "method-a and method-b are both wrappers of the same method (AbstractFormatValidator.isValid(String, String, Locale)), so they have no ordering relationship with each other - CONNECTION_DOES_NOT_NECESSITATE_ORDERING.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-18-26",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 213,
        "inspection-start-time": "2022-01-31-18-27",
        "project": "commons-validator",
        "spec-id": "00517",
        "method-a": "org.apache.commons.validator.routines.AbstractCalendarValidator.parse(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.routines.AbstractCalendarValidator.format(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00517.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractCalendarValidatorTest.java:186",
                        "method-b-site": "AbstractCalendarValidatorTest.java:188",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with null, but the return value was immeditely passed into an assertNotNull().",
                "notes": "The DSI experiment resulted in stage-0 because the assertion failed immediately after method-a was called, before method-b can even be called. ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testFormat with modifications in snippet calls method-b before method-a... but it might also be a pretty weak example.",
        "notes": "The use case here depicts the return value of method-a being passed into method-b, so it would be difficult to call method-b without calling method-a in this case. I think it's best practice to call method-a before method-b to parse and to format, but I don't know if the connection is strong enough to warrant this being a true spec (it doesn't affect the correctness if one wanted to simply format a new Date() object, like the notes in the snippet does). DECISION: the notes suggest that this spec is not necessary for correctness.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-18-38",
        "inspection-time-in-minutes": 11
    },
    {
        "iid": 214,
        "inspection-start-time": "2022-01-31-18-39",
        "project": "commons-validator",
        "spec-id": "00518",
        "method-a": "org.apache.commons.validator.routines.AbstractCalendarValidator.parse(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.routines.AbstractCalendarValidator.format(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00518.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractCalendarValidatorTest.java:186",
                        "method-b-site": "AbstractCalendarValidatorTest.java:189",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with null, but the return value was immeditely passed into an assertNotNull().",
                "notes": "The DSI experiment resulted in stage-0 because the assertion failed immediately after method-a was called, before method-b can even be called. ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testFormat with modifications in snippet calls method-b before method-a... but it might also be a pretty weak example.",
        "notes": "The use case here depicts the return value of method-a being passed into method-b, so it would be difficult to call method-b without calling method-a in this case. I think it's best practice to call method-a before method-b to parse and to format, but I don't know if the connection is strong enough to warrant this being a true spec (it doesn't affect the correctness if one wanted to simply format a new Date() object, like the notes in the snippet does). DECISION: these notes suggest that the spec is not necessary for correctness",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-18-40",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 215,
        "inspection-start-time": "2022-01-31-18-40",
        "project": "commons-validator",
        "spec-id": "00519",
        "method-a": "org.apache.commons.validator.routines.AbstractCalendarValidator.parse(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.routines.AbstractCalendarValidator.getFormat(Ljava/util/Locale;)Ljava/text/Format;",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "java.text.Format",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00519.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractCalendarValidatorTest.java:186",
                        "method-b-site": "AbstractCalendarValidator.java:217",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with null, but the return value was immeditely passed into an assertNotNull().",
                "notes": "The DSI experiment resulted in stage-0 because the assertion failed immediately after method-a was called, before method-b can even be called. ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testFormat with modifications in snippet indirectly calls method-b before method-a... but it might also be a pretty weak example.",
        "notes": "The use case here depicts the return value of method-a being passed into the indirect caller of method-b, so it would be difficult to call method-b without calling method-a in this case. While there is a connection between method-a and the indirect caller of method-b (AbstractFormatValidator.format(), I don't think there is a strict temporal relationship between method-a and method-bthemselves (method-b simply retrieves a DateFormat object based on its argument and the field variables AbstractCalendarValidator.dateStyle and AbstractCalendarValidator.timeStyle, both of which are only set once in the constructor of the object - UNRELATED_STATEFUL_METHODS.).",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-18-49",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 216,
        "inspection-start-time": "2022-01-31-18-49",
        "project": "commons-validator",
        "spec-id": "00520",
        "method-a": "org.apache.commons.validator.routines.AbstractCalendarValidator.parse(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.routines.AbstractCalendarValidator.parse(Ljava/lang/String;Ljava/text/Format;)Ljava/lang/Object;",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00520.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractCalendarValidatorTest.java:186",
                        "method-b-site": "AbstractCalendarValidator.java:187",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with null, but the return value was immeditely passed into an assertNotNull().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-18-51",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 217,
        "inspection-start-time": "2022-01-31-18-51",
        "project": "commons-validator",
        "spec-id": "00521",
        "method-a": "org.apache.commons.validator.routines.AbstractCalendarValidator.parse(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.routines.AbstractFormatValidator.isStrict()Z",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "boolean",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00521.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractCalendarValidatorTest.java:186",
                        "method-b-site": "AbstractFormatValidator.java:187",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with null, but the return value was immeditely passed into an assertNotNull().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-18-53",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 218,
        "inspection-start-time": "2022-01-31-18-53",
        "project": "commons-validator",
        "spec-id": "00522",
        "method-a": "org.apache.commons.validator.routines.AbstractCalendarValidator.parse(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.routines.AbstractFormatValidator.processParsedValue(Ljava/lang/Object;Ljava/text/Format;)Ljava/lang/Object;",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "java.lang.Object",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00522.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractCalendarValidatorTest.java:186",
                        "method-b-site": "AbstractFormatValidator.java:192",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with null, but the return value was immeditely passed into an assertNotNull().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-18-56",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 219,
        "inspection-start-time": "2022-01-31-18-56",
        "project": "commons-validator",
        "spec-id": "00523",
        "method-a": "org.apache.commons.validator.routines.AbstractCalendarValidator.parse(Ljava/lang/String;Ljava/text/Format;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.routines.AbstractCalendarValidator.format(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00523.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractCalendarValidator.java:187",
                        "method-b-site": "AbstractCalendarValidatorTest.java:188",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with null, but the return value was immeditely passed into an assertNotNull().",
                "notes": "ASSERTION_FAILED_BEFORE_METHOD_B: The DSI experiment resulted in stage-0 because the assertion failed immediately after method-a was called, before method-b can even be called. ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testFormat with modifications in snippet calls method-b before method-a... but it might also be a pretty weak example.",
        "notes": "By extension of 00517 - the use case here depicts the return value of method-a being passed into method-b, so it would be difficult to call method-b without calling method-a in this case. I think it's best practice to call method-a before method-b to parse and to format, but I don't know if the connection is strong enough to warrant this being a true spec (it doesn't affect the correctness if one wanted to simply format a new Date() object, like the notes in the snippet does). CONNECTION_DOES_NOT_NECESSITATE_ORDERING: the use case illustrates that the Object value returned by method-a is passed into method-b. However, method-b is a public method, and one does not necessarily need to call method-a in order to supply an input for method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-19-00",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 220,
        "inspection-start-time": "2022-01-31-19-00",
        "project": "commons-validator",
        "spec-id": "00524",
        "method-a": "org.apache.commons.validator.routines.AbstractCalendarValidator.parse(Ljava/lang/String;Ljava/text/Format;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.routines.AbstractCalendarValidator.format(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00524.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractCalendarValidator.java:187",
                        "method-b-site": "AbstractCalendarValidatorTest.java:189",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with null, but the return value was immeditely passed into an assertNotNull().",
                "notes": "The DSI experiment resulted in stage-0 because the assertion failed immediately after method-a was called, before method-b can even be called. ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testFormat with modifications in snippet calls method-b before method-a... but it might also be a pretty weak example.",
        "notes": "By extension of 00518 - the use case here depicts the return value of method-a being passed into method-b, so it would be difficult to call method-b without calling method-a in this case. I think it's best practice to call method-a before method-b to parse and to format, but I don't know if the connection is strong enough to warrant this being a true spec (it doesn't affect the correctness if one wanted to simply format a new Date() object, like the notes in the snippet does). CONNECTION_DOES_NOT_NECESSITATE_ORDERING: the use case illustrates that the Object value returned by method-a is passed into method-b. However, method-b is a public method, and one does not necessarily need to call method-a in order to supply an input for method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-19-02",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 221,
        "inspection-start-time": "2022-01-31-19-02",
        "project": "commons-validator",
        "spec-id": "00525",
        "method-a": "org.apache.commons.validator.routines.AbstractCalendarValidator.parse(Ljava/lang/String;Ljava/text/Format;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.routines.AbstractCalendarValidator.getFormat(Ljava/util/Locale;)Ljava/text/Format;",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "java.text.Format",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00525.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractCalendarValidator.java:187",
                        "method-b-site": "AbstractCalendarValidator.java:217",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with null, but the return value was immeditely passed into an assertNotNull().",
                "notes": "The DSI experiment resulted in stage-0 because the assertion failed immediately after method-a was called, before method-b can even be called. ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testFormat with modifications in snippet indirectly calls method-b before method-a... but it might also be a pretty weak example.",
        "notes": "The use case here depicts the return value of method-a being passed into the indirect caller of method-b, so it would be difficult to call method-b without calling method-a in this case. While there is a connection between method-a and the indirect caller of method-b (AbstractFormatValidator.format(), I don't think there is a strict temporal relationship between method-a and method-bthemselves (method-b simply retrieves a DateFormat object based on its argument and the field variables AbstractCalendarValidator.dateStyle and AbstractCalendarValidator.timeStyle, both of which are only set once in the constructor of the object.) - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-19-04",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 222,
        "inspection-start-time": "2022-01-31-19-04",
        "project": "commons-validator",
        "spec-id": "00526",
        "method-a": "org.apache.commons.validator.routines.AbstractCalendarValidator.parse(Ljava/lang/String;Ljava/text/Format;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.routines.AbstractFormatValidator.isStrict()Z",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "boolean",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00526.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractCalendarValidator.java:187",
                        "method-b-site": "AbstractFormatValidator.java:187",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with null, but the return value was immeditely passed into an assertNotNull().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-19-06",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 223,
        "inspection-start-time": "2022-01-31-19-06",
        "project": "commons-validator",
        "spec-id": "00527",
        "method-a": "org.apache.commons.validator.routines.AbstractCalendarValidator.parse(Ljava/lang/String;Ljava/text/Format;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.routines.AbstractFormatValidator.processParsedValue(Ljava/lang/Object;Ljava/text/Format;)Ljava/lang/Object;",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "java.lang.Object",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00527.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractCalendarValidator.java:187",
                        "method-b-site": "AbstractFormatValidator.java:192",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with null, but the return value was immeditely passed into an assertNotNull().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-19-07",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 224,
        "inspection-start-time": "2022-01-31-20-04",
        "project": "commons-validator",
        "spec-id": "00536",
        "method-a": "org.apache.commons.validator.routines.BigDecimalValidator.isValid(Ljava/lang/String;Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.AbstractFormatValidator.isValid(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00536.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CurrencyValidatorTest#testPattern",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "CurrencyValidatorTest.java:191",
                        "method-b-site": "AbstractFormatValidator.java:88",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN + REPLACE_RETURN_WITH_EXPECTED_OUTPUT - method-a would have returned false, and DSI replaced the return value of method-a with the default value false. Moreover, the return value of method-a is checked via an assertFalse().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-20-08",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 225,
        "inspection-start-time": "2022-01-31-20-14",
        "project": "commons-validator",
        "spec-id": "00538",
        "method-a": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00538.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CalendarValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "CalendarValidatorTest.java:219",
                        "method-b-site": "CalendarValidatorTest.java:226",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT + REPLACEMENT_VALUE_UNCLEAR - the assertion failure messages says that the return value of method-a was replaced by \"\" (the empty string), but I don't see any String variables in scope being set to the empty string.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "CalendarValidator inherits from AbstractCalendarValidator, where method-b is defined. From the definition of method-a, it is clear that method-a calls method-b, just that methodtracer didn't see this because of DYNAMIC_DISPATCH.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-20-28",
        "inspection-time-in-minutes": 14
    },
    {
        "iid": 226,
        "inspection-start-time": "2022-01-31-23-59",
        "project": "commons-validator",
        "spec-id": "00539",
        "method-a": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00539.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CalendarValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "CalendarValidatorTest.java:219",
                        "method-b-site": "CalendarValidatorTest.java:223",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT + REPLACEMENT_VALUE_UNCLEAR - the assertion failure messages says that the return value of method-a was replaced by \"\" (the empty string), but I don't see any String variables in scope being set to the empty string.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CalendarValidatorTest#testFormat with CalendarValidatorTest.java:223 moved to before CalendarValidatorTest.java:219",
        "notes": "The snippet shows that method-a and method-b are both wrappers for the same method; therefore, there is no ordering relationship between method-a and method-b - CONNECTION_DOES_NOT_NECESSITATE_ORDERING.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-00-05",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 227,
        "inspection-start-time": "2022-02-01-00-25",
        "project": "commons-validator",
        "spec-id": "00540",
        "method-a": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/util/TimeZone;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00540.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CalendarValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "CalendarValidatorTest.java:219",
                        "method-b-site": "CalendarValidatorTest.java:222",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT + REPLACEMENT_VALUE_UNCLEAR - the assertion failure messages says that the return value of method-a was replaced by \"\" (the empty string), but I don't see any String variables in scope being set to the empty string.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CalendarValidatorTest#testFormat with CalendarValidatorTest.java:222 moved to before CalendarValidatorTest.java:219",
        "notes": "The snippet shows that method-a and method-b are both wrappers for the same method; therefore, there is no ordering relationship between method-a and method-b - CONNECTION_DOES_NOT_NECESSITATE_ORDERING.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-00-29",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 228,
        "inspection-start-time": "2022-02-01-00-29",
        "project": "commons-validator",
        "spec-id": "00541",
        "method-a": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00541.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CalendarValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "CalendarValidatorTest.java:216",
                        "method-b-site": "CalendarValidatorTest.java:219",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT + REPLACEMENT_VALUE_UNCLEAR - the assertion failure messages says that the return value of method-a was replaced by \"\" (the empty string), but I don't see any String variables in scope being set to the empty string.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CalendarValidatorTest#testFormat with CalendarValidatorTest.java:219 moved to before CalendarValidatorTest.java:216",
        "notes": "The snippet shows that method-a and method-b are both wrappers for separate format() methods that do the same base formatting (format(value, formatter)) with possibly different configurations. Hence, there is no ordering relationship between method-a and method-b - CONNECTION_DOES_NOT_NECESSITATE_ORDERING.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-00-35",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 229,
        "inspection-start-time": "2022-02-01-00-35",
        "project": "commons-validator",
        "spec-id": "00542",
        "method-a": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00542.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CalendarValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "CalendarValidatorTest.java:216",
                        "method-b-site": "CalendarValidatorTest.java:226",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT + REPLACEMENT_VALUE_UNCLEAR - the assertion failure messages says that the return value of method-a was replaced by \"\" (the empty string), but I don't see any String variables in scope being set to the empty string.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "The snippet shows that method-a is a wrapper for a format() method that is different from method-b but does the same base formatting (format(value, formatter)) with possibly different configurations. Hence, there is no ordering relationship between method-a and method-b - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-00-37",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 230,
        "inspection-start-time": "2022-02-01-00-37",
        "project": "commons-validator",
        "spec-id": "00543",
        "method-a": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00543.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CalendarValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "CalendarValidatorTest.java:216",
                        "method-b-site": "CalendarValidatorTest.java:223",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT + REPLACEMENT_VALUE_UNCLEAR - the assertion failure messages says that the return value of method-a was replaced by \"\" (the empty string), but I don't see any String variables in scope being set to the empty string.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CalendarValidatorTest#testFormat with CalendarValidatorTest.java:223 moved to before CalendarValidatorTest.java:216",
        "notes": "The snippet shows that method-a and method-b are both wrappers for separate format() methods that do the same base formatting (format(value, formatter)) with possibly different configurations. Hence, there is no ordering relationship between method-a and method-b - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-00-41",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 231,
        "inspection-start-time": "2022-02-01-00-41",
        "project": "commons-validator",
        "spec-id": "00544",
        "method-a": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/util/TimeZone;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00544.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CalendarValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "CalendarValidatorTest.java:216",
                        "method-b-site": "CalendarValidatorTest.java:222",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT + REPLACEMENT_VALUE_UNCLEAR - the assertion failure messages says that the return value of method-a was replaced by \"\" (the empty string), but I don't see any String variables in scope being set to the empty string.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CalendarValidatorTest#testFormat with CalendarValidatorTest.java:222 moved to before CalendarValidatorTest.java:216",
        "notes": "The snippet shows that method-a and method-b are both wrappers for separate format() methods that do the same base formatting (format(value, formatter)) with possibly different configurations. Hence, there is no ordering relationship between method-a and method-b. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-00-43",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 232,
        "inspection-start-time": "2022-02-01-00-43",
        "project": "commons-validator",
        "spec-id": "00545",
        "method-a": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00545.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CalendarValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "CalendarValidatorTest.java:223",
                        "method-b-site": "CalendarValidatorTest.java:226",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT + REPLACEMENT_VALUE_UNCLEAR - the assertion failure messages says that the return value of method-a was replaced by \"\" (the empty string), but I don't see any String variables in scope being set to the empty string.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "CalendarValidator inherits from AbstractCalendarValidator, where method-b is defined. From the definition of method-a, it is clear that method-a calls method-b, just that methodtracer didn't see this because of DYNAMIC_DISPATCH.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-00-49",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 233,
        "inspection-start-time": "2022-02-01-01-40",
        "project": "commons-validator",
        "spec-id": "00546",
        "method-a": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/util/TimeZone;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00546.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CalendarValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "CalendarValidatorTest.java:222",
                        "method-b-site": "CalendarValidatorTest.java:226",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR - the assertion failure messages says that the return value of method-a was replaced by \"\" (the empty string), but I don't see any String variables in scope being set to the empty string.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "CalendarValidator inherits from AbstractCalendarValidator, where method-b is defined. From the definition of method-a, it is clear that method-a calls method-b, just that methodtracer didn't see this because of DYNAMIC_DISPATCH.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-01-45",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 234,
        "inspection-start-time": "2022-02-01-01-45",
        "project": "commons-validator",
        "spec-id": "00547",
        "method-a": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/util/TimeZone;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.CalendarValidator.format(Ljava/lang/Object;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00547.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CalendarValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "CalendarValidatorTest.java:222",
                        "method-b-site": "CalendarValidatorTest.java:223",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR - the assertion failure messages says that the return value of method-a was replaced by \"\" (the empty string), but I don't see any String variables in scope being set to the empty string.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CalendarValidatorTest#testFormat with CalendarValidatorTest.java:223 moved to before CalendarValidatorTest.java:222",
        "notes": "The snippet shows that method-a and method-b are both wrappers for the same method; therefore, there is no ordering relationship between method-a and method-b. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-01-47",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 235,
        "inspection-start-time": "2022-02-01-01-47",
        "project": "commons-validator",
        "spec-id": "00548",
        "method-a": "org.apache.commons.validator.routines.CalendarValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.CalendarValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00548.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CalendarValidatorTest#testCalendarValidatorMethods",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "CalendarValidatorTest.java:94",
                        "method-b-site": "CalendarValidatorTest.java:95",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION - NullPointerException at CalendarValidatorTest.java:94.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CalendarValidatorTest#testCalendarValidatorMethods with CalendarValidatorTest.java:95 moved before CalendarValidatorTest.java:94",
        "notes": "snippet shows that method-a and method-b are both wrappers around a call to the same parse() method. Hence, there is no ordering relationship between method-a and method-b. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-01-55",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 236,
        "inspection-start-time": "2022-02-01-01-55",
        "project": "commons-validator",
        "spec-id": "00549",
        "method-a": "org.apache.commons.validator.routines.CalendarValidator.validate(Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.CalendarValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00549.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CalendarValidatorTest#testCalendarValidatorMethods",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "CalendarValidatorTest.java:93",
                        "method-b-site": "CalendarValidatorTest.java:95",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION - NullPointerException at CalendarValidatorTest.java:93.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CalendarValidatorTest#testCalendarValidatorMethods with CalendarValidatorTest.java:95 moved before CalendarValidatorTest.java:93",
        "notes": "snippet shows that method-a and method-b are both wrappers around a call to the same parse() method. Hence, there is no ordering relationship between method-a and method-b. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-01-58",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 237,
        "inspection-start-time": "2022-02-01-01-58",
        "project": "commons-validator",
        "spec-id": "00550",
        "method-a": "org.apache.commons.validator.routines.CalendarValidator.validate(Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.CalendarValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00550.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CalendarValidatorTest#testCalendarValidatorMethods",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "CalendarValidatorTest.java:93",
                        "method-b-site": "CalendarValidatorTest.java:94",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION - NullPointerException at CalendarValidatorTest.java:93.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CalendarValidatorTest#testCalendarValidatorMethods with CalendarValidatorTest.java:94 moved before CalendarValidatorTest.java:93",
        "notes": "snippet shows that method-a and method-b are both wrappers around a call to the same parse() method. Hence, there is no ordering relationship between method-a and method-b. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-02-00",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 238,
        "inspection-start-time": "2022-02-01-02-00",
        "project": "commons-validator",
        "spec-id": "00551",
        "method-a": "org.apache.commons.validator.routines.CalendarValidator.validate(Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.CalendarValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00551.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CalendarValidatorTest#testCalendarValidatorMethods",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "CalendarValidatorTest.java:92",
                        "method-b-site": "CalendarValidatorTest.java:95",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION - NullPointerException at CalendarValidatorTest.java:92.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CalendarValidatorTest#testCalendarValidatorMethods with CalendarValidatorTest.java:95 moved before CalendarValidatorTest.java:92",
        "notes": "snippet shows that method-a and method-b are both wrappers around a call to the same parse() method. Hence, there is no ordering relationship between method-a and method-b. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-02-02",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 239,
        "inspection-start-time": "2022-02-01-02-02",
        "project": "commons-validator",
        "spec-id": "00552",
        "method-a": "org.apache.commons.validator.routines.CalendarValidator.validate(Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.CalendarValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00552.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CalendarValidatorTest#testCalendarValidatorMethods",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "CalendarValidatorTest.java:92",
                        "method-b-site": "CalendarValidatorTest.java:94",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION - NullPointerException at CalendarValidatorTest.java:92.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CalendarValidatorTest#testCalendarValidatorMethods with CalendarValidatorTest.java:94 moved before CalendarValidatorTest.java:92",
        "notes": "snippet shows that method-a and method-b are both wrappers around a call to the same parse() method. Hence, there is no ordering relationship between method-a and method-b. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-02-04",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 240,
        "inspection-start-time": "2022-02-01-02-04",
        "project": "commons-validator",
        "spec-id": "00553",
        "method-a": "org.apache.commons.validator.routines.CalendarValidator.validate(Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.CalendarValidator.validate(Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00553.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CalendarValidatorTest#testCalendarValidatorMethods",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "CalendarValidatorTest.java:92",
                        "method-b-site": "CalendarValidatorTest.java:93",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION - NullPointerException at CalendarValidatorTest.java:92.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CalendarValidatorTest#testCalendarValidatorMethods with CalendarValidatorTest.java:93 moved before CalendarValidatorTest.java:92",
        "notes": "snippet shows that method-a and method-b are both wrappers around a call to the same parse() method. Hence, there is no ordering relationship between method-a and method-b. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-02-06",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 241,
        "inspection-start-time": "2022-02-01-02-06",
        "project": "commons-validator",
        "spec-id": "00554",
        "method-a": "org.apache.commons.validator.routines.CodeValidator.getMaxLength()I",
        "method-b": "org.apache.commons.validator.routines.CodeValidator.getCheckDigit()Lorg/apache/commons/validator/routines/checkdigit/CheckDigit;",
        "method-a-return-type": "int",
        "method-b-return-type": "org.apache.commons.validator.routines.checkdigit.CheckDigit",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00554.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CodeValidatorTest#testConstructors",
                "stage": "pre-stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "CodeValidatorTest.java:223",
                        "method-b-site": "CodeValidatorTest.java:224",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:230",
                        "method-b-site": "CodeValidatorTest.java:231",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:237",
                        "method-b-site": "CodeValidatorTest.java:238",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:244",
                        "method-b-site": "CodeValidatorTest.java:245",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:251",
                        "method-b-site": "CodeValidatorTest.java:252",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:258",
                        "method-b-site": "CodeValidatorTest.java:259",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 6,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - method-a's return value was checked in an assertEquals() against the int value -1, but DSI replaced the return value of method-a with the default int value 0. ORDER_OF_ASSERTIONS",
                "notes": "Note that the first perturbation resulted in a stage-0-failure due to an assertion failure from the wrongfully replaced return value of method-a, making all subsequent perturbations result in pre-stage-0-failure."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CodeValidatorTest#testConstructors with each line of invocation of method-b moved before each counterpart invocation of method-a.",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable CodeValidator.maxLength, and method-b is a 1-line naive getter to the field variable CodeValidator.checkdigit.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-02-19",
        "inspection-time-in-minutes": 13
    },
    {
        "iid": 242,
        "inspection-start-time": "2022-02-01-02-19",
        "project": "commons-validator",
        "spec-id": "00555",
        "method-a": "org.apache.commons.validator.routines.CodeValidator.getMinLength()I",
        "method-b": "org.apache.commons.validator.routines.CodeValidator.getCheckDigit()Lorg/apache/commons/validator/routines/checkdigit/CheckDigit;",
        "method-a-return-type": "int",
        "method-b-return-type": "org.apache.commons.validator.routines.checkdigit.CheckDigit",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00555.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CodeValidatorTest#testConstructors",
                "stage": "pre-stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "CodeValidatorTest.java:222",
                        "method-b-site": "CodeValidatorTest.java:224",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:229",
                        "method-b-site": "CodeValidatorTest.java:231",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:236",
                        "method-b-site": "CodeValidatorTest.java:238",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:243",
                        "method-b-site": "CodeValidatorTest.java:245",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:250",
                        "method-b-site": "CodeValidatorTest.java:252",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:257",
                        "method-b-site": "CodeValidatorTest.java:259",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 6,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - method-a's return value was checked in an assertEquals() against the int value -1, but DSI replaced the return value of method-a with the default int value 0. ORDER_OF_ASSERTIONS",
                "notes": "Note that the first perturbation resulted in a stage-0-failure due to an assertion failure from the wrongfully replaced return value of method-a, making all subsequent perturbations result in pre-stage-0-failure."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CodeValidatorTest#testConstructors with each line of invocation of method-b moved before each counterpart invocation of method-a.",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable CodeValidator.minLength, and method-b is a 1-line naive getter to the field variable CodeValidator.checkdigit.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-02-21",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 243,
        "inspection-start-time": "2022-02-01-02-21",
        "project": "commons-validator",
        "spec-id": "00556",
        "method-a": "org.apache.commons.validator.routines.CodeValidator.getMinLength()I",
        "method-b": "org.apache.commons.validator.routines.CodeValidator.getMaxLength()I",
        "method-a-return-type": "int",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00556.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CodeValidatorTest#testConstructors",
                "stage": "pre-stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "CodeValidatorTest.java:222",
                        "method-b-site": "CodeValidatorTest.java:223",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:229",
                        "method-b-site": "CodeValidatorTest.java:230",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:236",
                        "method-b-site": "CodeValidatorTest.java:237",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:243",
                        "method-b-site": "CodeValidatorTest.java:244",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:250",
                        "method-b-site": "CodeValidatorTest.java:251",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:257",
                        "method-b-site": "CodeValidatorTest.java:258",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 6,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - method-a's return value was checked in an assertEquals() against the int value -1, but DSI replaced the return value of method-a with the default int value 0. ORDER_OF_ASSERTIONS",
                "notes": "Note that the first perturbation resulted in a stage-0-failure due to an assertion failure from the wrongfully replaced return value of method-a, making all subsequent perturbations result in pre-stage-0-failure."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CodeValidatorTest#testConstructors with each line of invocation of method-b moved before each counterpart invocation of method-a.",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable CodeValidator.minLength, and method-b is a 1-line naive getter to the field variable CodeValidator.maxLength.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-02-23",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 244,
        "inspection-start-time": "2022-02-01-02-40",
        "project": "commons-validator",
        "spec-id": "00560",
        "method-a": "org.apache.commons.validator.routines.CodeValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.CodeValidator.validate(Ljava/lang/String;)Ljava/lang/Object;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00560.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.ISSNValidatorTest#testNull",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ISSNValidator.java:114",
                        "method-b-site": "CodeValidator.java:234",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN + REPLACE_RETURN_WITH_EXPECTED_OUTPUT - the return value of method-a was checked via an assertFalse(), and DSI replaced the return value of method-a with false.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-02-45",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 245,
        "inspection-start-time": "2022-02-01-13-20",
        "project": "commons-validator",
        "spec-id": "00567",
        "method-a": "org.apache.commons.validator.routines.DomainValidator.isAllowLocal()Z",
        "method-b": "org.apache.commons.validator.routines.DomainValidator.isValidLocalTld(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00567.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.EmailValidatorTest#testValidator473_4",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "EmailValidator.java:139",
                        "method-b-site": "DomainValidator.java:322",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "The return value of method-a was supposed to be true, but the replacement value via DSI was false, hence there was an IllegalArgumentException.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.EmailValidatorTest#testValidator473_4 with modification in snippet?",
        "notes": "ONE_STATELESS_METHOD - method-a is a 1-line naive getter to the field variable DomainValidator.allowLocal. method-b will not be called if DomainValidator.allowLocal is set to false (because the call to method-b is in a short circuit AND with the field variable), but I don't think this necessitates calling method-a before method-b. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-13-29",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 246,
        "inspection-start-time": "2022-02-01-13-29",
        "project": "commons-validator",
        "spec-id": "00568",
        "method-a": "org.apache.commons.validator.routines.DomainValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.DomainValidator.isValidCountryCodeTld(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00568.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DomainValidatorTest#testIDN",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DomainValidatorTest.java:138",
                        "method-b-site": "DomainValidator.java:327",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was immediately checked in an assertTrue(), but DSI replaced the return value of method-a with the replacement value false.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-13-34",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 247,
        "inspection-start-time": "2022-02-01-14-55",
        "project": "commons-validator",
        "spec-id": "00575",
        "method-a": "org.apache.commons.validator.routines.DomainValidator.isValidTld(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.DomainValidator.isValidCountryCodeTld(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00575.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DomainValidatorTest#testIDN",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DomainValidator.java:286",
                        "method-b-site": "DomainValidator.java:327",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - method-a returns true on normal test execution, and the return value of method-a was checked in an assertTrue(). However, DSI replaced the return value of method-a with the default value false.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-14-59",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 248,
        "inspection-start-time": "2022-02-01-14-59",
        "project": "commons-validator",
        "spec-id": "00576",
        "method-a": "org.apache.commons.validator.routines.DomainValidator.isValidTld(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.DomainValidator.isValidGenericTld(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 21,
        "code-snippets-file": "snippets/u/00576.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DomainValidatorTest#testIDN",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DomainValidator.java:286",
                        "method-b-site": "DomainValidator.java:326",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - method-a returns true on normal test execution, and the return value of method-a was checked in an assertTrue(). However, DSI replaced the return value of method-a with the default value false.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-15-01",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 249,
        "inspection-start-time": "2022-02-01-15-01",
        "project": "commons-validator",
        "spec-id": "00577",
        "method-a": "org.apache.commons.validator.routines.DomainValidator.isValidTld(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.DomainValidator.isValidInfrastructureTld(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 21,
        "code-snippets-file": "snippets/u/00577.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DomainValidatorTest#testIDN",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DomainValidator.java:286",
                        "method-b-site": "DomainValidator.java:325",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - method-a returns true on normal test execution, and the return value of method-a was checked in an assertTrue(). However, DSI replaced the return value of method-a with the default value false.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-15-02",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 250,
        "inspection-start-time": "2022-02-01-15-02",
        "project": "commons-validator",
        "spec-id": "00578",
        "method-a": "org.apache.commons.validator.routines.EmailValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.EmailValidator.isValidDomain(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/u/00578.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EmailTest#testEmail",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "GenericValidator.java:259",
                        "method-b-site": "EmailValidator.java:191",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - method-a returns true on a normal test execution, but DSI replaced it with the replacement value false, which caued an assertion failure (assertTrue()).",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-15-12",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 251,
        "inspection-start-time": "2022-02-01-15-12",
        "project": "commons-validator",
        "spec-id": "00579",
        "method-a": "org.apache.commons.validator.routines.EmailValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.EmailValidator.isValidUser(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 7,
        "code-snippets-file": "snippets/u/00579.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EmailTest#testEmail",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "GenericValidator.java:259",
                        "method-b-site": "EmailValidator.java:187",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - method-a returns true on a normal test execution, but DSI replaced it with the replacement value false, which caued an assertion failure (assertTrue()).",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-15-14",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 252,
        "inspection-start-time": "2022-02-01-15-14",
        "project": "commons-validator",
        "spec-id": "00580",
        "method-a": "org.apache.commons.validator.routines.EmailValidator.isValidUser(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.EmailValidator.isValidDomain(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/u/00580.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EmailTest#testEmail",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "EmailValidator.java:187",
                        "method-b-site": "EmailValidator.java:191",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: method-a returns true in the normal test execution, but DSI replaces it with the default value false. This causes the caller of method-a and method-b to exit prematurely before calling method-b, which is why the DSI experiment resulted in stage-0.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.EmailTest#testEmail with the if block from EmailValidator.java:187 moved to after the if block of EmailValidator.java:191.",
        "notes": "method-a and method-b are both methods that perform different, unrelated checks to different String arguments. Manual experimentation showed that the test still passes when method-a is manually moved to call after method-b, so this is a spurious spec. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-15-30",
        "inspection-time-in-minutes": 16
    },
    {
        "iid": 253,
        "inspection-start-time": "2022-02-01-17-57",
        "project": "commons-validator",
        "spec-id": "00584",
        "method-a": "org.apache.commons.validator.routines.IBANValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.IBANValidator.getValidator(Ljava/lang/String;)Lorg/apache/commons/validator/routines/IBANValidator$Validator;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "org.apache.commons.validator.routines.IBANValidator$Validator",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00584.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.IBANValidatorTest#testNull",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "IBANValidatorTest.java:172",
                        "method-b-site": "IBANValidator.java:246",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN + REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION - method-a returns false in the intended test execution (the return value of method-a is checked in an assertFalse()), and DSI replaced the return value with the default value false. ",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-18-00",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 254,
        "inspection-start-time": "2022-02-01-18-18",
        "project": "commons-validator",
        "spec-id": "00587",
        "method-a": "org.apache.commons.validator.routines.ISBNValidator.validate(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.ISBNValidator.convertToISBN13(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00587.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.ISBNValidatorTest#testNull",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "ISBNValidatorTest.java:253",
                        "method-b-site": "ISBNValidatorTest.java:256",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT + REPLACEMENT_VALUE_UNCLEAR - the assertion failure shows that the return value of method-a was replaced with a non-null value (the assertion itself is an assertNull()). Not sure what the replacement value is or where it came from, because there doesn't seem to be any strings in scope.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.ISBNValidatorTest#testNull with ISBNValidatorTest.java:256 manually moved to before ISBNValidatorTest.java:253.",
        "notes": "There doesn't seem to be anything in relation between the two methods - UNRELATED_STATEFUL_METHODS. They both take in a different String value; method-a checks whether the input is valid and also processes the String further, method-b simply returns a converted version of the input string.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-18-26",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 255,
        "inspection-start-time": "2022-02-01-18-26",
        "project": "commons-validator",
        "spec-id": "00588",
        "method-a": "org.apache.commons.validator.routines.ISSNValidator.convertToEAN13(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.ISSNValidator.validate(Ljava/lang/String;)Ljava/lang/Object;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00588.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.ISSNValidatorTest#testIsValidISSNConvertNull",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "ISSNValidatorTest.java:100",
                        "method-b-site": "ISSNValidator.java:149",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR - the assertion failure message states that the replacement value of method-a wasn't null (what method-a is expected to return). However, I don't see any String variables in scope.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-18-31",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 256,
        "inspection-start-time": "2022-02-01-18-31",
        "project": "commons-validator",
        "spec-id": "00589",
        "method-a": "org.apache.commons.validator.routines.InetAddressValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.InetAddressValidator.isValidInet4Address(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00589.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.InetAddressValidatorTest#testVALIDATOR_335",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "InetAddressValidatorTest.java:55",
                        "method-b-site": "InetAddressValidator.java:80",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertTrue, but DSI replaced the return value of method-a with false.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-18-37",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 257,
        "inspection-start-time": "2022-02-01-18-37",
        "project": "commons-validator",
        "spec-id": "00590",
        "method-a": "org.apache.commons.validator.routines.InetAddressValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.InetAddressValidator.isValidInet6Address(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00590.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.InetAddressValidatorTest#testVALIDATOR_335",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "InetAddressValidatorTest.java:55",
                        "method-b-site": "InetAddressValidator.java:80",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertTrue, but DSI replaced the return value of method-a with false.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-18-40",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 258,
        "inspection-start-time": "2022-02-01-20-28",
        "project": "commons-validator",
        "spec-id": "00592",
        "method-a": "org.apache.commons.validator.routines.InetAddressValidator.isValidInet6Address(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.InetAddressValidator.isValidInet4Address(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00592.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator452",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:400",
                        "method-b-site": "InetAddressValidator.java:192",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: DSI's replacement of method-a caused the state to be incorrect; specifically, the conditional on UrlValidator.java:400 was not supposed to go into the then branch, but it did; causing the output of UrlValidator.isValid() to be false, which is not what the test expected (assertTrue())",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-20-39",
        "inspection-time-in-minutes": 11
    },
    {
        "iid": 259,
        "inspection-start-time": "2022-02-01-21-14",
        "project": "commons-validator",
        "spec-id": "00595",
        "method-a": "org.apache.commons.validator.routines.RegexValidator.validate(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.RegexValidator.match(Ljava/lang/String;)[Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00595.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.RegexValidatorTest#testNullValue",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "RegexValidatorTest.java:184",
                        "method-b-site": "RegexValidatorTest.java:185",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT + REPLACEMENT_VALUE_UNCLEAR - the assertion failure message says that the return value of method-a was replaced with \"\" (the empty string), but I don't see an empty String variable in scope.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.RegexValidatorTest#testNullValue",
        "notes": "method-a and method-b roughly accomplish the same thing, with different return values; they both validate whether the input string matches some item in the set of regular expressions, and method-a returns as a String, and method-b returns as an array, the groups that are matched in the case that the input string does match. There doesn't seem to be an ordering relationship between the two methods. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-21-23",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 260,
        "inspection-start-time": "2022-02-01-21-24",
        "project": "commons-validator",
        "spec-id": "00596",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.format(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.TimeValidator.format(Ljava/lang/Object;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00596.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:255",
                        "method-b-site": "TimeValidatorTest.java:257",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT + REPLACEMENT_VALUE_UNCLEAR - The assertion message shows that the return value of method-a was \"\" (the empty string), but I don't see a variable with the empty string in scope.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.TimeValidatorTest#testFormat with TimeValidatorTest.java:255 moved after TimeValidatorTest.java:257",
        "notes": "Both method-a and method-b are different wrappers to the same method (AbstractFormatValidator.format()), so there is no ordering relationship between the two methods. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-21-35",
        "inspection-time-in-minutes": 11
    },
    {
        "iid": 261,
        "inspection-start-time": "2022-02-01-21-35",
        "project": "commons-validator",
        "spec-id": "00597",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.format(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.TimeValidator.format(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00597.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:255",
                        "method-b-site": "TimeValidatorTest.java:256",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT + REPLACEMENT_VALUE_UNCLEAR - The assertion message shows that the return value of method-a was \"\" (the empty string), but I don't see a variable with the empty string in scope.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.TimeValidatorTest#testFormat with TimeValidatorTest.java:255 moved after TimeValidatorTest.java:256",
        "notes": "Both method-a and method-b are different wrappers to the same method (AbstractFormatValidator.format()), so there is no ordering relationship between the two methods. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-21-37",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 262,
        "inspection-start-time": "2022-02-01-21-37",
        "project": "commons-validator",
        "spec-id": "00598",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.format(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.TimeValidator.format(Ljava/lang/Object;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00598.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:256",
                        "method-b-site": "TimeValidatorTest.java:257",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT + REPLACEMENT_VALUE_UNCLEAR - The assertion message shows that the return value of method-a was \"\" (the empty string), but I don't see a variable with the empty string in scope.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.TimeValidatorTest#testFormat with TimeValidatorTest.java:256 moved after TimeValidatorTest.java:257",
        "notes": "Both method-a and method-b are different wrappers to the same method (AbstractFormatValidator.format()), so there is no ordering relationship between the two methods. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-21-39",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 263,
        "inspection-start-time": "2022-02-01-21-38",
        "project": "commons-validator",
        "spec-id": "00599",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.parse(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.routines.AbstractCalendarValidator.parse(Ljava/lang/String;Ljava/text/Format;)Ljava/lang/Object;",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "java.lang.Object",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00599.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidator.java:152",
                        "method-b-site": "AbstractCalendarValidator.java:187",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNotNull(), but DSI replaced the return value of method-a with null.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-21-45",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 264,
        "inspection-start-time": "2022-02-01-21-45",
        "project": "commons-validator",
        "spec-id": "00600",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.parse(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.routines.AbstractFormatValidator.isStrict()Z",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "boolean",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00600.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidator.java:152",
                        "method-b-site": "AbstractFormatValidator.java:187",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNotNull(), but DSI replaced the return value of method-a with null.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-21-49",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 265,
        "inspection-start-time": "2022-02-01-22-05",
        "project": "commons-validator",
        "spec-id": "00601",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.parse(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.routines.AbstractFormatValidator.processParsedValue(Ljava/lang/Object;Ljava/text/Format;)Ljava/lang/Object;",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "java.lang.Object",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00601.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidator.java:152",
                        "method-b-site": "AbstractFormatValidator.java:192",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNotNull(), but DSI replaced the return value of method-a with null.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-22-09",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 266,
        "inspection-start-time": "2022-02-01-22-09",
        "project": "commons-validator",
        "spec-id": "00602",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00602.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:191",
                        "method-b-site": "TimeValidatorTest.java:234",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNotNull(), but DSI replaced the return value of method-a with null.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone with TimeValidatorTest.java:191-196 moved after TimeValidatorTest.java:234-242",
        "notes": "Both method-a and method-b are wrapper methods to the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)). So, there is no ordering relationship between the two methods. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-22-16",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 267,
        "inspection-start-time": "2022-02-01-22-16",
        "project": "commons-validator",
        "spec-id": "00603",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00603.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:191",
                        "method-b-site": "TimeValidatorTest.java:223",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNotNull(), but DSI replaced the return value of method-a with null.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone with TimeValidatorTest.java:191-196 moved after TimeValidatorTest.java:223-231",
        "notes": "Both method-a and method-b are wrapper methods to the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)). So, there is no ordering relationship between the two methods. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-22-20",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 268,
        "inspection-start-time": "2022-02-01-22-20",
        "project": "commons-validator",
        "spec-id": "00604",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00604.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:191",
                        "method-b-site": "TimeValidatorTest.java:207",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNotNull(), but DSI replaced the return value of method-a with null.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone with TimeValidatorTest.java:191-196 moved after TimeValidatorTest.java:207-212",
        "notes": "Both method-a and method-b are wrapper methods to the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)). So, there is no ordering relationship between the two methods. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-22-22",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 269,
        "inspection-start-time": "2022-02-01-22-22",
        "project": "commons-validator",
        "spec-id": "00605",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00605.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:191",
                        "method-b-site": "TimeValidatorTest.java:215",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNotNull(), but DSI replaced the return value of method-a with null.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone with TimeValidatorTest.java:191-196 moved after TimeValidatorTest.java:215-220",
        "notes": "Both method-a and method-b are wrapper methods to the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)). So, there is no ordering relationship between the two methods. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-22-24",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 270,
        "inspection-start-time": "2022-02-01-22-24",
        "project": "commons-validator",
        "spec-id": "00606",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00606.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:191",
                        "method-b-site": "TimeValidatorTest.java:199",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNotNull(), but DSI replaced the return value of method-a with null.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone with TimeValidatorTest.java:191-196 moved after TimeValidatorTest.java:199-204",
        "notes": "Both method-a and method-b are wrapper methods to the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)). So, there is no ordering relationship between the two methods. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-22-26",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 271,
        "inspection-start-time": "2022-02-01-22-26",
        "project": "commons-validator",
        "spec-id": "00607",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.AbstractCalendarValidator.parse(Ljava/lang/String;Ljava/text/Format;)Ljava/lang/Object;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.lang.Object",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00607.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:253",
                        "method-b-site": "AbstractCalendarValidator.java:187",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNull(), but DSI replaced the return value of method-a with null.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-22-30",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 272,
        "inspection-start-time": "2022-02-01-22-30",
        "project": "commons-validator",
        "spec-id": "00608",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.AbstractFormatValidator.isStrict()Z",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "boolean",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00608.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:253",
                        "method-b-site": "AbstractFormatValidator.java:187",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNull(), but DSI replaced the return value of method-a with null.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-22-33",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 273,
        "inspection-start-time": "2022-02-01-22-33",
        "project": "commons-validator",
        "spec-id": "00609",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.AbstractFormatValidator.processParsedValue(Ljava/lang/Object;Ljava/text/Format;)Ljava/lang/Object;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.lang.Object",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00609.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:253",
                        "method-b-site": "AbstractFormatValidator.java:192",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNull(), but DSI replaced the return value of method-a with null.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-22-36",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 274,
        "inspection-start-time": "2022-02-01-22-40",
        "project": "commons-validator",
        "spec-id": "00610",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/lang/String;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.TimeValidator.parse(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/lang/Object;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00610.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testFormat",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:253",
                        "method-b-site": "TimeValidator.java:152",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNull(), but DSI replaced the return value of method-a with null.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-22-42",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 275,
        "inspection-start-time": "2022-02-01-22-42",
        "project": "commons-validator",
        "spec-id": "00611",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00611.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:223",
                        "method-b-site": "TimeValidatorTest.java:234",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNotNull(), but DSI replaced the return value of method-a with null.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone with TimeValidatorTest.java:223-231 moved after TimeValidatorTest.java:234-242",
        "notes": "Both method-a and method-b are wrapper methods to the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)). So, there is no ordering relationship between the two methods. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-22-44",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 276,
        "inspection-start-time": "2022-02-01-22-44",
        "project": "commons-validator",
        "spec-id": "00612",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00612.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:207",
                        "method-b-site": "TimeValidatorTest.java:234",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNotNull(), but DSI replaced the return value of method-a with null.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone with TimeValidatorTest.java:207-212 moved after TimeValidatorTest.java:234-242",
        "notes": "Both method-a and method-b are wrapper methods to the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)). So, there is no ordering relationship between the two methods. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-22-48",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 277,
        "inspection-start-time": "2022-02-01-22-48",
        "project": "commons-validator",
        "spec-id": "00613",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00613.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:207",
                        "method-b-site": "TimeValidatorTest.java:223",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNotNull(), but DSI replaced the return value of method-a with null.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone with TimeValidatorTest.java:207-212 moved after TimeValidatorTest.java:223-231",
        "notes": "Both method-a and method-b are wrapper methods to the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)). So, there is no ordering relationship between the two methods. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-22-51",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 278,
        "inspection-start-time": "2022-02-01-22-51",
        "project": "commons-validator",
        "spec-id": "00614",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00614.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:207",
                        "method-b-site": "TimeValidatorTest.java:215",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNotNull(), but DSI replaced the return value of method-a with null.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone with TimeValidatorTest.java:207-212 moved after TimeValidatorTest.java:215-220",
        "notes": "Both method-a and method-b are wrapper methods to the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)). So, there is no ordering relationship between the two methods. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-22-54",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 279,
        "inspection-start-time": "2022-02-01-22-54",
        "project": "commons-validator",
        "spec-id": "00615",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00615.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:215",
                        "method-b-site": "TimeValidatorTest.java:234",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNotNull(), but DSI replaced the return value of method-a with null.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone with TimeValidatorTest.java:215-220 moved after TimeValidatorTest.java:234-242",
        "notes": "Both method-a and method-b are wrapper methods to the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)). So, there is no ordering relationship between the two methods. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-22-56",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 280,
        "inspection-start-time": "2022-02-01-22-56",
        "project": "commons-validator",
        "spec-id": "00616",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00616.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:215",
                        "method-b-site": "TimeValidatorTest.java:223",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNotNull(), but DSI replaced the return value of method-a with null.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone with TimeValidatorTest.java:215-220 moved after TimeValidatorTest.java:223-231",
        "notes": "Both method-a and method-b are wrapper methods to the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)). So, there is no ordering relationship between the two methods. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-22-58",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 281,
        "inspection-start-time": "2022-02-02-00-09",
        "project": "commons-validator",
        "spec-id": "00617",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00617.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:199",
                        "method-b-site": "TimeValidatorTest.java:234",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNotNull(), but DSI replaced the return value of method-a with null.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone with TimeValidatorTest.java:199-204 moved after TimeValidatorTest.java:234-242",
        "notes": "Both method-a and method-b are wrapper methods to the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)). So, there is no ordering relationship between the two methods. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-00-11",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 282,
        "inspection-start-time": "2022-02-02-00-11",
        "project": "commons-validator",
        "spec-id": "00618",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00618.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:199",
                        "method-b-site": "TimeValidatorTest.java:223",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNotNull(), but DSI replaced the return value of method-a with null.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone with TimeValidatorTest.java:199-204 moved after TimeValidatorTest.java:223-231",
        "notes": "Both method-a and method-b are wrapper methods to the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)). So, there is no ordering relationship between the two methods. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-00-14",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 283,
        "inspection-start-time": "2022-02-02-00-14",
        "project": "commons-validator",
        "spec-id": "00619",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00619.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:199",
                        "method-b-site": "TimeValidatorTest.java:207",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNotNull(), but DSI replaced the return value of method-a with null.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone with TimeValidatorTest.java:199-204 moved after TimeValidatorTest.java:207-212",
        "notes": "Both method-a and method-b are wrapper methods to the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)). So, there is no ordering relationship between the two methods. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-00-16",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 284,
        "inspection-start-time": "2022-02-02-00-16",
        "project": "commons-validator",
        "spec-id": "00620",
        "method-a": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-b": "org.apache.commons.validator.routines.TimeValidator.validate(Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Calendar;",
        "method-a-return-type": "java.util.Calendar",
        "method-b-return-type": "java.util.Calendar",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00620.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "TimeValidatorTest.java:199",
                        "method-b-site": "TimeValidatorTest.java:215",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value of method-a was checked via an assertNotNull(), but DSI replaced the return value of method-a with null.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.TimeValidatorTest#testTimeZone with TimeValidatorTest.java:199-204 moved after TimeValidatorTest.java:215-220",
        "notes": "Both method-a and method-b are wrapper methods to the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)). So, there is no ordering relationship between the two methods. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-00-18",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 285,
        "inspection-start-time": "2022-02-02-00-36",
        "project": "commons-validator",
        "spec-id": "00623",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.countToken(Ljava/lang/String;Ljava/lang/String;)I",
        "method-a-return-type": "boolean",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 7,
        "code-snippets-file": "snippets/u/00623.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidatorTest.java:136",
                        "method-b-site": "UrlValidator.java:462",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with false, but the return value of method-a was expected to be true and checked via an assertTrue().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-00-45",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 286,
        "inspection-start-time": "2022-02-02-00-45",
        "project": "commons-validator",
        "spec-id": "00624",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.isOff(J)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00624.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator391OK",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidatorTest.java:292",
                        "method-b-site": "UrlValidator.java:362",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with false, but the return value of method-a was expected to be true and checked via an assertTrue().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-00-48",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 287,
        "inspection-start-time": "2022-02-02-00-48",
        "project": "commons-validator",
        "spec-id": "00625",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.isValidAuthority(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 7,
        "code-snippets-file": "snippets/u/00625.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidatorTest.java:136",
                        "method-b-site": "UrlValidator.java:325",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with false, but the return value of method-a was expected to be true and checked via an assertTrue().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-00-51",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 288,
        "inspection-start-time": "2022-02-02-00-51",
        "project": "commons-validator",
        "spec-id": "00626",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.isValidFragment(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 7,
        "code-snippets-file": "snippets/u/00626.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidatorTest.java:136",
                        "method-b-site": "UrlValidator.java:337",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with false, but the return value of method-a was expected to be true and checked via an assertTrue().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-00-53",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 289,
        "inspection-start-time": "2022-02-02-00-53",
        "project": "commons-validator",
        "spec-id": "00627",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.isValidPath(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 7,
        "code-snippets-file": "snippets/u/00627.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidatorTest.java:136",
                        "method-b-site": "UrlValidator.java:329",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with false, but the return value of method-a was expected to be true and checked via an assertTrue().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-00-56",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 290,
        "inspection-start-time": "2022-02-02-00-59",
        "project": "commons-validator",
        "spec-id": "00628",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.isValidQuery(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 7,
        "code-snippets-file": "snippets/u/00628.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidatorTest.java:136",
                        "method-b-site": "UrlValidator.java:333",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with false, but the return value of method-a was expected to be true and checked via an assertTrue().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-01-01",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 291,
        "inspection-start-time": "2022-02-02-01-01",
        "project": "commons-validator",
        "spec-id": "00629",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.isValidScheme(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 9,
        "code-snippets-file": "snippets/u/00629.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidatorTest.java:136",
                        "method-b-site": "UrlValidator.java:313",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - DSI replaced the return value of method-a with false, but the return value of method-a was expected to be true and checked via an assertTrue().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-01-03",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 292,
        "inspection-start-time": "2022-02-02-01-03",
        "project": "commons-validator",
        "spec-id": "00630",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValidAuthority(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.countToken(Ljava/lang/String;Ljava/lang/String;)I",
        "method-a-return-type": "boolean",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 8,
        "code-snippets-file": "snippets/u/00630.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:325",
                        "method-b-site": "UrlValidator.java:462",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "By replacing the return value of method-a with null, DSI infected the state by making the conditional on UrlValidator.java:325 to be true, which caused the caller of method-a return with false before calling method-b. Since the caller of method-a was checked via an assertTrue(), the test failed. REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202 with the block from UrlValidator.java:325-327 manually moved to after the block from UrlValidator.java:329-331 will call method-a after method-b is called.",
        "notes": "Neither method-a nor method-b modify any field variables, and don't seem to throw exceptions either. In general, method-b seems unrelated to method-a because it simply counts the number of times a String token appears in a String target, and method-a does not use method-b (method-a checks if the argument String is properly formatted). UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-01-17",
        "inspection-time-in-minutes": 14
    },
    {
        "iid": 293,
        "inspection-start-time": "2022-02-02-01-17",
        "project": "commons-validator",
        "spec-id": "00631",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValidAuthority(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.isValidFragment(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 8,
        "code-snippets-file": "snippets/u/00631.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:325",
                        "method-b-site": "UrlValidator.java:337",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: By replacing the return value of method-a with null, DSI infected the state by making the conditional on UrlValidator.java:325 to be true, which caused the caller of method-a return with false before calling method-b. Since the caller of method-a was checked via an assertTrue(), the test failed.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202 with the block from UrlValidator.java:325-327 manually moved to after the block from UrlValidator.java:329-331 will call method-a after method-b is called.",
        "notes": "Neither method-a nor method-b modify any field variables, and don't seem to throw exceptions either. In general, method-b seems unrelated to method-a because it simply counts the number of times a String token appears in a String target, and method-a does not use method-b (method-a checks if the argument String is properly formatted). UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-01-30",
        "inspection-time-in-minutes": 13
    },
    {
        "iid": 294,
        "inspection-start-time": "2022-02-02-12-00",
        "project": "commons-validator",
        "spec-id": "00632",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValidAuthority(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.isValidPath(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 8,
        "code-snippets-file": "snippets/u/00632.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:325",
                        "method-b-site": "UrlValidator.java:329",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: By replacing the return value of method-a with null, DSI infected the state by making the conditional on UrlValidator.java:325 to be true, which caused the caller of method-a return with false before calling method-b. Since the caller of method-a was checked via an assertTrue(), the test failed.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202 with the block from UrlValidator.java:325-327 manually moved to after the block from UrlValidator.java:329-331 will call method-a after method-b is called.",
        "notes": "Neither method-a nor method-b modify any field variables, and don't seem to throw exceptions either (they swallow any anticipated exceptions). In general, method-a and method-b are two different checks for different fields of the URI object - method-a checks whether its authority is property formatted, and method-b checks whether the raw path is property formatted. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-12-05",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 295,
        "inspection-start-time": "2022-02-02-12-05",
        "project": "commons-validator",
        "spec-id": "00633",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValidAuthority(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.isValidQuery(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 8,
        "code-snippets-file": "snippets/u/00633.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:325",
                        "method-b-site": "UrlValidator.java:333",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: By replacing the return value of method-a with null, DSI infected the state by making the conditional on UrlValidator.java:325 to be true, which caused the caller of method-a return with false before calling method-b. Since the caller of method-a was checked via an assertTrue(), the test failed.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202 with the block from UrlValidator.java:325-327 manually moved to after the block from UrlValidator.java:333-335 will call method-a after method-b is called.",
        "notes": "Neither method-a nor method-b modify any field variables, and don't seem to throw exceptions either (they swallow any anticipated exceptions). In general, method-a and method-b are two different checks for different fields of the URI object - method-a checks whether its authority is property formatted, and method-b checks whether the query is a properly formatted query string. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-12-07",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 296,
        "inspection-start-time": "2022-02-02-12-07",
        "project": "commons-validator",
        "spec-id": "00634",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValidPath(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.countToken(Ljava/lang/String;Ljava/lang/String;)I",
        "method-a-return-type": "boolean",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 8,
        "code-snippets-file": "snippets/u/00634.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:329",
                        "method-b-site": "UrlValidator.java:462",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "By replacing the return value of method-a with null, DSI infected the state by making the conditional on UrlValidator.java:329 to be true. Since the caller of method-a was checked via an assertTrue(), the test failed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-12-11",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 297,
        "inspection-start-time": "2022-02-02-12-11",
        "project": "commons-validator",
        "spec-id": "00635",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValidPath(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.isValidFragment(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 8,
        "code-snippets-file": "snippets/u/00635.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:329",
                        "method-b-site": "UrlValidator.java:337",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: By replacing the return value of method-a with null, DSI infected the state by making the conditional on UrlValidator.java:329 to be true, which caused the caller of method-a return with false before calling method-b. Since the caller of method-a was checked via an assertTrue(), the test failed.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202 with the block from UrlValidator.java:329-331 manually moved to after the block from UrlValidator.java:337-339 will call method-a after method-b is called.",
        "notes": "Neither method-a nor method-b modify any field variables, and don't seem to throw exceptions either (they swallow any anticipated exceptions). In general, method-a and method-b are two different checks for different fields of the URI object - method-a checks whether the raw path is property formatted, and method-b checks whether the argument fragment is null or whether fragments are allowed. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-12-14",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 298,
        "inspection-start-time": "2022-02-02-12-14",
        "project": "commons-validator",
        "spec-id": "00636",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValidPath(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.isValidQuery(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 8,
        "code-snippets-file": "snippets/u/00636.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:329",
                        "method-b-site": "UrlValidator.java:333",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: By replacing the return value of method-a with null, DSI infected the state by making the conditional on UrlValidator.java:329 to be true, which caused the caller of method-a return with false before calling method-b. Since the caller of method-a was checked via an assertTrue(), the test failed.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202 with the block from UrlValidator.java:329-331 manually moved to after the block from UrlValidator.java:333-335 will call method-a after method-b is called.",
        "notes": "Neither method-a nor method-b modify any field variables, and don't seem to throw exceptions either (they swallow any anticipated exceptions). In general, method-a and method-b are two different checks for different fields of the URI object - method-a checks whether the raw path is property formatted, and method-b checks whether the query is a properly formatted query string. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-12-18",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 299,
        "inspection-start-time": "2022-02-02-12-20",
        "project": "commons-validator",
        "spec-id": "00637",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValidQuery(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.isValidFragment(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 8,
        "code-snippets-file": "snippets/u/00637.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:333",
                        "method-b-site": "UrlValidator.java:337",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: By replacing the return value of method-a with null, DSI infected the state by making the conditional on UrlValidator.java:333 to be true, which caused the caller of method-a return with false before calling method-b. Since the caller of method-a was checked via an assertTrue(), the test failed.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202 with the block from UrlValidator.java:333-335 manually moved to after the block from UrlValidator.java:337-339 will call method-a after method-b is called.",
        "notes": "Neither method-a nor method-b modify any field variables, and don't seem to throw exceptions either (they swallow any anticipated exceptions). In general, method-a and method-b are two different checks for different fields of the URI object - method-a checks whether the query is a properly formatted query string, and method-b checks whether the argument fragment is null or whether fragments are allowed. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-12-24",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 300,
        "inspection-start-time": "2022-02-02-12-24",
        "project": "commons-validator",
        "spec-id": "00638",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValidScheme(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.countToken(Ljava/lang/String;Ljava/lang/String;)I",
        "method-a-return-type": "boolean",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 8,
        "code-snippets-file": "snippets/u/00638.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:313",
                        "method-b-site": "UrlValidator.java:462",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: By replacing the return value of method-a with null, DSI infected the state by making the conditional on UrlValidator.java:313 to be true, which caused the caller of method-a return with false. Since the caller of method-a was checked via an assertTrue(), the test failed.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202 with the block from UrlValidator.java:329-331 manually moved to before the block from UrlValidator.java:313-315 will call method-b before method-a is called.",
        "notes": "Neither method-a nor method-b modify any field variables, and don't seem to throw exceptions either. In general, method-b seems unrelated to method-a because it simply counts the number of times a String token appears in a String target, and method-a does not use method-b (method-a checks if the String scheme matches either the specified schemes[] list or the default schemes http/https/ftp). UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-12-31",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 301,
        "inspection-start-time": "2022-02-02-12-31",
        "project": "commons-validator",
        "spec-id": "00639",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValidScheme(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.isOff(J)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00639.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator391OK",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:313",
                        "method-b-site": "UrlValidator.java:362",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "By replacing the return value of method-a with null, DSI infected the state by making the conditional on UrlValidator.java:313 to be true, which caused the caller of method-a return with false. Since the caller of method-a was checked via an assertTrue(), the test failed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-12-38",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 302,
        "inspection-start-time": "2022-02-02-12-38",
        "project": "commons-validator",
        "spec-id": "00640",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValidScheme(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.isValidAuthority(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 8,
        "code-snippets-file": "snippets/u/00640.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:313",
                        "method-b-site": "UrlValidator.java:325",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: By replacing the return value of method-a with null, DSI infected the state by making the conditional on UrlValidator.java:313 to be true, which caused the caller of method-a return with false before calling method-b. Since the caller of method-a was checked via an assertTrue(), the test failed.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202 with the block from UrlValidator.java:313-315 manually moved to after the block from UrlValidator.java:325-327 will call method-a after method-b is called.",
        "notes": "Neither method-a nor method-b modify any field variables, and don't seem to throw exceptions either (they swallow any anticipated exceptions). In general, method-a and method-b are two different checks for different fields of the URI object - method-a checks if the String scheme matches either the specified schemes[] list or the default schemes http/https/ftp, and method-b checks whether its authority is property formatted. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-12-42",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 303,
        "inspection-start-time": "2022-02-02-12-42",
        "project": "commons-validator",
        "spec-id": "00641",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValidScheme(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.isValidFragment(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 8,
        "code-snippets-file": "snippets/u/00641.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:313",
                        "method-b-site": "UrlValidator.java:337",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: By replacing the return value of method-a with null, DSI infected the state by making the conditional on UrlValidator.java:313 to be true, which caused the caller of method-a return with false before calling method-b. Since the caller of method-a was checked via an assertTrue(), the test failed.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202 with the block from UrlValidator.java:313-315 manually moved to after the block from UrlValidator.java:337-339 will call method-a after method-b is called.",
        "notes": "Neither method-a nor method-b modify any field variables, and don't seem to throw exceptions either (they swallow any anticipated exceptions). In general, method-a and method-b are two different checks for different fields of the URI object - method-a checks if the String scheme matches either the specified schemes[] list or the default schemes http/https/ftp, and method-b checks whether the argument fragment is null or whether fragments are allowed. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-12-45",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 304,
        "inspection-start-time": "2022-02-02-12-45",
        "project": "commons-validator",
        "spec-id": "00642",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValidScheme(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.isValidPath(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 8,
        "code-snippets-file": "snippets/u/00642.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:313",
                        "method-b-site": "UrlValidator.java:329",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: By replacing the return value of method-a with null, DSI infected the state by making the conditional on UrlValidator.java:313 to be true, which caused the caller of method-a return with false before calling method-b. Since the caller of method-a was checked via an assertTrue(), the test failed.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202 with the block from UrlValidator.java:313-315 manually moved to after the block from UrlValidator.java:329-331 will call method-a after method-b is called.",
        "notes": "Neither method-a nor method-b modify any field variables, and don't seem to throw exceptions either (they swallow any anticipated exceptions). In general, method-a and method-b are two different checks for different fields of the URI object - method-a checks if the String scheme matches either the specified schemes[] list or the default schemes http/https/ftp, and method-b checks whether the raw path is property formatted. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-12-49",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 305,
        "inspection-start-time": "2022-02-02-12-49",
        "project": "commons-validator",
        "spec-id": "00643",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.isValidScheme(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.isValidQuery(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 8,
        "code-snippets-file": "snippets/u/00643.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:313",
                        "method-b-site": "UrlValidator.java:333",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B: By replacing the return value of method-a with null, DSI infected the state by making the conditional on UrlValidator.java:313 to be true, which caused the caller of method-a return with false before calling method-b. Since the caller of method-a was checked via an assertTrue(), the test failed.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202 with the block from UrlValidator.java:313-315 manually moved to after the block from UrlValidator.java:333-335 will call method-a after method-b is called.",
        "notes": "Neither method-a nor method-b modify any field variables, and don't seem to throw exceptions either (they swallow any anticipated exceptions). In general, method-a and method-b are two different checks for different fields of the URI object - method-a checks if the String scheme matches either the specified schemes[] list or the default schemes http/https/ftp, and method-b checks whether the query is a properly formatted query string. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-12-51",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 306,
        "inspection-start-time": "2022-02-02-13-44",
        "project": "commons-validator",
        "spec-id": "00648",
        "method-a": "org.apache.commons.validator.routines.checkdigit.CheckDigit.calculate(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.calculateModulus(Ljava/lang/String;Z)I",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 12,
        "code-snippets-file": "snippets/u/00648.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.checkdigit.ABANumberCheckDigitTest#testCalculateInvalid",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractCheckDigitTest.java:188",
                        "method-b-site": "ModulusCheckDigit.java:95",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - method-a was supposed to return a String value that was different from the String variable expected, but DSI replaced the return value with expected. This caused an assertion failure because the guard to the failure was on whether the two String values were equal (if they are equal, the test fails).",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "Note that this nbp is only established if the CheckDigit object is actually a ModulusCheckDigit object.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-13-50",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 307,
        "inspection-start-time": "2022-02-02-13-50",
        "project": "commons-validator",
        "spec-id": "00649",
        "method-a": "org.apache.commons.validator.routines.checkdigit.CheckDigit.calculate(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.toCheckDigit(I)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/u/00649.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.checkdigit.ABANumberCheckDigitTest#testCalculateInvalid",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractCheckDigitTest.java:188",
                        "method-b-site": "ModulusCheckDigit.java:97",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - method-a was supposed to return a String value that was different from the String variable expected, but DSI replaced the return value with expected. This caused an assertion failure because the guard to the failure was on whether the two String values were equal (if they are equal, the test fails).",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "Note that this nbp is only established if the CheckDigit object is actually a ModulusCheckDigit object.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-13-54",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 308,
        "inspection-start-time": "2022-02-02-13-54",
        "project": "commons-validator",
        "spec-id": "00650",
        "method-a": "org.apache.commons.validator.routines.checkdigit.CheckDigit.calculate(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.checkdigit.VerhoeffCheckDigit.calculateChecksum(Ljava/lang/String;Z)I",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00650.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.checkdigit.VerhoeffCheckDigitTest#testCalculateInvalid",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractCheckDigitTest.java:188",
                        "method-b-site": "VerhoeffCheckDigit.java:102",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - method-a was supposed to return a String value that was different from the String variable expected, but DSI replaced the return value with expected. This caused an assertion failure because the guard to the failure was on whether the two String values were equal (if they are equal, the test fails).",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "Note that this nbp is only established if the CheckDigit object is actually a VerhoeffCheckDigitTest object.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-13-56",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 309,
        "inspection-start-time": "2022-02-02-14-16",
        "project": "commons-validator",
        "spec-id": "00652",
        "method-a": "org.apache.commons.validator.routines.checkdigit.CheckDigit.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.calculateModulus(Ljava/lang/String;Z)I",
        "method-a-return-type": "boolean",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00652.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.ISSNValidatorTest#testInvalid",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "CodeValidator.java:275",
                        "method-b-site": "ModulusCheckDigit.java:75",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN + REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION - method-a in a normal test execution returns false, and DSI replaced the return value of method-a with the default value false.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-14-26",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 310,
        "inspection-start-time": "2022-02-02-14-26",
        "project": "commons-validator",
        "spec-id": "00653",
        "method-a": "org.apache.commons.validator.routines.checkdigit.CheckDigit.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.isValid(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/u/00653.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.checkdigit.ModulusTenABACheckDigitTest#testZeroSum",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractCheckDigitTest.java:241",
                        "method-b-site": "ModulusTenCheckDigit.java:183",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN + REPLACE_RETURN_WITH_EXPECTED_OUTPUT - method-a was expected to return false (checked by an assertFalse()), and DSI replaced the return value of method-a with the default value false.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-14-32",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 311,
        "inspection-start-time": "2022-02-02-14-43",
        "project": "commons-validator",
        "spec-id": "00655",
        "method-a": "org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.calculateModulus(Ljava/lang/String;Z)I",
        "method-b": "org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.toInt(CII)I",
        "method-a-return-type": "int",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 9,
        "code-snippets-file": "snippets/u/00655.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.checkdigit.ABANumberCheckDigitTest#testMissingCode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "ModulusCheckDigit.java:75",
                        "method-b-site": "ModulusCheckDigit.java:115",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "The return value of method-a is compared against the integer 0, and the caller of method-a returns the result of the comparison. The caller of method-a checkes this result with an assertFalse, which fails because DSI replaced the return value of method-a with the default value 0.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-14-54",
        "inspection-time-in-minutes": 11
    },
    {
        "iid": 312,
        "inspection-start-time": "2022-02-02-15-35",
        "project": "commons-validator",
        "spec-id": "00656",
        "method-a": "org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.calculateModulus(Ljava/lang/String;Z)I",
        "method-b": "org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.weightedValue(III)I",
        "method-a-return-type": "int",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 11,
        "code-snippets-file": "snippets/u/00656.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.checkdigit.ABANumberCheckDigitTest#testMissingCode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "ModulusCheckDigit.java:75",
                        "method-b-site": "ModulusCheckDigit.java:116",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "The return value of method-a is compared against the integer 0, and the caller of method-a returns the result of the comparison. The caller of method-a checkes this result with an assertFalse, which fails because DSI replaced the return value of method-a with the default value 0.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-15-37",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 313,
        "inspection-start-time": "2022-02-02-15-44",
        "project": "commons-validator",
        "spec-id": "00658",
        "method-a": "org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.calculateModulus(Ljava/lang/String;Z)I",
        "method-a-return-type": "boolean",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/u/00658.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.checkdigit.ModulusTenABACheckDigitTest#testMissingCode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ModulusTenCheckDigit.java:183",
                        "method-b-site": "ModulusCheckDigit.java:75",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN + REPLACE_RETURN_WITH_EXPECTED_OUTPUT - the return value of method-a is propagated as the return value of ModulusTenCheckDigit.isValid(), which is checked via the test to be false (via an assertFalse()). DSI replaced the return value of method-a with the default value false.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-15-54",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 314,
        "inspection-start-time": "2022-02-02-16-00",
        "project": "commons-validator",
        "spec-id": "00659",
        "method-a": "org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.toInt(CII)I",
        "method-a-return-type": "boolean",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00659.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.checkdigit.ModulusTenABACheckDigitTest#testMissingCode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ModulusTenCheckDigit.java:183",
                        "method-b-site": "ModulusCheckDigit.java:115",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN + REPLACE_RETURN_WITH_EXPECTED_OUTPUT - the return value of method-a is propagated as the return value of ModulusTenCheckDigit.isValid(), which is checked via the test to be false (via an assertFalse()). DSI replaced the return value of method-a with the default value false.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-16-02",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 315,
        "inspection-start-time": "2022-02-02-16-02",
        "project": "commons-validator",
        "spec-id": "00660",
        "method-a": "org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.weightedValue(III)I",
        "method-a-return-type": "boolean",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00660.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.checkdigit.ModulusTenABACheckDigitTest#testMissingCode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ModulusTenCheckDigit.java:183",
                        "method-b-site": "ModulusCheckDigit.java:116",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN + REPLACE_RETURN_WITH_EXPECTED_OUTPUT - the return value of method-a is propagated as the return value of ModulusTenCheckDigit.isValid(), which is checked via the test to be false (via an assertFalse()). DSI replaced the return value of method-a with the default value false.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-16-03",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 316,
        "inspection-start-time": "2022-02-02-16-16",
        "project": "commons-validator",
        "spec-id": "00662",
        "method-a": "org.apache.commons.validator.util.Flags.clear()V",
        "method-b": "org.apache.commons.validator.util.Flags.getFlags()J",
        "method-a-return-type": "void",
        "method-b-return-type": "long",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00662.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.util.FlagsTest#testClear",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "method-a returns void.",
                "notes": "ASM_ERROR"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet?",
        "notes": "The DSI experiment resulted in an ASM error, but manual experimentation revealed that calling method-b before method-a resulted in an assertion failure, because method-b is called to check the state changes that method-a made, but method-a was delayed. ONE_PURE_SETTER + ONE_STATELESS_METHOD: method-a sets the field variable Flags.flags to 0, and method-b is a 1-line naive getter to the field variable Flags.flags. This seems like a CONNECTION_DOES_NOT_NECESSITATE_ORDERING case.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-16-27",
        "inspection-time-in-minutes": 11
    },
    {
        "iid": 317,
        "inspection-start-time": "2022-02-02-16-27",
        "project": "commons-validator",
        "spec-id": "00663",
        "method-a": "org.apache.commons.validator.util.Flags.turnOffAll()V",
        "method-b": "org.apache.commons.validator.util.Flags.getFlags()J",
        "method-a-return-type": "void",
        "method-b-return-type": "long",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00663.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.util.FlagsTest#testTurnOffAll",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "method-a returns void.",
                "notes": "ASM_ERROR"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet?",
        "notes": "The DSI experiment resulted in an ASM error, but manual experimentation revealed that calling method-b before method-a resulted in an assertion failure, because method-b is called to check the state changes that method-a made, but method-a was delayed. ONE_PURE_SETTER + ONE_STATELESS_METHOD: method-a sets the field variable Flags.flags to 0, and method-b is a 1-line naive getter to the field variable Flags.flags. This seems like a CONNECTION_DOES_NOT_NECESSITATE_ORDERING case.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-16-30",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 318,
        "inspection-start-time": "2022-02-02-16-30",
        "project": "commons-validator",
        "spec-id": "00664",
        "method-a": "org.apache.commons.validator.util.Flags.turnOnAll()V",
        "method-b": "org.apache.commons.validator.util.Flags.getFlags()J",
        "method-a-return-type": "void",
        "method-b-return-type": "long",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00664.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.util.FlagsTest#testTurnOffAll",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "method-a returns void.",
                "notes": "ASM_ERROR"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet?",
        "notes": "The DSI experiment resulted in an ASM error, but manual experimentation revealed that calling method-b before method-a resulted in an assertion failure, because method-b is called to check the state changes that method-a made, but method-a was delayed. ONE_PURE_SETTER + ONE_STATELESS_METHOD: method-a sets the field variable Flags.flags to -1 (meaning that all flags are on), and method-b is a 1-line naive getter to the field variable Flags.flags. This seems like a CONNECTION_DOES_NOT_NECESSITATE_ORDERING case.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-16-33",
        "inspection-time-in-minutes": 3
    }

]
