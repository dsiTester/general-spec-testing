[
    {
        "iid": 1,
        "inspection-start-time": "2021-12-14-14-32",
        "project": "commons-fileupload",
        "spec-id": "00041",
        "method-a": "org.apache.commons.fileupload2.FileItem.getFieldName()Ljava/lang/String;",
        "method-b": "org.apache.commons.fileupload2.FileItem.getContentType()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "LS-verdict-count": 1,
        "U-verdict-count": 1,
        "E-verdict-count": 1,
        "code-snippets-file": "snippets/ls-u-e/00041.java",
        "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testTextFieldConstruction",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DefaultFileItemTest.java:76",
                        "method-b-site": "DefaultFileItemTest.java:77",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT. DSI replaces the return value of method-a with the last declared String value, which is the value that the return value of method-a was supposed to be equal to via an assertEquals().",
                "notes": ""
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testFileFieldConstruction",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DefaultFileItemTest.java:98",
                        "method-b-site": "DefaultFileItemTest.java:99",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaces the return value of method-a with the last declared String value, which is fileName = \"originalFileName\". The difference between this test and DefaultFileItemTest#testTextFieldConstruction() is that this replacement value was NOT equal to the value that method-a was being compared against, so the assertion failed and stage-0-failure occured here. The two methods are unrelated and do not change state.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.fileupload2.DefaultFileItemTest#testTextFieldConstruction",
        "notes": "UNRELATED_STATELESS_METHODS. Interesting case on return value replacement - check comment-on-return-values. The tests seem pretty weak, as they simply create an item by providing values, and then checks whether the item actually has those values after construction? The methods are unrelated and do not change state. Note that ORDER_OF_ASSERTIONS plays a role in this disagreement - if the order of assertions were changed, then the unknown test would most likely change to an invalidated test.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2021-12-14-14-49",
        "inspection-time-in-minutes": 17
    },
    {
        "iid": 2,
        "inspection-start-time": "2021-12-14-14-50",
        "project": "commons-fileupload",
        "spec-id": "00042",
        "method-a": "org.apache.commons.fileupload2.FileItem.getFieldName()Ljava/lang/String;",
        "method-b": "org.apache.commons.fileupload2.FileItem.getName()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "LS-verdict-count": 1,
        "U-verdict-count": 1,
        "E-verdict-count": 1,
        "code-snippets-file": "snippets/ls-u-e/00042.java",
        "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testTextFieldConstruction",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DefaultFileItemTest.java:76",
                        "method-b-site": "DefaultFileItemTest.java:79",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT. DSI replaces the return value of method-a with the last declared String value, which is the value that the return value of method-a was supposed to be equal to via an assertEquals().",
                "notes": ""
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testFileFieldConstruction",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DefaultFileItemTest.java:98",
                        "method-b-site": "DefaultFileItemTest.java:101",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaces the return value of method-a with the last declared String value, which is fileName = \"originalFileName\". The difference between this test and DefaultFileItemTest#testTextFieldConstruction() is that this replacement value was NOT equal to the value that method-a was being compared against, so the assertion failed and stage-0-failure occured here.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.fileupload2.DefaultFileItemTest#testTextFieldConstruction",
        "notes": "UNRELATED_STATELESS_METHODS. Interesting case on return value replacement - check comment-on-return-values. The tests seem pretty weak, as they simply create an item by providing values, and then checks whether the item actually has those values after construction? The methods are not related and do not change state. Note that ORDER_OF_ASSERTIONS plays a role in this disagreement - if the order of assertions were changed, then the unknown test would most likely change to an invalidated test.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2021-12-14-15-02",
        "inspection-time-in-minutes": 12
    },
    {
        "iid": 3,
        "inspection-start-time": "2021-12-14-15-03",
        "project": "commons-fileupload",
        "spec-id": "00043",
        "method-a": "org.apache.commons.fileupload2.FileItem.getFieldName()Ljava/lang/String;",
        "method-b": "org.apache.commons.fileupload2.FileItem.isFormField()Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "LS-verdict-count": 1,
        "U-verdict-count": 1,
        "E-verdict-count": 1,
        "code-snippets-file": "snippets/ls-u-e/00043.java",
        "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testTextFieldConstruction",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DefaultFileItemTest.java:76",
                        "method-b-site": "DefaultFileItemTest.java:78",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT. DSI replaces the return value of method-a with the last declared String value, which is the value that the return value of method-a was supposed to be equal to via an assertEquals().",
                "notes": ""
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testFileFieldConstruction",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DefaultFileItemTest.java:98",
                        "method-b-site": "DefaultFileItemTest.java:100",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaces the return value of method-a with the last declared String value, which is fileName = \"originalFileName\". The difference between this test and DefaultFileItemTest#testTextFieldConstruction() is that this replacement value was NOT equal to the value that method-a was being compared against, so the assertion failed and stage-0-failure occured here.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.fileupload2.DefaultFileItemTest#testTextFieldConstruction",
        "notes": "UNRELATED_STATELESS_METHODS. Interesting case on return value replacement - check comment-on-return-values. The tests seem pretty weak, as they simply create an item by providing values, and then checks whether the item actually has those values after construction? The methods are not related and do not change state. Note that ORDER_OF_ASSERTIONS plays a role in this disagreement - if the order of assertions were changed, then the unknown test would most likely change to an invalidated test.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2021-12-14-15-08",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 4,
        "inspection-start-time": "2021-12-14-15-48",
        "project": "commons-fileupload",
        "spec-id": "00046",
        "method-a": "org.apache.commons.fileupload2.FileItem.getOutputStream()Ljava/io/OutputStream;",
        "method-b": "org.apache.commons.fileupload2.FileItem.delete()V",
        "method-a-return-type": "java.io.OutputStream",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 7,
        "LS-verdict-count": 1,
        "U-verdict-count": 5,
        "E-verdict-count": 1,
        "code-snippets-file": "snippets/ls-u-e/00046.java",
        "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.StreamingTest#testFileUploadException",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FileUploadBase.java:347",
                        "method-b-site": "FileUploadBase.java:367",
                        "invocation-count": 699
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Replacing the return value of method-a with null seems to have no bearing on the outcome of the test. That being said, the test expects an exception, so that may be the reason why. The test also passes when you pass in a new ByteArrayOutputStream object instead.",
                "notes": "EXPECTED_EXCEPTION"
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DiskFileItemSerializeTest#testValidRepository",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "DiskFileItemSerializeTest.java:212",
                        "method-b-site": "DiskFileItemSerializeTest.java:86",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION",
                "notes": ""
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdSpecifiedRepository",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "unknown",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "",
        "notes": "Not really sure whether this is an a until b situation, but I tested it. TODO: Come back to this later...",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2021-12-14-16-30",
        "inspection-time-in-minutes": 42
    },
    {
        "iid": 5,
        "inspection-start-time": "2021-12-16-13-25",
        "project": "commons-fileupload",
        "spec-id": "00057",
        "method-a": "org.apache.commons.fileupload2.FileItem.getOutputStream()Ljava/io/OutputStream;",
        "method-b": "org.apache.commons.fileupload2.disk.DiskFileItem.getStoreLocation()Ljava/io/File;",
        "method-a-return-type": "java.io.OutputStream",
        "method-b-return-type": "java.io.File",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 8,
        "LS-verdict-count": 1,
        "U-verdict-count": 7,
        "E-verdict-count": 1,
        "code-snippets-file": "snippets/ls-u-e/00057.java",
        "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.StreamingTest#testFileUploadException",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FileUploadBase.java:347",
                        "method-b-site": "DiskFileItem.java:433",
                        "invocation-count": 699
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DSI most likely replaced the return value of method-a with null. (Manually replaced the value with null, and the test passed.)",
                "notes": "EXPECTED_EXCEPTION"
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DiskFileItemSerializeTest#testAboveThreshold",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "DiskFileItemSerializeTest.java:212",
                        "method-b-site": "DiskFileItem.java:433",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. DSI most likely replaced the return value of method-a with null, making the next instruction result in a NullPointerException. (Manually replaced the value with null, and the test failed in the same location.)",
                "notes": ""
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdSpecifiedRepository",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "unknown",
        "is-oracle-weak": true,
        "spec-type": "precondition",
        "validating-test-file": "",
        "notes": "method-b is designed in such a way that you **technically** don't need to call method-a in order to invoke method-b, but the return value of method-b would differ based on whether you did call method-a before calling method-b. So I'm somewhat reluctant to call this a spurious-spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2021-12-16-14-01",
        "inspection-time-in-minutes": 36
    },
    {
        "iid": 6,
        "inspection-start-time": "2021-12-16-20-57",
        "project": "commons-fileupload",
        "spec-id": "00076",
        "method-a": "org.apache.commons.fileupload2.FileItem.isFormField()Z",
        "method-b": "org.apache.commons.fileupload2.FileItem.getName()Ljava/lang/String;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "LS-verdict-count": 1,
        "U-verdict-count": 1,
        "E-verdict-count": 1,
        "code-snippets-file": "snippets/ls-u-e/00076.java",
        "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testFileFieldConstruction",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DefaultFileItemTest.java:100",
                        "method-b-site": "DefaultFileItemTest.java:101",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT. DSI couldn't find a declared value that would be a substitute for the return value of method-a, so it used the default value false. Here, it just so happened that the return value of method-a was an argument to assertFalse() - so the test passed with no problem.",
                "notes": ""
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testTextFieldConstruction",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DefaultFileItemTest.java:78",
                        "method-b-site": "DefaultFileItemTest.java:79",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI couldn't find a declared value that would be a substitute for the return value of method-a, so it used the default value false. However, since the return value of method-a was an argument to assertTrue(), the test failed right after method-a was delayed.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.fileupload2.DefaultFileItemTest#testFileFieldConstruction",
        "notes": "The oracle is clearly weak (simply assertTrue() or assertFalse()), but upon inspection of the implementation of the methods, it is clear that method-a and method-b have no relationship. ONE_STATELESS_METHOD: the implementation of method-a is a 1-line naive getter to the field variable DiskFileItem.isFormField. Note that ORDER_OF_ASSERTIONS plays a role in this disagreement - if the order of assertions were changed, then the unknown test would most likely change to an invalidated test.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2021-12-16-21-07",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 7,
        "inspection-start-time": "2021-12-17-02-46",
        "project": "commons-fileupload",
        "spec-id": "00078",
        "method-a": "org.apache.commons.fileupload2.FileItem.isInMemory()Z",
        "method-b": "org.apache.commons.fileupload2.FileItem.delete()V",
        "method-a-return-type": "boolean",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 6,
        "LS-verdict-count": 2,
        "U-verdict-count": 4,
        "E-verdict-count": 1,
        "code-snippets-file": "snippets/ls-u-e/00078.java",
        "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DefaultFileItemTest.java:188",
                        "method-b-site": "DefaultFileItemTest.java:204",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT. DSI couldn't find a declared value that would be a substitute for the return value of method-a, so it used the default value false. Here, it just so happened that the return value of method-a was an argument to assertFalse() - so the test passed with no problem. Same case for the other invalidated case.",
                "notes": "ORDER_OF_ASSERTIONS, we just got lucky here because of the replacement value"
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DiskFileItemSerializeTest#testBelowThreshold",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DiskFileItemSerializeTest.java:83",
                        "method-b-site": "DiskFileItemSerializeTest.java:86",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI couldn't find a declared value that would be a substitute for the return value of method-a, so it used the default value false. However, since the return value of method-a was an argument to assertTrue(), the test failed right after method-a was delayed. Same case in the other unknown cases.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "unknown",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
        "notes": "Manually called method-a after method-b, and the result before and after were the same. That being said, the outcome of method-b (or its implementation, to be precise) is dependent on the outcome of method-a (or its implementation, to be precise), looking at the third line of the implementation of method-b. Note that this is a ORDER_OF_ASSERTIONS situation, but checking the assertions after method-b will most likely make them fail due to the state changes that method-b makes.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2021-12-17-03-03",
        "inspection-time-in-minutes": 17
    },
    {
        "iid": 8,
        "inspection-start-time": "2021-12-17-03-04",
        "project": "commons-fileupload",
        "spec-id": "00079",
        "method-a": "org.apache.commons.fileupload2.FileItem.isInMemory()Z",
        "method-b": "org.apache.commons.fileupload2.FileItem.get()[B",
        "method-a-return-type": "boolean",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 7,
        "LS-verdict-count": 2,
        "U-verdict-count": 5,
        "E-verdict-count": 2,
        "code-snippets-file": "snippets/ls-u-e/00079.java",
        "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DefaultFileItemTest.java:188",
                        "method-b-site": "DefaultFileItemTest.java:190",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT. DSI couldn't find a declared value that would be a substitute for the return value of method-a, so it used the default value false. Here, it just so happened that the return value of method-a was an argument to assertFalse() - so the test passed with no problem. Same case for the other invalidated case.",
                "notes": "ORDER_OF_ASSERTIONS, we got lucky with the return value."
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testBelowThreshold",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DiskFileItemSerializeTest.java:83",
                        "method-b-site": "DiskFileItemSerializeTest.java:85",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI couldn't find a declared value that would be a substitute for the return value of method-a, so it used the default value false. However, since the return value of method-a was an argument to assertTrue(), the test failed right after method-a was delayed. Same case in the other unknown cases.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
        "notes": "Two getters that don't impact the state, so this spec is spurious.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2021-12-17-03-16",
        "inspection-time-in-minutes": 12
    },
    {
        "iid": 9,
        "inspection-start-time": "2021-12-17-03-27",
        "project": "commons-fileupload",
        "spec-id": "00081",
        "method-a": "org.apache.commons.fileupload2.FileItem.isInMemory()Z",
        "method-b": "org.apache.commons.fileupload2.FileItem.getString()Ljava/lang/String;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "LS-verdict-count": 1,
        "U-verdict-count": 1,
        "E-verdict-count": 2,
        "code-snippets-file": "snippets/ls-u-e/00081.java",
        "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DefaultFileItemTest.java:188",
                        "method-b-site": "DefaultFileItemTest.java:191",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT. DSI couldn't find a declared value that would be a substitute for the return value of method-a, so it used the default value false. Here, it just so happened that the return value of method-a was an argument to assertFalse() - so the test passed with no problem.",
                "notes": ""
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testBelowThreshold",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DefaultFileItemTest.java:130",
                        "method-b-site": "DefaultFileItemTest.java:133",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI couldn't find a declared value that would be a substitute for the return value of method-a, so it used the default value false. However, since the return value of method-a was an argument to assertTrue(), the test failed right after method-a was delayed. Same case in the other unknown cases.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
        "notes": "method-a doesn't change state, and method-b itself doesn't call method-a. However, one of the methods that method-b calls (DiskFileUpload.get()) **calls** method-a's implementation. So, it means that there will be a call to (the implementation of) method-a after method-b, meaning that method-a --> method-b isn't a spec in itself.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2021-12-17-03-40",
        "inspection-time-in-minutes": 13
    },
    {
        "iid": 10,
        "inspection-start-time": "2021-12-17-03-41",
        "project": "commons-fileupload",
        "spec-id": "00082",
        "method-a": "org.apache.commons.fileupload2.FileItem.isInMemory()Z",
        "method-b": "org.apache.commons.fileupload2.disk.DiskFileItem.get()[B",
        "method-a-return-type": "boolean",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "LS-verdict-count": 1,
        "U-verdict-count": 1,
        "E-verdict-count": 2,
        "code-snippets-file": "snippets/ls-u-e/00082.java",
        "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DefaultFileItemTest.java:188",
                        "method-b-site": "DiskFileItem.java:352",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT. DSI couldn't find a declared value that would be a substitute for the return value of method-a, so it used the default value false. Here, it just so happened that the return value of method-a was an argument to assertFalse() - so the test passed with no problem.",
                "notes": ""
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testBelowThreshold",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DefaultFileItemTest.java:130",
                        "method-b-site": "DiskFileItem.java:352",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI couldn't find a declared value that would be a substitute for the return value of method-a, so it used the default value false. However, since the return value of method-a was an argument to assertTrue(), the test failed right after method-a was delayed. Same case in the other unknown cases.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
        "notes": "DYNAMIC_DISPATCH. method-a doesn't change state, but method-b itself calls (the implementation of) method-a, so I don't think there is a method-a --> method-b relationship here.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2021-12-17-03-47",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 11,
        "inspection-start-time": "2021-12-17-03-48",
        "project": "commons-fileupload",
        "spec-id": "00083",
        "method-a": "org.apache.commons.fileupload2.FileItem.isInMemory()Z",
        "method-b": "org.apache.commons.fileupload2.disk.DiskFileItem.getCharSet()Ljava/lang/String;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "LS-verdict-count": 1,
        "U-verdict-count": 1,
        "E-verdict-count": 2,
        "code-snippets-file": "snippets/ls-u-e/00083.java",
        "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DefaultFileItemTest.java:188",
                        "method-b-site": "DiskFileItem.java:353",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT. DSI couldn't find a declared value that would be a substitute for the return value of method-a, so it used the default value false. Here, it just so happened that the return value of method-a was an argument to assertFalse() - so the test passed with no problem.",
                "notes": "ORDER_OF_ASSERTIONS (lucky w return value)"
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testBelowThreshold",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DefaultFileItemTest.java:130",
                        "method-b-site": "DiskFileItem.java:353",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI couldn't find a declared value that would be a substitute for the return value of method-a, so it used the default value false. However, since the return value of method-a was an argument to assertTrue(), the test failed right after method-a was delayed. Same case in the other unknown cases.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
        "notes": "DYNAMIC_DISPATCH. method-a does not change state, and method-b and none of the methods that it calls calls method-a. So, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2021-12-17-03-54",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 12,
        "inspection-start-time": "2021-12-17-19-52",
        "project": "commons-fileupload",
        "spec-id": "00084",
        "method-a": "org.apache.commons.fileupload2.FileItem.isInMemory()Z",
        "method-b": "org.apache.commons.fileupload2.disk.DiskFileItem.getContentType()Ljava/lang/String;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "LS-verdict-count": 1,
        "U-verdict-count": 1,
        "E-verdict-count": 2,
        "code-snippets-file": "snippets/ls-u-e/00084.java",
        "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DefaultFileItemTest.java:188",
                        "method-b-site": "DiskFileItem.java:238",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT. DSI couldn't find a declared value that would be a substitute for the return value of method-a, so it used the default value false. Here, it just so happened that the return value of method-a was an argument to assertFalse() - so the test passed with no problem.",
                "notes": "ORDER_OF_ASSERTIONS, we got lucky with the return value"
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testBelowThreshold",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DefaultFileItemTest.java:130",
                        "method-b-site": "DiskFileItem.java:238",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI couldn't find a declared value that would be a substitute for the return value of method-a, so it used the default value false. However, since the return value of method-a was an argument to assertTrue(), the test failed right after method-a was delayed.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
        "notes": "DYNAMIC_DISPATCH. Similar case as 00083, but the method-b is called from the method-b of 00083. ONE_STATELESS_METHOD: method-b is a 1-line naive getter to the field variable DiskFileItem.contentType.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2021-12-17-20-05",
        "inspection-time-in-minutes": 13
    },
    {
        "iid": 13,
        "inspection-start-time": "2021-12-18-12-34",
        "project": "commons-fileupload",
        "spec-id": "00086",
        "method-a": "org.apache.commons.fileupload2.FileItem.isInMemory()Z",
        "method-b": "org.apache.commons.fileupload2.disk.DiskFileItem.getStoreLocation()Ljava/io/File;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.io.File",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 6,
        "LS-verdict-count": 2,
        "U-verdict-count": 4,
        "E-verdict-count": 1,
        "code-snippets-file": "snippets/ls-u-e/00086.java",
        "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DefaultFileItemTest.java:188",
                        "method-b-site": "DiskFileItem.java:433",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT. DSI couldn't find a declared value that would be a substitute for the return value of method-a, so it used the default value false. Here, it just so happened that the return value of method-a was an argument to assertFalse() - so the test passed with no problem. Same case for the other invalidated case.",
                "notes": "ORDER_OF_ASSERTIONS (lucky with return)"
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DiskFileItemSerializeTest#testBelowThreshold",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DiskFileItemSerializeTest.java:83",
                        "method-b-site": "DiskFileItem.java:433",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI couldn't find a declared value that would be a substitute for the return value of method-a, so it used the default value false. However, since the return value of method-a was an argument to assertTrue(), the test failed right after method-a was delayed.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
        "notes": "Neither method-a nor method-b change state, and there's no precondition/postcondition relationship in the a --> b direction. It seems that method-b calls the implementation of method-a, so there is most likely a no-break-pass relationship between the two methods. Additionally, there may be a spec between method-a and FileItem.delete() (the method that calls method-b). INSPECTION_TODO to revist this.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2021-12-18-12-55",
        "inspection-time-in-minutes": 21
    },
    {
        "iid": 14,
        "inspection-start-time": "2022-01-06-16-00",
        "project": "commons-fileupload",
        "spec-id": "00268",
        "method-a": "org.apache.commons.fileupload2.disk.DiskFileItem.getTempFile()Ljava/io/File;",
        "method-b": "org.apache.commons.fileupload2.FileItem.delete()V",
        "method-a-return-type": "java.io.File",
        "method-b-return-type": "void",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 7,
        "LS-verdict-count": 4,
        "U-verdict-count": 2,
        "E-verdict-count": 1,
        "code-snippets-file": "snippets/ls-u-e/00268.java",
        "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DiskFileItemSerializeTest#testBelowThreshold",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DiskFileItem.java:509",
                        "method-b-site": "DiskFileItemSerializeTest.java:86",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: Most likely replaced method-a with null, but somehow manually replacing the return value of method-a with null doesn't cause a NullPointerException. It's difficult to fully track this because the location where the NullPointerException is supposed to be thrown is in third party methods.",
                "notes": ""
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "DiskFileItem.java:509",
                        "method-b-site": "DefaultFileItemTest.java:204",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at DefaultFileItemTest.java:183.",
                "notes": ""
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.fileupload2.DiskFileItemSerializeTest#testBelowThreshold",
        "notes": "DYNAMIC_DISPATCH. One cannot manually call method-a after method-b because method-a is a protected method and method-b is called from the test. However, DSI's calling of method-a after method-b showed that the spec was spurious. The unknown cases came out as such because DSI couldn't find a replacement value for method-a. method-a accesses and potentially modifies the field variables DiskFileItem.tempFile, DiskFileItem.tempDir, and returns the field variable DiskFileItem.tempFile. The return value of method-a is used by the caller to construct a DeferredFileOutputStream object to set the field variable DiskFileItem.dfos to. The used implementation of method-b sets the field variable DiskFileItem.cachedContent and deletes the file associated with the field variable DiskFileItem.dfos. This is a case of CONNECTION_DOES_NOT_NECESSITATE_ORDERING, since both methods can potentially be called at any point.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-06-16-27",
        "inspection-time-in-minutes": 27
    },
    {
        "iid": 15,
        "inspection-start-time": "2022-01-06-16-27",
        "project": "commons-fileupload",
        "spec-id": "00269",
        "method-a": "org.apache.commons.fileupload2.disk.DiskFileItem.getTempFile()Ljava/io/File;",
        "method-b": "org.apache.commons.fileupload2.FileItem.get()[B",
        "method-a-return-type": "java.io.File",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 10,
        "LS-verdict-count": 7,
        "U-verdict-count": 2,
        "E-verdict-count": 2,
        "code-snippets-file": "snippets/ls-u-e/00269.java",
        "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DiskFileItemSerializeTest#testBelowThreshold",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DiskFileItem.java:509",
                        "method-b-site": "DiskFileItemSerializeTest.java:85",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: Most likely replaced method-a with null, but somehow manually replacing the return value of method-a with null doesn't cause a NullPointerException. It's difficult to fully track this because the location where the NullPointerException is supposed to be thrown is in third party methods.",
                "notes": ""
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "DiskFileItem.java:509",
                        "method-b-site": "DefaultFileItemTest.java:190",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at DefaultFileItemTest.java:183.",
                "notes": ""
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.fileupload2.DiskFileItemSerializeTest#testBelowThreshold",
        "notes": "Can't manually call method-a after method-b because method-a is a protected method and method-b is called from the test. method-a accesses and potentially modifies the field variables DiskFileItem.tempFile, DiskFileItem.tempDir, and returns the field variable DiskFileItem.tempFile. The return value of method-a is used by the caller to construct a DeferredFileOutputStream object to set the field variable DiskFileItem.dfos to. method-b accesses the field variables DiskFileItem.dfos, DiskFileItem.cachedContent, DiskFileItem.size, and returns either the field variable DiskFileItem.cachedContent or the contents of the File object associated with DiskFileItem.dfos. This seems like a UNRELATED_STATELESS_METHODS case because a potential connection only comes from the fact that the caller of method-a sets the return value of method-a to the field vairable DiskFileItem.dfos. TRUE_SPEC_WITH_CALLER: There's a true-spec relationship between the caller of method-a and method-b, but there's no relationship between method-a itself and method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-06-16-37",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 16,
        "inspection-start-time": "2021-01-06-23-53",
        "project": "commons-fileupload",
        "spec-id": "00272",
        "method-a": "org.apache.commons.fileupload2.disk.DiskFileItem.getTempFile()Ljava/io/File;",
        "method-b": "org.apache.commons.fileupload2.FileItem.getString()Ljava/lang/String;",
        "method-a-return-type": "java.io.File",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "LS-verdict-count": 1,
        "U-verdict-count": 1,
        "E-verdict-count": 2,
        "code-snippets-file": "snippets/ls-u-e/00272.java",
        "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testBelowThreshold",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DiskFileItem.java:509",
                        "method-b-site": "DefaultFileItemTest.java:133",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: Most likely replaced method-a with null, but somehow manually replacing the return value of method-a with null doesn't cause a NullPointerException. It's difficult to fully track this because the location where the NullPointerException is supposed to be thrown is in third party methods.",
                "notes": ""
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "DiskFileItem.java:509",
                        "method-b-site": "DefaultFileItemTest.java:191",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at DefaultFileItemTest.java:142",
                "notes": ""
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.fileupload2.DiskFileItemSerializeTest#testBelowThreshold",
        "notes": "Can't manually call method-a after method-b because method-a is a protected method and method-b is called from the test. method-a accesses and potentially modifies the field variables DiskFileItem.tempFile, DiskFileItem.tempDir, and returns the field variable DiskFileItem.tempFile. The return value of method-a is used by the caller to construct a DeferredFileOutputStream object to set the field variable DiskFileItem.dfos to. method-b accesses the field variables DiskFileItem.dfos, DiskFileItem.cachedContent, DiskFileItem.size, and returns a new String object using either the field variable DiskFileItem.cachedContent or the contents of the File object associated with DiskFileItem.dfos. CONNECTION_DOES_NOT_NECESSITATE_ORDERING because method-a and method-b do not completely rely on each other can technically be called at any point (although method-a is protected). This seems like a UNRELATED_STATELESS_METHODS case because a potential connection only comes from the fact that the caller of method-a sets the return value of method-a to the field vairable DiskFileItem.dfos. TRUE_SPEC_WITH_CALLER: There's a true-spec relationship between the caller of method-a and method-b, but there's no relationship between method-a itself and method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-07-00-25",
        "inspection-time-in-minutes": 32
    },
    {
        "iid": 17,
        "inspection-start-time": "2022-01-07-00-31",
        "project": "commons-fileupload",
        "spec-id": "00273",
        "method-a": "org.apache.commons.fileupload2.disk.DiskFileItem.getTempFile()Ljava/io/File;",
        "method-b": "org.apache.commons.fileupload2.FileItem.isInMemory()Z",
        "method-a-return-type": "java.io.File",
        "method-b-return-type": "boolean",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 7,
        "LS-verdict-count": 4,
        "U-verdict-count": 2,
        "E-verdict-count": 2,
        "code-snippets-file": "snippets/ls-u-e/00273.java",
        "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testBelowThreshold",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DiskFileItem.java:509",
                        "method-b-site": "DefaultFileItemTest.java:130",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: Most likely replaced method-a with null, but somehow manually replacing the return value of method-a with null doesn't cause a NullPointerException. It's difficult to fully track this because the location where the NullPointerException is supposed to be thrown is in third party methods.",
                "notes": ""
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "DiskFileItem.java:509",
                        "method-b-site": "DefaultFileItemTest.java:191",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at DefaultFileItemTest.java:142",
                "notes": ""
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.fileupload2.DefaultFileItemTest#testBelowThreshold",
        "notes": "Can't manually call method-a after method-b because method-a is a protected method and method-b is called from the test. method-a accesses and potentially modifies the field variables DiskFileItem.tempFile, DiskFileItem.tempDir, and returns the field variable DiskFileItem.tempFile. The return value of method-a is used by the caller to construct a DeferredFileOutputStream object to set the field variable DiskFileItem.dfos to. The only implementation of method-b accesses the field DiskFileItem.cachedContent and DiskFileItem.dfos. TRUE_SPEC_WITH_CALLER: There's a true-spec relationship between the caller of method-a and method-b, but there's no relationship between method-a itself and method-b - UNRELATED_STATEFUL_METHODS. INSPECTION_TODO: would it be possible to call method-a after method-b in a subclass?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-07-00-44",
        "inspection-time-in-minutes": 13
    },
    {
        "iid": 18,
        "inspection-start-time": "2022-01-07-10-46",
        "project": "commons-fileupload",
        "spec-id": "00275",
        "method-a": "org.apache.commons.fileupload2.disk.DiskFileItem.getTempFile()Ljava/io/File;",
        "method-b": "org.apache.commons.fileupload2.disk.DiskFileItem.get()[B",
        "method-a-return-type": "java.io.File",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "LS-verdict-count": 1,
        "U-verdict-count": 1,
        "E-verdict-count": 2,
        "code-snippets-file": "snippets/ls-u-e/00275.java",
        "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testBelowThreshold",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DiskFileItem.java:509",
                        "method-b-site": "DiskFileItem.java:352",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: Most likely replaced method-a with null, but somehow manually replacing the return value of method-a with null doesn't cause a NullPointerException. It's difficult to fully track this because the location where the NullPointerException is supposed to be thrown is in third party methods.",
                "notes": ""
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "DiskFileItem.java:509",
                        "method-b-site": "DiskFileItem.java:352",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at DefaultFileItemTest.java:183",
                "notes": ""
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.fileupload2.DefaultFileItemTest#testBelowThreshold",
        "notes": "method-a accesses and potentially modifies the field variables DiskFileItem.tempFile, DiskFileItem.tempDir, and returns the field variable DiskFileItem.tempFile. The return value of method-a is used by the caller to construct a DeferredFileOutputStream object to set the field variable DiskFileItem.dfos to. method-b accesses the field variables DiskFileItem.cachedContent, DiskFileItem.size, DiskFileItem.dfos, modifies the field variable DiskFileItem.cachedContent, and returns either DiskFileItem.cachedContent or the contents of the File object within DiskFileItem.dfos. TRUE_SPEC_WITH_CALLER: There is a precondition relationship between the caller of method-a (getOutputStream()) and method-b, but method-a itself is unrelated to method-b - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-07-11-06",
        "inspection-time-in-minutes": 20
    },
    {
        "iid": 19,
        "inspection-start-time": "2022-01-07-11-06",
        "project": "commons-fileupload",
        "spec-id": "00276",
        "method-a": "org.apache.commons.fileupload2.disk.DiskFileItem.getTempFile()Ljava/io/File;",
        "method-b": "org.apache.commons.fileupload2.disk.DiskFileItem.getCharSet()Ljava/lang/String;",
        "method-a-return-type": "java.io.File",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "LS-verdict-count": 1,
        "U-verdict-count": 1,
        "E-verdict-count": 2,
        "code-snippets-file": "snippets/ls-u-e/00276.java",
        "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testBelowThreshold",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DiskFileItem.java:509",
                        "method-b-site": "DiskFileItem.java:353",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: Most likely replaced method-a with null, but somehow manually replacing the return value of method-a with null doesn't cause a NullPointerException. It's difficult to fully track this because the location where the NullPointerException is supposed to be thrown is in third party methods.",
                "notes": ""
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "DiskFileItem.java:509",
                        "method-b-site": "DiskFileItem.java:353",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at DefaultFileItemTest.java:183",
                "notes": ""
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.fileupload2.DefaultFileItemTest#testBelowThreshold",
        "notes": "method-a accesses and potentially modifies the field variables DiskFileItem.tempFile, DiskFileItem.tempDir, and returns the field variable DiskFileItem.tempFile. The return value of method-a is used by the caller to construct a DeferredFileOutputStream object to set the field variable DiskFileItem.dfos to. method-b parses the field variable DiskFileItem.contentType using a new ParameterParser object, and returns the \"charset\" field of the result. TRUE_SPEC_WITH_CALLER: There is a precondition relationship between the caller of method-a (getOutputStream()) and method-b, but method-a itself is unrelated to method-b - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-07-11-12",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 20,
        "inspection-start-time": "2022-01-07-11-22",
        "project": "commons-fileupload",
        "spec-id": "00277",
        "method-a": "org.apache.commons.fileupload2.disk.DiskFileItem.getTempFile()Ljava/io/File;",
        "method-b": "org.apache.commons.fileupload2.disk.DiskFileItem.getContentType()Ljava/lang/String;",
        "method-a-return-type": "java.io.File",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "LS-verdict-count": 1,
        "U-verdict-count": 1,
        "E-verdict-count": 2,
        "code-snippets-file": "snippets/ls-u-e/00277.java",
                "invalidated-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testBelowThreshold",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DiskFileItem.java:509",
                        "method-b-site": "DiskFileItem.java:238",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: Most likely replaced method-a with null, but somehow manually replacing the return value of method-a with null doesn't cause a NullPointerException. It's difficult to fully track this because the location where the NullPointerException is supposed to be thrown is in third party methods.",
                "notes": ""
            }
        ],
        "unknown-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest#testAboveThresholdDefaultRepository",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "DiskFileItem.java:509",
                        "method-b-site": "DiskFileItem.java:238",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at DefaultFileItemTest.java:183",
                "notes": ""
            }
        ],
        "error-inspected-cases": [
            {
                "test": "org.apache.commons.fileupload2.DefaultFileItemTest",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "STATE_POLLUTION_BY_DSI on testAboveThresholdSpecifiedRepository (Refer to 00002)"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.fileupload2.DefaultFileItemTest#testBelowThreshold",
        "notes": "method-a accesses and potentially modifies the field variables DiskFileItem.tempFile, DiskFileItem.tempDir, and returns the field variable DiskFileItem.tempFile. The return value of method-a is used by the caller to construct a DeferredFileOutputStream object to set the field variable DiskFileItem.dfos to. ONE_STATELESS_METHOD: method-b is a 1-line getter to the field variable DiskFileItem.contentType, which is not related to the field variables accessed/modified/affected by method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-07-11-29",
        "inspection-time-in-minutes": 7
    }
]
