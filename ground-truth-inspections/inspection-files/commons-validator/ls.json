[
    {
        "iid": 1,
        "inspection-start-time": "2022-01-21-23-03",
        "project": "commons-validator",
        "spec-id": "00023",
        "method-a": "org.apache.commons.validator.Field.getDepends()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.Field.getProperty()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 11,
        "test-methods-mine-count": 74,
        "code-snippets-file": "snippets/ls/00023.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ByteTest#testByte",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:884",
                        "method-b-site": "GenericValidatorImpl.java:82",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: It seems that method-a was replaced with a non-null value, as the return value of method-a is only used in the caller to check whether it's null or not. If DSI allows function parameters to count as arguments, the replacement value could be String fieldname from Form.validate().",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable Field.depends, and method-b is a 1-line naive getter to the field variable Field.property.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-21-23-14",
        "inspection-time-in-minutes": 11
    },
    {
        "iid": 2,
        "inspection-start-time": "2022-01-21-23-14",
        "project": "commons-validator",
        "spec-id": "00024",
        "method-a": "org.apache.commons.validator.Field.getDepends()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.Field.runDependentValidators(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 12,
        "test-methods-mine-count": 73,
        "code-snippets-file": "snippets/ls/00024.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ByteTest#testByte",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:884",
                        "method-b-site": "Field.java:822",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: It seems that method-a was replaced with a non-null value, as the return value of method-a is only used in the caller to check whether it's null or not. If DSI allows function parameters to count as arguments, the replacement value could be String fieldname from Form.validate().",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "method-a is a 1-line stateless getter that retrieves Field.depends (ONE_STATELESS_METHOD). While method-b is a stateful method that uses Field.dependencyList, a list representation of the same data that Field.depends contains, there is no direct relationship/use between method-a and method-b. So, I think this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-21-23-21",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 3,
        "inspection-start-time": "2022-01-22-12-55",
        "project": "commons-validator",
        "spec-id": "00027",
        "method-a": "org.apache.commons.validator.Field.getKey()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.Field.getVarMap()Ljava/util/Map;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/ls/00027.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:101",
                        "method-b-site": "Field.java:595",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced the return value of method-a with null, but the test didn't check for the values impacted by method-a.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.EntityImportTest#testEntityImport",
        "notes": "While method-a is stateful (method-a modifies the value of Field.key), and method-b is a 1-line getter for Field.hVars (ONE_STATELESS_METHOD), and these field values do not impact each other. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-22-13-08",
        "inspection-time-in-minutes": 13
    },
    {
        "iid": 4,
        "inspection-start-time": "2022-01-22-14-39",
        "project": "commons-validator",
        "spec-id": "00029",
        "method-a": "org.apache.commons.validator.Field.getPage()I",
        "method-b": "org.apache.commons.validator.Field.getDepends()Ljava/lang/String;",
        "method-a-return-type": "int",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 17,
        "test-methods-mine-count": 90,
        "code-snippets-file": "snippets/ls/00029.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ByteTest#testByte",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:291",
                        "method-b-site": "Field.java:884",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION. On execution, method-a returns the int value 0. The DSI default replacement value is 0.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ByteTest#testByte",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable Field.page, and method-b is a 1-line naive getter to the field variable Field.depends.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-22-14-50",
        "inspection-time-in-minutes": 11
    },
    {
        "iid": 5,
        "inspection-start-time": "2022-01-22-14-50",
        "project": "commons-validator",
        "spec-id": "00030",
        "method-a": "org.apache.commons.validator.Field.getPage()I",
        "method-b": "org.apache.commons.validator.Field.getProperty()Ljava/lang/String;",
        "method-a-return-type": "int",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 11,
        "test-methods-mine-count": 74,
        "code-snippets-file": "snippets/ls/00030.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ByteTest#testByte",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:291",
                        "method-b-site": "GenericValidatorImpl.java:82",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION. On execution, method-a returns the int value 0. The DSI default replacement value is 0.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ByteTest#testByte",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable Field.page, and method-b is a 1-line naive getter to the field variable Field.property.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-22-14-54",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 6,
        "inspection-start-time": "2022-01-22-14-55",
        "project": "commons-validator",
        "spec-id": "00031",
        "method-a": "org.apache.commons.validator.Field.getPage()I",
        "method-b": "org.apache.commons.validator.Field.runDependentValidators(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-a-return-type": "int",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 12,
        "test-methods-mine-count": 73,
        "code-snippets-file": "snippets/ls/00031.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ByteTest#testByte",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:291",
                        "method-b-site": "Field.java:822",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION. On execution, method-a returns the int value 0. The DSI default replacement value is 0.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ByteTest#testByte",
        "notes": "While method-b does change state, it does not modify the value that method-a returns (Field.page() - ONE_STATELESS_METHOD). Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-22-15-01",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 7,
        "inspection-start-time": "2022-01-22-17-45",
        "project": "commons-validator",
        "spec-id": "00034",
        "method-a": "org.apache.commons.validator.Field.getProperty()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.Field.getArg(I)Lorg/apache/commons/validator/Arg;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "org.apache.commons.validator.Arg",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00034.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ExtensionTest#testOverrideRule",
                "stage": "stage-3-complete",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "GenericValidatorImpl.java:67",
                        "method-b-site": "ExtensionTest.java:308",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: Most likely replaced with \"\" based on the exception message, but I'm not quite sure where that \"\" value came from, especially because the caller of method-a was invoked via reflection. This caused a NoSuchMethodException to be thrown from the caller of method-a. INSPECTION_TODO?",
                "notes": "GOOD_EXAMPLE + SWALLOWED_EXCEPTION: An exception was thrown, but the DSI experiment continued because the exception was thrown from the reflective invocation of method-a's caller, and was swallowed/caught by the invocation of the reflective call."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter to the field variable Field.property, and method-b is a recursive routine to retrieve a particular Arg object from a given position. More importantly, refer to findings.",
        "findings": "The DSI experiment result should actually be stage-0-failure because the replaced value of method-a caused the caller of method-a to throw an exception. However, the exception that the caller of method-a threw was caught and essentially swallowed after being logged, so the DSI experiment resulted in a stage-3-complete.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-22-18-04",
        "inspection-time-in-minutes": 19
    },
    {
        "iid": 8,
        "inspection-start-time": "2022-01-22-18-04",
        "project": "commons-validator",
        "spec-id": "00035",
        "method-a": "org.apache.commons.validator.Field.getProperty()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.Field.getArg(Ljava/lang/String;I)Lorg/apache/commons/validator/Arg;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "org.apache.commons.validator.Arg",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00035.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ExtensionTest#testOverrideRule",
                "stage": "stage-3-complete",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "GenericValidatorImpl.java:67",
                        "method-b-site": "Field.java:417",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: Most likely replaced with \"\" based on the exception message, but I'm not quite sure where that \"\" value came from, especially because the caller of method-a was invoked via reflection. This caused a NoSuchMethodException to be thrown from the caller of method-a. INSPECTION_TODO?",
                "notes": "GOOD_EXAMPLE + SWALLOWED_EXCEPTION: An exception was thrown, but the DSI experiment continued because the exception was thrown from the reflective invocation of method-a's caller, and was swallowed/caught by the invocation of the reflexive call."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter to the field variable Field.property, and method-b is a recursive routine to retrieve a particular Arg object from a given position. More importantly, refer to findings. Similarly to 00034, the DSI experiment should have resulted in a stage-0-failure, but the exception was essentially swallowed, so the experiment resulted in a stage-0-failure.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-22-18-07",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 9,
        "inspection-start-time": "2022-01-23-12-57",
        "project": "commons-validator",
        "spec-id": "00044",
        "method-a": "org.apache.commons.validator.Field.getVarMap()Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.Field.getDepends()Ljava/lang/String;",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 5,
        "test-methods-mine-count": 22,
        "code-snippets-file": "snippets/ls/00044.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:595",
                        "method-b-site": "Field.java:884",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: Based on the fact that a NullPointerException was not thrown, the return value of method-a was replaced with a different Map<String, Var> object. I don't immediately see a declared Map<String, Var> object, but it is likely that the replacement value was the field variable Field.hVars itself, which is actually the return value of method-a. INSPECTION_TODO to check the DSI replacement mechanism on this one. Either way, the original test gets an empty set on Field.java:595, so the replacement value did not change the state much.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable Field.hVars, and method-b is a 1-line naive getter to the field variable Field.depends.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-23-13-11",
        "inspection-time-in-minutes": 14
    },
    {
        "iid": 10,
        "inspection-start-time": "2022-01-23-13-11",
        "project": "commons-validator",
        "spec-id": "00045",
        "method-a": "org.apache.commons.validator.Field.getVarMap()Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.Field.getPage()I",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 5,
        "test-methods-mine-count": 22,
        "code-snippets-file": "snippets/ls/00045.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:595",
                        "method-b-site": "Form.java:281",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: Based on the fact that a NullPointerException was not thrown, the return value of method-a was replaced with a different Map<String, Var> object. I don't immediately see a declared Map<String, Var> object, but it is likely that the replacement value was the field variable Field.hVars itself, which is actually the return value of method-a. INSPECTION_TODO to check the DSI replacement mechanism on this one. Either way, the original test gets an empty set on Field.java:595, so the replacement value did not change the state much.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable Field.hVars, and method-b is a 1-line naive getter to the field variable Field.page.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-23-13-17",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 11,
        "inspection-start-time": "2022-01-23-13-17",
        "project": "commons-validator",
        "spec-id": "00046",
        "method-a": "org.apache.commons.validator.Field.getVarMap()Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.Field.getProperty()Ljava/lang/String;",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 13,
        "code-snippets-file": "snippets/ls/00046.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:595",
                        "method-b-site": "ValidatorTest.java:246",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: Based on the fact that a NullPointerException was not thrown, the return value of method-a was replaced with a different Map<String, Var> object. I don't immediately see a declared Map<String, Var> object, but it is likely that the replacement value was the field variable Field.hVars itself, which is actually the return value of method-a. INSPECTION_TODO to check the DSI replacement mechanism on this one. Either way, the original test gets an empty set on Field.java:595, so the replacement value did not change the state much.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable Field.hVars, and method-b is a 1-line naive getter to the field variables Field.property.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-23-13-21",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 12,
        "inspection-start-time": "2022-01-23-13-21",
        "project": "commons-validator",
        "spec-id": "00047",
        "method-a": "org.apache.commons.validator.Field.getVarMap()Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.Field.runDependentValidators(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 3,
        "test-methods-mine-count": 12,
        "code-snippets-file": "snippets/ls/00047.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:595",
                        "method-b-site": "Field.java:822",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: Based on the fact that a NullPointerException was not thrown, the return value of method-a was replaced with a different Map<String, Var> object. I don't immediately see a declared Map<String, Var> object, but it is likely that the replacement value was the field variable Field.hVars itself, which is actually the return value of method-a. INSPECTION_TODO to check the DSI replacement mechanism on this one. Either way, the original test gets an empty set on Field.java:595, so the replacement value did not change the state much.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "While method-b is stateful, inspection of its definition and the methods that it calls shows that method-b does not alter Field.hVars, the value that method-a (a 1-line naive getter - ONE_STATELESS_METHOD) returns. Hence, this seems to be a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-23-13-29",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 13,
        "inspection-start-time": "2022-01-23-15-03",
        "project": "commons-validator",
        "spec-id": "00050",
        "method-a": "org.apache.commons.validator.Field.process(Ljava/util/Map;Ljava/util/Map;)V",
        "method-b": "org.apache.commons.validator.Field.getDepends()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 7,
        "test-methods-mine-count": 29,
        "code-snippets-file": "snippets/ls/00050.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:207",
                        "method-b-site": "Field.java:884",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "commenting out method-a does not prevent the test from passing"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-b is a 1-line naive getter of the field Field.depends (ONE_STATELESS_METHOD). Upon inspection, it is evident that method-a or its callees do not modify the field, so this seems like a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-23-15-13",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 14,
        "inspection-start-time": "2022-01-23-15-13",
        "project": "commons-validator",
        "spec-id": "00051",
        "method-a": "org.apache.commons.validator.Field.process(Ljava/util/Map;Ljava/util/Map;)V",
        "method-b": "org.apache.commons.validator.Field.getPage()I",
        "method-a-return-type": "void",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 7,
        "test-methods-mine-count": 29,
        "code-snippets-file": "snippets/ls/00051.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:207",
                        "method-b-site": "Form.java:281",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "commenting out method-a does not prevent the test from passing"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-b is a 1-line naive getter of the field Field.depends (ONE_STATELESS_METHOD). method-a does not modify the field, so this seems like a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-23-15-20",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 15,
        "inspection-start-time": "2022-01-23-15-20",
        "project": "commons-validator",
        "spec-id": "00052",
        "method-a": "org.apache.commons.validator.Field.process(Ljava/util/Map;Ljava/util/Map;)V",
        "method-b": "org.apache.commons.validator.Field.getProperty()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 5,
        "test-methods-mine-count": 21,
        "code-snippets-file": "snippets/ls/00052.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:207",
                        "method-b-site": "ValidatorTest.java:246",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "commenting out method-a does not prevent the test from passing"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-b is a 1-line naive getter of the field Field.property (ONE_STATELESS_METHOD). method-a does not modify the field, so this seems like a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-23-15-27",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 16,
        "inspection-start-time": "2022-01-23-15-44",
        "project": "commons-validator",
        "spec-id": "00057",
        "method-a": "org.apache.commons.validator.Field.process(Ljava/util/Map;Ljava/util/Map;)V",
        "method-b": "org.apache.commons.validator.Field.runDependentValidators(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 5,
        "test-methods-mine-count": 19,
        "code-snippets-file": "snippets/ls/00057.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:207",
                        "method-b-site": "Field.java:822",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "commenting out method-a does not prevent the test from passing"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "The DSI experiment on every test that mined the spec suggests that one does not need to call method-a before calling method-b. However, it seems a bit wrong to me that you can validate before finishing the processing that (presumably) needs to be done. (SUPPLEMENTARY_EVIDENCE_BY_JAVADOC: The javadoc of an indirect caller of method-a (ValidatorResources.process()) says ValidatorResources.process() needs to be called at the end of initializing ValidatorResources, which is a class that one needs to set up before setting up the Validator class, which indirectly calls method-b.) However, I'm not sure whether there is a direct relationship between method-a and method-b themselves, so I am leaning towards this being more of a spurious spec. DECISION: method-a and method-b themselves are not directly related to each other - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-16-07",
        "inspection-time-in-minutes": 23
    },
    {
        "iid": 17,
        "inspection-start-time": "2022-01-24-03-15",
        "project": "commons-validator",
        "spec-id": "00060",
        "method-a": "org.apache.commons.validator.Field.processArg(Ljava/lang/String;Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.getDepends()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/ls/00060.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:632",
                        "method-b-site": "Field.java:884",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "commenting out method-a does not prevent the test from passing"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-b is a 1-line stateless getter for the field variable Field.depends (ONE_STATELESS_METHOD), and while method-a changes state, it only processes/impacts Field.args, so one can call method-b without/before calling method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-03-20",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 18,
        "inspection-start-time": "2022-01-24-03-20",
        "project": "commons-validator",
        "spec-id": "00061",
        "method-a": "org.apache.commons.validator.Field.processArg(Ljava/lang/String;Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.getPage()I",
        "method-a-return-type": "void",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/ls/00061.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:632",
                        "method-b-site": "Form.java:291",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "commenting out method-a does not prevent the test from passing"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-b is a 1-line stateless getter for the field variable Field.page (ONE_STATELESS_METHOD), and while method-a changes state, it only processes/impacts Field.args, so one can call method-b without/before calling method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-03-25",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 19,
        "inspection-start-time": "2022-01-24-03-26",
        "project": "commons-validator",
        "spec-id": "00062",
        "method-a": "org.apache.commons.validator.Field.processArg(Ljava/lang/String;Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.getProperty()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/ls/00062.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:632",
                        "method-b-site": "GenericTypeValidatorImpl.java:235",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "commenting out method-a does not prevent the test from passing"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-b is a 1-line stateless getter for the field variable Field.property (ONE_STATELESS_METHOD), and while method-a changes state, it only processes/impacts Field.args, so one can call method-b without/before calling method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-03-29",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 20,
        "inspection-start-time": "2022-01-24-03-29",
        "project": "commons-validator",
        "spec-id": "00063",
        "method-a": "org.apache.commons.validator.Field.processArg(Ljava/lang/String;Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.runDependentValidators(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/ls/00063.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:632",
                        "method-b-site": "Field.java:822",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "commenting out method-a does not prevent the test from passing"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a modifies the field variable Field.args. method-b does validation using the validators that the current validator depends on. Since neither method-b nor its callees seem to access/modify/be affected Field.args upon manual inspection, I think this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-03-42",
        "inspection-time-in-minutes": 13
    },
    {
        "iid": 21,
        "inspection-start-time": "2022-01-24-03-42",
        "project": "commons-validator",
        "spec-id": "00064",
        "method-a": "org.apache.commons.validator.Field.processArg(Ljava/lang/String;Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.validate(Ljava/util/Map;Ljava/util/Map;)Lorg/apache/commons/validator/ValidatorResults;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.ValidatorResults",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/ls/00064.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:632",
                        "method-b-site": "Form.java:292",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "commenting out method-a does not prevent the test from passing"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a modifies the field variable Field.args. method-b performs validation on the particular field. Since neither method-b nor its callees seem to access/modify/be affected Field.args upon manual inspection, I think this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-03-54",
        "inspection-time-in-minutes": 12
    },
    {
        "iid": 22,
        "inspection-start-time": "2022-01-24-03-54",
        "project": "commons-validator",
        "spec-id": "00065",
        "method-a": "org.apache.commons.validator.Field.processArg(Ljava/lang/String;Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.validateForRule(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/ls/00065.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:632",
                        "method-b-site": "Field.java:908",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "commenting out method-a does not prevent the test from passing"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a modifies the field variable Field.args. method-b performs validation by running the ValidatorAction and all of the ValidatorActions that it depends on. Since neither method-b nor its callees seem to access/modify/be affected Field.args upon manual inspection, I think this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-03-59",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 23,
        "inspection-start-time": "2022-01-24-11-46",
        "project": "commons-validator",
        "spec-id": "00066",
        "method-a": "org.apache.commons.validator.Field.processMessageComponents(Ljava/lang/String;Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.getDepends()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/ls/00066.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:600",
                        "method-b-site": "Field.java:884",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "commenting out method-a does not prevent the test from passing"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a potentially modifies Field.args and Field.hMsgs; note that the portion of the code that modifies Field.hMsgs is not covered by any test in the project. method-b is a 1-line getter for the field variable Field.depends (ONE_STATELESS_METHOD). Since these field variables are not related, it's most likely the spec is spurious.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-12-05",
        "inspection-time-in-minutes": 19
    },
    {
        "iid": 24,
        "inspection-start-time": "2022-01-24-12-05",
        "project": "commons-validator",
        "spec-id": "00067",
        "method-a": "org.apache.commons.validator.Field.processMessageComponents(Ljava/lang/String;Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.getPage()I",
        "method-a-return-type": "void",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/ls/00067.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:600",
                        "method-b-site": "Form.java:291",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "commenting out method-a does not prevent the test from passing"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a potentially modifies Field.args and Field.hMsgs; note that the portion of the code that modifies Field.hMsgs is not covered by any test in the project. method-b is a 1-line getter for the field variable Field.page (ONE_STATELESS_METHOD). Since these field variables are not related, it's most likely the spec is spurious.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-12-08",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 25,
        "inspection-start-time": "2022-01-24-12-08",
        "project": "commons-validator",
        "spec-id": "00068",
        "method-a": "org.apache.commons.validator.Field.processMessageComponents(Ljava/lang/String;Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.getProperty()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/ls/00068.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:600",
                        "method-b-site": "GenericTypeValidatorImpl.java:235",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "commenting out method-a does not prevent the test from passing"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a potentially modifies Field.args and Field.hMsgs; note that the portion of the code that modifies Field.hMsgs is not covered by any test in the project. method-b is a 1-line getter for the field variable Field.property (ONE_STATELESS_METHOD). Since these field variables are not related, it's most likely the spec is spurious.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-12-12",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 26,
        "inspection-start-time": "2022-01-24-12-23",
        "project": "commons-validator",
        "spec-id": "00070",
        "method-a": "org.apache.commons.validator.Field.processMessageComponents(Ljava/lang/String;Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.runDependentValidators(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/ls/00070.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:600",
                        "method-b-site": "Field.java:822",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "commenting out method-a does not prevent the test from passing"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a modifies the field variables Field.args and Field.hMsgs. method-b invokes the specified validation method via reflection. method-b itself does not access or modify the two variables that could be modified by method-a. (SUPPLEMENTARY_EVIDENCE_BY_JAVADOC: The javadoc of an indirect caller of method-a (ValidatorResources.process()) says ValidatorResources.process() needs to be called at the end of initializing ValidatorResources, which is a class that one needs to set up before setting up the Validator class, which indirectly calls method-b.) DECISION: given this evidence, it seems safe to say that method-a and method-b themselves are unrelated - hence UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-12-39",
        "inspection-time-in-minutes": 16
    },
    {
        "iid": 27,
        "inspection-start-time": "2022-01-24-12-59",
        "project": "commons-validator",
        "spec-id": "00071",
        "method-a": "org.apache.commons.validator.Field.processMessageComponents(Ljava/lang/String;Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.validate(Ljava/util/Map;Ljava/util/Map;)Lorg/apache/commons/validator/ValidatorResults;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.ValidatorResults",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/ls/00071.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:600",
                        "method-b-site": "Form.java:292",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "commenting out method-a does not prevent the test from passing"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a modifies the field variables Field.args and Field.hMsgs. method-b does not access or modify the two variables that could be modified by method-a - method-b runs all of the ValidatorActions from its Map argument that are configured to run. (SUPPLEMENTARY_EVIDENCE_BY_JAVADOC: The javadoc of an indirect caller of method-a (ValidatorResources.process()) says ValidatorResources.process() needs to be called at the end of initializing ValidatorResources, which is a class that one needs to set up before setting up the Validator class, which indirectly calls method-b.) DECISION: This is most likely a case of UNRELATED_STATEFUL_METHODS, because method-a and method-b by themselves are not related.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-13-07",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 28,
        "inspection-start-time": "2022-01-24-13-07",
        "project": "commons-validator",
        "spec-id": "00072",
        "method-a": "org.apache.commons.validator.Field.processMessageComponents(Ljava/lang/String;Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.validateForRule(Lorg/apache/commons/validator/ValidatorAction;Lorg/apache/commons/validator/ValidatorResults;Ljava/util/Map;Ljava/util/Map;I)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/ls/00072.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:600",
                        "method-b-site": "Field.java:908",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "commenting out method-a does not prevent the test from passing"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a modifies the field variables Field.args and Field.hMsgs. method-b executes via reflection the ValidatorAction argument, and some ValidatorAction objects that are also necessary. method-b itself does not access or modify the two variables that could be modified by method-a. (SUPPLEMENTARY_EVIDENCE_BY_JAVADOC: The javadoc of an indirect caller of method-a (ValidatorResources.process()) says ValidatorResources.process() needs to be called at the end of initializing ValidatorResources, which is a class that one needs to set up before setting up the Validator class, which indirectly calls method-b.) DECISION: This seems like a UNRELATED_STATEFUL_METHODS, because the two methods by themselves are unrelated; method-a and method-b don't seem to intersect in state. (MODIFIED_STATE_DOES_NOT_INTERSECT?)",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-13-14",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 29,
        "inspection-start-time": "2022-01-24-14-08",
        "project": "commons-validator",
        "spec-id": "00077",
        "method-a": "org.apache.commons.validator.Field.setDepends(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.getPage()I",
        "method-a-return-type": "void",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00077.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:157",
                        "method-b-site": "Form.java:281",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED. The point at which the state changes that method-a causes becomes important is Field.validate(), which is called if the conditional that checks the return value of method-b passes. So, the delayed call of method-a restored the state, causing the test to pass."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a modifies the field variables Field.depends and Fields.dependencyList. method-b is a getter of Field.page (ONE_STATELESS_METHOD).",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-14-17",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 30,
        "inspection-start-time": "2022-01-24-14-27",
        "project": "commons-validator",
        "spec-id": "00079",
        "method-a": "org.apache.commons.validator.Field.setDepends(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.getVarMap()Ljava/util/Map;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00079.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:157",
                        "method-b-site": "Field.java:595",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a modifies the field variables Field.depends and Fields.dependencyList. method-b is a 1-line naive getter of Field.hVars (ONE_STATELESS_METHOD), which is unrelated.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-14-34",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 31,
        "inspection-start-time": "2022-01-24-14-34",
        "project": "commons-validator",
        "spec-id": "00080",
        "method-a": "org.apache.commons.validator.Field.setDepends(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.process(Ljava/util/Map;Ljava/util/Map;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00080.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:157",
                        "method-b-site": "Form.java:207",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a modifies the field variables Field.depends and Fields.dependencyList. While method-b performs stateful computation, inspection showed that it does not access or modify the two field variables. Hence, this should be a spurious spec. Note that both Field.depends and Fields.dependencyList are only used by the method Field.validate(), which in all use cases is called after the call to method-b. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-14-41",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 32,
        "inspection-start-time": "2022-01-24-18-04",
        "project": "commons-validator",
        "spec-id": "00090",
        "method-a": "org.apache.commons.validator.Field.setProperty(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Field.setDepends(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00090.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:156",
                        "method-b-site": "ValidatorTest.java:157",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "UNRELATED_STATEFUL_METHODS: method-a is a pure setter to the field variable Field.property, and method-b modifies the field variables Field.depends and Fields.dependencyList. ONE_PURE_SETTER",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-18-08",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 33,
        "inspection-start-time": "2022-01-24-22-56",
        "project": "commons-validator",
        "spec-id": "00102",
        "method-a": "org.apache.commons.validator.Form.addField(Lorg/apache/commons/validator/Field;)V",
        "method-b": "org.apache.commons.validator.Form.isExtending()Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00102.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testManualBoolean",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:187",
                        "method-b-site": "Form.java:186",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED. The point at which method-a needs to be called in order for the test to not fail is *before* ValidatorTest.java:215. method-b gets called before that, so the delayed call to method-a restored the state."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testManualBoolean",
        "notes": "method-a modifies the field variables Form.lFields and Form.hFields, and method-b is a simple check on the field variable Form.inherit. The variable that method-b negates is not related to the field variables that method-a modifies. ONE_STATELESS_METHOD",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-23-10",
        "inspection-time-in-minutes": 14
    },
    {
        "iid": 34,
        "inspection-start-time": "2022-01-24-23-10",
        "project": "commons-validator",
        "spec-id": "00103",
        "method-a": "org.apache.commons.validator.Form.addField(Lorg/apache/commons/validator/Field;)V",
        "method-b": "org.apache.commons.validator.Form.isProcessed()Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00103.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testManualBoolean",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:187",
                        "method-b-site": "Form.java:181",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED. The point at which method-a needs to be called in order for the test to not fail is *before* ValidatorTest.java:215. method-b gets called before that, so the delayed call to method-a restored the state."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testManualBoolean",
        "notes": "method-a modifies the field variables Form.lFields and Form.hFields, and method-b is a 1-line naive getter for the field variable Form.processed (ONE_STATELESS_METHOD). The variable that method-b works with is not related to the field variables that method-a modifies, so this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-24-23-16",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 35,
        "inspection-start-time": "2022-01-24-23-16",
        "project": "commons-validator",
        "spec-id": "00104",
        "method-a": "org.apache.commons.validator.Form.addField(Lorg/apache/commons/validator/Field;)V",
        "method-b": "org.apache.commons.validator.Form.process(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00104.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testManualBoolean",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:187",
                        "method-b-site": "FormSet.java:293",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED. The point at which method-a needs to be called in order for the test to not fail is *before* ValidatorTest.java:215. method-b gets called before that, so the delayed call to method-a restored the state."
            }
        ],
        "verdict": "unknown",
        "is-oracle-weak": false,
        "spec-type": "precondition",
        "validating-test-file": "? Might be helpful to write a new test with a more interesting setup",
        "notes": "method-a adds an entry to the field variables Form.lFields and Form.hFields; method-b does lots of stateful computation including potentially adding elements to Form.lFields and Form.hFields. For this particular set of tests, it seems that the computation that calling method-a after method-b has no bearing (most likely because method-a is called before ValidtorTest.java:215, at which the Field objects in Form.lFields will be used...). INSPECTION_TODO: experiment with different configurations to see whether this is a true spec? At the current point, I think it's likely that this is a true spec...",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-24-23-38",
        "inspection-time-in-minutes": 22
    },
    {
        "iid": 36,
        "inspection-start-time": "2022-01-25-12-46",
        "project": "commons-validator",
        "spec-id": "00112",
        "method-a": "org.apache.commons.validator.Form.isProcessed()Z",
        "method-b": "org.apache.commons.validator.Form.isExtending()Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 93,
        "code-snippets-file": "snippets/ls/00112.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Form.java:181",
                        "method-b-site": "Form.java:186",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION - method-a should return false in the test, and DSI replaced the return value of method-a with the default value false.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "UNRELATED_STATELESS_METHODS: method-a is a 1-line naive getter to the field variable Form.processed. method-b is a simple 1-line check on whether the field variable Form.inherit is null. Since these two field variables are not related, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-12-51",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 37,
        "inspection-start-time": "2022-01-25-14-10",
        "project": "commons-validator",
        "spec-id": "00119",
        "method-a": "org.apache.commons.validator.Form.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Form.addField(Lorg/apache/commons/validator/Field;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00119.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testManualObject",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:154",
                        "method-b-site": "ValidatorTest.java:158",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED - the critical point at which method-a needs to be called in the test is ValidatorTest.java:159. Since method-b is called before that point, the state was appropriately restored."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testManualObject",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable Form.name, and method-b adds elements to the field variables Form.lFields, and Form.hFields. Since the field variables that these two methods modify are not related to each other, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-14-16",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 38,
        "inspection-start-time": "2022-01-25-14-16",
        "project": "commons-validator",
        "spec-id": "00120",
        "method-a": "org.apache.commons.validator.Form.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.Form.getFieldMap()Ljava/util/Map;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/ls/00120.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testManualObject",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:154",
                        "method-b-site": "Form.java:101",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED - the critical point at which method-a needs to be called in the test is ValidatorTest.java:159. Since method-b is called before that point, the state was appropriately restored."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testManualObject",
        "notes": "method-a is a pure setter for the field variable Form.name (ONE_PURE_SETTER), and method-b is a 1-line getter for the field variable Form.hFields (ONE_STATELESS_METHOD). Since these field variables are not related, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-14-21",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 39,
        "inspection-start-time": "2022-01-25-15-32",
        "project": "commons-validator",
        "spec-id": "00125",
        "method-a": "org.apache.commons.validator.FormSet.addForm(Lorg/apache/commons/validator/Form;)V",
        "method-b": "org.apache.commons.validator.FormSet.getCountry()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00125.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:159",
                        "method-b-site": "ValidatorResources.java:399",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a checks the value of, and potentially adds elements to the field variable FormSet.forms. method-b is a 1-line naive getter of the field variable FormSet.country (ONE_STATELESS_METHOD). Since these two field variables themselves are not related, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-15-42",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 40,
        "inspection-start-time": "2022-01-25-16-09",
        "project": "commons-validator",
        "spec-id": "00127",
        "method-a": "org.apache.commons.validator.FormSet.addForm(Lorg/apache/commons/validator/Form;)V",
        "method-b": "org.apache.commons.validator.FormSet.getLanguage()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00127.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:159",
                        "method-b-site": "ValidatorResources.java:399",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a checks the value of, and potentially adds elements to the field variable FormSet.forms. method-b is a 1-line naive getter of the field variable FormSet.language (ONE_STATELESS_METHOD). Since these two field variables themselves are not related, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-16-11",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 41,
        "inspection-start-time": "2022-01-25-16-11",
        "project": "commons-validator",
        "spec-id": "00128",
        "method-a": "org.apache.commons.validator.FormSet.addForm(Lorg/apache/commons/validator/Form;)V",
        "method-b": "org.apache.commons.validator.FormSet.getVariant()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00128.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:159",
                        "method-b-site": "ValidatorResources.java:399",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a checks the value of, and potentially adds elements to the field variable FormSet.forms. method-b is a 1-line naive getter of the field variable FormSet.variant (ONE_STATELESS_METHOD). Since these two field variables themselves are not related, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-16-14",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 42,
        "inspection-start-time": "2022-01-25-16-14",
        "project": "commons-validator",
        "spec-id": "00129",
        "method-a": "org.apache.commons.validator.FormSet.addForm(Lorg/apache/commons/validator/Form;)V",
        "method-b": "org.apache.commons.validator.FormSet.process(Ljava/util/Map;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00129.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:159",
                        "method-b-site": "ValidatorResources.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "true-spec",
        "is-oracle-weak": false,
        "spec-type": "precondition",
        "validating-test-file": "inspection of code? refer to snippet...",
        "notes": "method-a edits the field variable FormSet.forms. method-b loops over the elements of FormSet.forms and performs stateful computation over them. So, it seems like one ought to add all of the elements to FormSet.forms before calling method-b... However, it seems like many tests still pass because the stateful computation that method-b does isn't applied to the specific set of Form objects created via the use cases in the tests. INSPECTION_TODO: we need more details on what happens if the defaultFormSet is used, why the other tests pass, and whether this spec is only sometimes true",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-25-16-34",
        "inspection-time-in-minutes": 20
    },
    {
        "iid": 43,
        "inspection-start-time": "2022-01-25-16-35",
        "project": "commons-validator",
        "spec-id": "00130",
        "method-a": "org.apache.commons.validator.FormSet.getCountry()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.FormSet.getForm(Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 16,
        "test-methods-mine-count": 84,
        "code-snippets-file": "snippets/ls/00130.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:399",
                        "method-b-site": "ValidatorResources.java:489",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a most likely replaced with null - the test doesn't check for the value returned by method-a/the subsequent return value of ValidatorResources.buildKey().",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable FormSet.country. method-b retrieves from the field variable FormSet.forms a Form object based on the input (this is simply a retrieval from a Map object). Since these two field variables are not related, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-16-42",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 44,
        "inspection-start-time": "2022-01-25-16-42",
        "project": "commons-validator",
        "spec-id": "00131",
        "method-a": "org.apache.commons.validator.FormSet.getCountry()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.FormSet.getVariant()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 96,
        "code-snippets-file": "snippets/ls/00131.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:399",
                        "method-b-site": "ValidatorResources.java:399",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a most likely replaced with null - the test doesn't check for the value returned by method-a/the subsequent return value of ValidatorResources.buildKey().",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable FormSet.country, and method-b is a 1-line naive getter to the field variable FormSet.variant.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-16-44",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 45,
        "inspection-start-time": "2022-01-25-16-44",
        "project": "commons-validator",
        "spec-id": "00132",
        "method-a": "org.apache.commons.validator.FormSet.getCountry()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.FormSet.process(Ljava/util/Map;)V",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 96,
        "code-snippets-file": "snippets/ls/00132.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:399",
                        "method-b-site": "ValidatorResources.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a most likely replaced with null - the test doesn't check for the value returned by method-a/the subsequent return value of ValidatorResources.buildKey().",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a is a 1-line naive getter for the field variable FormSet.country (ONE_STATELESS_METHOD), and while method-b is stateful, it does not access or modify FormSet.country (it only modifies the values within the field variable FormSet.forms).",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-16-52",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 46,
        "inspection-start-time": "2022-01-25-16-52",
        "project": "commons-validator",
        "spec-id": "00133",
        "method-a": "org.apache.commons.validator.FormSet.getLanguage()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.FormSet.getCountry()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 96,
        "code-snippets-file": "snippets/ls/00133.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:399",
                        "method-b-site": "ValidatorResources.java:399",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a most likely replaced with null - the test doesn't check for the value returned by method-a/the subsequent return value of ValidatorResources.buildKey().",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable FormSet.language, and method-b is a 1-line naive getter to the field variable FormSet.country.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-16-54",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 47,
        "inspection-start-time": "2022-01-25-16-55",
        "project": "commons-validator",
        "spec-id": "00134",
        "method-a": "org.apache.commons.validator.FormSet.getLanguage()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.FormSet.getForm(Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 16,
        "test-methods-mine-count": 84,
        "code-snippets-file": "snippets/ls/00134.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:399",
                        "method-b-site": "ValidatorResources.java:489",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a most likely replaced with null - the test doesn't check for the value returned by method-a/the subsequent return value of ValidatorResources.buildKey().",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line getter to the field variable FormSet.language, and method-b retrieves a Form object from the Map field variable FormSet.forms. Since these two field variables themselves are unrelated, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-16-58",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 48,
        "inspection-start-time": "2022-01-25-19-24",
        "project": "commons-validator",
        "spec-id": "00135",
        "method-a": "org.apache.commons.validator.FormSet.getLanguage()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.FormSet.getVariant()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 96,
        "code-snippets-file": "snippets/ls/00135.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:399",
                        "method-b-site": "ValidatorResources.java:399",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a most likely replaced with null - the test doesn't check for the value returned by method-a/the subsequent return value of ValidatorResources.buildKey().",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable FormSet.language, and method-b is a 1-line naive getter to the field variable FormSet.variant. Since these two field variables themselves are unrelated, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-19-27",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 49,
        "inspection-start-time": "2022-01-25-19-39",
        "project": "commons-validator",
        "spec-id": "00136",
        "method-a": "org.apache.commons.validator.FormSet.getLanguage()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.FormSet.process(Ljava/util/Map;)V",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 96,
        "code-snippets-file": "snippets/ls/00136.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:399",
                        "method-b-site": "ValidatorResources.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a most likely replaced with null - the test doesn't check for the value returned by method-a/the subsequent return value of ValidatorResources.buildKey().",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter to the field variable FormSet.language. While method-b is stateful, it only modifies the values stored in the field variable FormSet.forms, which is a field variable unrelated to FormSet.language. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-19-44",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 50,
        "inspection-start-time": "2022-01-25-19-45",
        "project": "commons-validator",
        "spec-id": "00137",
        "method-a": "org.apache.commons.validator.FormSet.getType()I",
        "method-b": "org.apache.commons.validator.FormSet.isProcessed()Z",
        "method-a-return-type": "int",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/ls/00137.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:563",
                        "method-b-site": "ValidatorResources.java:544",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR - there are a couple of int field variables that DSI could have replaced the return value of method-a with. the problem here is that the test would have passed no matter whether the return value of the caller of method-a (which is influenced by the return value of method-a) was a set value or null.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort as well, but the oracle seems to be weak",
        "notes": "While the test oracle is weak because the test would pass even if method-a returned a value that is different from what method-a should return. method-a checks the values of the field variables FormSet.variant, FormSet.language, and FormSet.country to figure out the type of FormSet it is acting on; it can throw an Exception depending on the values of these field variables. ONE_STATELESS_METHOD: method-b is a 1-line naive getter to the field variable FormSet.processed. Since method-b is a public method and the field variable FormSet.processed is not affected by method-a's computations or return value, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-20-02",
        "inspection-time-in-minutes": 17
    },
    {
        "iid": 51,
        "inspection-start-time": "2022-01-25-20-08",
        "project": "commons-validator",
        "spec-id": "00138",
        "method-a": "org.apache.commons.validator.FormSet.getType()I",
        "method-b": "org.apache.commons.validator.FormSet.merge(Lorg/apache/commons/validator/FormSet;)V",
        "method-a-return-type": "int",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/ls/00138.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:563",
                        "method-b-site": "ValidatorResources.java:539",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR (following from 00137) - there are a couple of int field variables that DSI could have replaced the return value of method-a with. the problem here is that the test would have passed no matter whether the return value of ValidatorResources.getParent(), the caller of method-a, was a set value or null.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort, but the oracle here is weak",
        "notes": "method-a checks the values of the field variables FormSet.variant, FormSet.language, and FormSet.country to figure out the type of FormSet it is acting on; it can throw an Exception depending on the values of these field variables. method-b modifies the entries/adds new entries to the field variable FormSet.forms. In the use case in the test, method-a's caller uses the return value of method-a in a conditional to determine its return value, and its return value is passed into method-b as an argument. While method-b is a protected method and ValidatorResources.java:539 is the only place where the project calls method-b, one could potentially declare and pass in a FormSet object instead of having to call method-a's caller to supply the method. Plus, method-a itself either returns an int value or throws an exception, so I don't think method-a itself has a bearing on the correctness of method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-20-16",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 52,
        "inspection-start-time": "2022-01-25-20-16",
        "project": "commons-validator",
        "spec-id": "00139",
        "method-a": "org.apache.commons.validator.FormSet.getVariant()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.FormSet.getForm(Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 16,
        "test-methods-mine-count": 84,
        "code-snippets-file": "snippets/ls/00139.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:399",
                        "method-b-site": "ValidatorResources.java:489",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a most likely replaced with null - the test doesn't check for the value returned by method-a.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable FormSet.variant, and method-b retrieves a Form object from the Map field variable FormSet.forms.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-20-18",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 53,
        "inspection-start-time": "2022-01-25-20-18",
        "project": "commons-validator",
        "spec-id": "00140",
        "method-a": "org.apache.commons.validator.FormSet.getVariant()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.FormSet.process(Ljava/util/Map;)V",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 96,
        "code-snippets-file": "snippets/ls/00140.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:399",
                        "method-b-site": "ValidatorResources.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a most likely replaced with null - the test doesn't check for the value returned by method-a.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "ONE_STATELESS_METHOD: method-a is a 1-line naive getter to the field variable FormSet.language. While method-b is stateful, it only modifies the values within the field variable FormSet.forms, which is unrelated to FormSet.language.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-20-20",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 54,
        "inspection-start-time": "2022-01-25-20-21",
        "project": "commons-validator",
        "spec-id": "00141",
        "method-a": "org.apache.commons.validator.FormSet.merge(Lorg/apache/commons/validator/FormSet;)V",
        "method-b": "org.apache.commons.validator.FormSet.isProcessed()Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 3,
        "test-methods-mine-count": 15,
        "code-snippets-file": "snippets/ls/00141.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:539",
                        "method-b-site": "ValidatorResources.java:544",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Pretty weak test, considering that the test still passes even with not calling method-a at all."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort/snippet",
        "notes": "method-a modifies the elements of/adds elements to the field variable FormSet.forms. ONE_STATELESS_METHOD: method-b is a 1-line naive getter for the field variable FormSet.processed. Since these field variables are not directly related, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-20-28",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 55,
        "inspection-start-time": "2022-01-25-20-28",
        "project": "commons-validator",
        "spec-id": "00142",
        "method-a": "org.apache.commons.validator.FormSet.process(Ljava/util/Map;)V",
        "method-b": "org.apache.commons.validator.FormSet.getForm(Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 16,
        "test-methods-mine-count": 84,
        "code-snippets-file": "snippets/ls/00142.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:535",
                        "method-b-site": "ValidatorResources.java:489",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField with modifications proposed in snippet",
        "notes": "method-a loops over the elements in the field variable FormSet.forms, and applies stateful computations to it. ONE_STATELESS_METHOD: method-b retrieves the specified element (or null if such does not exist) from FormSet.forms. So, there is a connection between method-a and method-b. One can call method-b before method-a as specified in the snippet file, but since method-a is applying some stateful computations (in some cases), it may be wise to call method-b after method-a (often, as in this test, method-a doesn't have any effect, which is why the test is weak). Most likely CONNECTION_DOES_NOT_NECESSITATE_ORDERING.",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-25-20-54",
        "inspection-time-in-minutes": 26
    },
    {
        "iid": 56,
        "inspection-start-time": "2022-01-25-20-57",
        "project": "commons-validator",
        "spec-id": "00143",
        "method-a": "org.apache.commons.validator.FormSet.setCountry(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.FormSet.getCountry()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00143.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:84",
                        "method-b-site": "ValidatorResources.java:399",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "true-spec",
        "is-oracle-weak": true,
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "ONE_PURE_SETTER/ONE_STATELESS_METHOD: method-a is a pure setter to the field variable FormSet.country (and it is the only location in the class that sets that field variable), and method-b is a 1-line naive getter to the same field variable. The test is weak because the outcome of the test does not change even if method-b returns null instead of its intended value. This is a pretty simple setter-getter relationship, so while it is a true spec, it is quite an UNINTERESTING_SPEC.",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-25-21-11",
        "inspection-time-in-minutes": 14
    },
    {
        "iid": 57,
        "inspection-start-time": "2022-01-25-21-11",
        "project": "commons-validator",
        "spec-id": "00144",
        "method-a": "org.apache.commons.validator.FormSet.setCountry(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.FormSet.getForm(Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 16,
        "test-methods-mine-count": 83,
        "code-snippets-file": "snippets/ls/00144.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:84",
                        "method-b-site": "ValidatorResources.java:489",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate/snippet",
        "notes": "The test is weak because the test still passes even when method-a is not called at all. method-a is a pure setter to the field variable FormSet.country (ONE_PURE_SETTER), and method-b retrieves a value from the Map field variable FormSet.forms (ONE_STATELESS_METHOD). Since these two field variables are not related, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-21-16",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 58,
        "inspection-start-time": "2022-01-25-21-16",
        "project": "commons-validator",
        "spec-id": "00145",
        "method-a": "org.apache.commons.validator.FormSet.setCountry(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.FormSet.getForms()Ljava/util/Map;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/ls/00145.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:84",
                        "method-b-site": "FormSet.java:150",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "FormSetFactory.java:84",
                        "method-b-site": "FormSet.java:149",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 2,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort/snippet",
        "notes": "The test is weak because the test still passes even when method-a is not called at all. method-a is a pure setter to the field variable FormSet.country (ONE_PURE_SETTER), and method-b accesses the field FormSet.forms (and returns it as an unmodifiable map). Since these two field variables are not related, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-21-23",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 59,
        "inspection-start-time": "2022-01-25-21-24",
        "project": "commons-validator",
        "spec-id": "00146",
        "method-a": "org.apache.commons.validator.FormSet.setCountry(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.FormSet.getLanguage()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00146.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:84",
                        "method-b-site": "ValidatorResources.java:399",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate/snippet",
        "notes": "The test is weak because the outcome of the test does not change even if method-b returns null instead of its intended value. method-a is a pure setter for the field variable FormSet.country (ONE_PURE_SETTER), and method-b is a 1-line naive getter of the field variable FormSet.language (ONE_STATELESS_METHOD). Since these field variables are unrelated, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-21-31",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 60,
        "inspection-start-time": "2022-01-25-21-31",
        "project": "commons-validator",
        "spec-id": "00147",
        "method-a": "org.apache.commons.validator.FormSet.setCountry(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.FormSet.getVariant()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00147.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:84",
                        "method-b-site": "ValidatorResources.java:399",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate/snippet",
        "notes": "The test is weak because the outcome of the test does not change even if method-b returns null instead of its intended value. method-a is a pure setter for the field variable FormSet.country (ONE_PURE_SETTER), and method-b is a 1-line naive getter of the field variable FormSet.variant (ONE_STATELESS_METHOD). Since these field variables are unrelated, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-21-34",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 61,
        "inspection-start-time": "2022-01-25-21-58",
        "project": "commons-validator",
        "spec-id": "00149",
        "method-a": "org.apache.commons.validator.FormSet.setCountry(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.FormSet.setVariant(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 21,
        "test-methods-mine-count": 107,
        "code-snippets-file": "snippets/ls/00149.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:84",
                        "method-b-site": "FormSetFactory.java:85",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable FormSet.country, and method-b is a pure setter to the field variable FormSet.variant. The test is weak because the outcome of the test does not change even if method-a was never called.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-22-02",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 62,
        "inspection-start-time": "2022-01-25-22-02",
        "project": "commons-validator",
        "spec-id": "00150",
        "method-a": "org.apache.commons.validator.FormSet.setLanguage(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.FormSet.getCountry()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00150.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:83",
                        "method-b-site": "ValidatorResources.java:399",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate/snippet",
        "notes": "The test is weak because the outcome of the test does not change even if method-b returns null instead of its intended value. method-a is a pure setter for the field variable FormSet.language (ONE_PURE_SETTER), and method-b is a 1-line naive getter of the field variable FormSet.country (ONE_STATELESS_METHOD). Since these field variables are unrelated, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-22-05",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 63,
        "inspection-start-time": "2022-01-25-22-53",
        "project": "commons-validator",
        "spec-id": "00151",
        "method-a": "org.apache.commons.validator.FormSet.setLanguage(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.FormSet.getForm(Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 16,
        "test-methods-mine-count": 83,
        "code-snippets-file": "snippets/ls/00151.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:83",
                        "method-b-site": "ValidatorResources.java:489",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate/snippet",
        "notes": "The test is weak because the outcome of the test does not change even if method-b returns null instead of its intended value. method-a is a pure setter for the field variable FormSet.language (ONE_PURE_SETTER), and method-b simply accesses the field variable FormSet.forms (ONE_STATELESS_METHOD). Since these field variables are unrelated, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-25-22-57",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 64,
        "inspection-start-time": "2022-01-26-00-24",
        "project": "commons-validator",
        "spec-id": "00153",
        "method-a": "org.apache.commons.validator.FormSet.setLanguage(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.FormSet.getLanguage()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00153.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:83",
                        "method-b-site": "ValidatorResources.java:399",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "true-spec",
        "is-oracle-weak": true,
        "spec-type": "precondition",
        "validating-test-file": "snippet?",
        "notes": "ONE_PURE_SETTER/ONE_STATELESS_METHOD: method-a is a pure setter to the field variable FormSet.language (and it is the only place in the code to do so), and method-b is a 1-line naive getter for the same field variable. The test is weak because not calling method-a at all/having method-b return null instead of an actual value has no bearing on the outcome of the test.",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-26-00-27",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 65,
        "inspection-start-time": "2022-01-26-00-28",
        "project": "commons-validator",
        "spec-id": "00154",
        "method-a": "org.apache.commons.validator.FormSet.setLanguage(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.FormSet.getVariant()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00154.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:83",
                        "method-b-site": "ValidatorResources.java:399",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate/snippet",
        "notes": "The test is weak because the outcome of the test does not change even if method-b returns null instead of its intended value. method-a is a pure setter for the field variable FormSet.language (ONE_PURE_SETTER), and method-b is a 1-line naive getter of the field variable FormSet.variant (ONE_STATELESS_METHOD). Since these field variables are unrelated, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-00-30",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 66,
        "inspection-start-time": "2022-01-26-00-42",
        "project": "commons-validator",
        "spec-id": "00156",
        "method-a": "org.apache.commons.validator.FormSet.setLanguage(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.FormSet.setCountry(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 21,
        "test-methods-mine-count": 107,
        "code-snippets-file": "snippets/ls/00156.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:83",
                        "method-b-site": "FormSetFactory.java:84",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "commenting out method-a does not prevent the test from passing"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable FormSet.language, and method-b is a pure setter to the field variable FormSet.country.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-00-48",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 67,
        "inspection-start-time": "2022-01-26-00-48",
        "project": "commons-validator",
        "spec-id": "00157",
        "method-a": "org.apache.commons.validator.FormSet.setLanguage(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.FormSet.setVariant(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 21,
        "test-methods-mine-count": 107,
        "code-snippets-file": "snippets/ls/00157.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:83",
                        "method-b-site": "FormSetFactory.java:85",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "commenting out method-a does not prevent the test from passing"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable FormSet.language, and method-b is a pure setter to the field variable FormSet.variant.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-00-50",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 68,
        "inspection-start-time": "2022-01-26-00-50",
        "project": "commons-validator",
        "spec-id": "00158",
        "method-a": "org.apache.commons.validator.FormSet.setVariant(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.FormSet.getCountry()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00158.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:85",
                        "method-b-site": "ValidatorResources.java:399",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate/snippet",
        "notes": "The test is weak because the outcome of the test does not change even if method-b returns null instead of its intended value. method-a is a pure setter for the field variable FormSet.variant (ONE_PURE_SETTER), and method-b is a 1-line naive getter of the field variable FormSet.country (ONE_STATELESS_METHOD). Since these field variables are unrelated, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-00-53",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 69,
        "inspection-start-time": "2022-01-26-00-53",
        "project": "commons-validator",
        "spec-id": "00159",
        "method-a": "org.apache.commons.validator.FormSet.setVariant(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.FormSet.getForm(Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 16,
        "test-methods-mine-count": 83,
        "code-snippets-file": "snippets/ls/00159.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:85",
                        "method-b-site": "ValidatorResources.java:489",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate/snippet",
        "notes": "The test is weak because the outcome of the test does not change even if method-b returns null instead of its intended value. method-a is a pure setter for the field variable FormSet.variant (ONE_PURE_SETTER), and method-b simply accesses the field variable FormSet.forms (ONE_STATELESS_METHOD). Since these field variables are unrelated, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-00-57",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 70,
        "inspection-start-time": "2022-01-26-00-57",
        "project": "commons-validator",
        "spec-id": "00160",
        "method-a": "org.apache.commons.validator.FormSet.setVariant(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.FormSet.getForms()Ljava/util/Map;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/ls/00160.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:85",
                        "method-b-site": "FormSet.java:150",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "FormSetFactory.java:85",
                        "method-b-site": "FormSet.java:149",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 2,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort/snippet",
        "notes": "The test is weak because the test still passes even when method-a is not called at all. The snippet shows that method-a is a pure setter to the field variable FormSet.country (ONE_PURE_SETTER), and method-b accesses the field FormSet.forms (and returns it as an unmodifiable map). Since these two field variables are not related, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-01-01",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 71,
        "inspection-start-time": "2022-01-26-11-15",
        "project": "commons-validator",
        "spec-id": "00161",
        "method-a": "org.apache.commons.validator.FormSet.setVariant(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.FormSet.getLanguage()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00161.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:85",
                        "method-b-site": "ValidatorResources.java:399",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate/snippet",
        "notes": "The test is weak because the outcome of the test does not change even if method-b returns null instead of its intended value. method-a is a pure setter for the field variable FormSet.variant (ONE_PURE_SETTER), and method-b is a 1-line naive getter of the field variable FormSet.language (ONE_STATELESS_METHOD). Since these field variables are unrelated, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-11-18",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 72,
        "inspection-start-time": "2022-01-26-11-18",
        "project": "commons-validator",
        "spec-id": "00162",
        "method-a": "org.apache.commons.validator.FormSet.setVariant(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.FormSet.getVariant()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00162.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:85",
                        "method-b-site": "ValidatorResources.java:399",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "true-spec",
        "is-oracle-weak": true,
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "ONE_PURE_SETTER/ONE_STATELESS_METHOD: method-a is a pure setter to the field variable FormSet.variant (and it is the only place in the class where FormSet.variant is set), and method-b is a 1-line naive getter for the same field variable. This is a pretty simple setter-getter relationship. The test is weak because the outcome of the test does not change even if method-b returns null instead of its intended value. UNINTERESTING_SPEC",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-26-11-20",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 73,
        "inspection-start-time": "2022-01-26-12-06",
        "project": "commons-validator",
        "spec-id": "00165",
        "method-a": "org.apache.commons.validator.NameBean.setFirstName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.NameBean.setLastName(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 20,
        "code-snippets-file": "snippets/ls/00165.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorResultsTest#testAllValid",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResultsTest.java:137",
                        "method-b-site": "ValidatorResultsTest.java:139",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorResultsTest#testAllValid",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable NameBean.firstName, and method-b is a pure setter to the field variable NameBean.lastName.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-10",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 74,
        "inspection-start-time": "2022-01-26-12-11",
        "project": "commons-validator",
        "spec-id": "00166",
        "method-a": "org.apache.commons.validator.NameBean.setFirstName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.NameBean.setMiddleName(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/ls/00166.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorResultsTest#testAllValid",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResultsTest.java:137",
                        "method-b-site": "ValidatorResultsTest.java:138",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorResultsTest#testAllValid",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable NameBean.firstName, and method-b is a pure setter to the field variable NameBean.middleName.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-12",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 75,
        "inspection-start-time": "2022-01-26-12-12",
        "project": "commons-validator",
        "spec-id": "00167",
        "method-a": "org.apache.commons.validator.NameBean.setMiddleName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.NameBean.setLastName(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/ls/00167.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorResultsTest#testAllValid",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResultsTest.java:138",
                        "method-b-site": "ValidatorResultsTest.java:139",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorResultsTest#testAllValid",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable NameBean.middleName, and method-b is a pure setter to the field variable NameBean.lastName.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-13",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 76,
        "inspection-start-time": "2022-01-26-12-13",
        "project": "commons-validator",
        "spec-id": "00168",
        "method-a": "org.apache.commons.validator.TypeBean.setByte(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setDate(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/ls/00168.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:136",
                        "method-b-site": "GenericTypeValidatorTest.java:142",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sByte, and method-b is a pure setter to the field variable TypeBean.sDate.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-17",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 77,
        "inspection-start-time": "2022-01-26-12-17",
        "project": "commons-validator",
        "spec-id": "00169",
        "method-a": "org.apache.commons.validator.TypeBean.setByte(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setDouble(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/ls/00169.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:136",
                        "method-b-site": "GenericTypeValidatorTest.java:141",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sByte, and method-b is a pure setter to the field variable TypeBean.sDouble.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-19",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 78,
        "inspection-start-time": "2022-01-26-12-19",
        "project": "commons-validator",
        "spec-id": "00170",
        "method-a": "org.apache.commons.validator.TypeBean.setByte(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setFloat(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/ls/00170.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:136",
                        "method-b-site": "GenericTypeValidatorTest.java:140",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sByte, and method-b is a pure setter to the field variable TypeBean.sFloat.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-20",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 79,
        "inspection-start-time": "2022-01-26-12-20",
        "project": "commons-validator",
        "spec-id": "00171",
        "method-a": "org.apache.commons.validator.TypeBean.setByte(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setInteger(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/ls/00171.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:136",
                        "method-b-site": "GenericTypeValidatorTest.java:138",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sByte, and method-b is a pure setter to the field variable TypeBean.sInteger.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-21",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 80,
        "inspection-start-time": "2022-01-26-12-21",
        "project": "commons-validator",
        "spec-id": "00172",
        "method-a": "org.apache.commons.validator.TypeBean.setByte(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setLong(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/ls/00172.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:136",
                        "method-b-site": "GenericTypeValidatorTest.java:139",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sByte, and method-b is a pure setter to the field variable TypeBean.sLong.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-22",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 81,
        "inspection-start-time": "2022-01-26-12-22",
        "project": "commons-validator",
        "spec-id": "00173",
        "method-a": "org.apache.commons.validator.TypeBean.setByte(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setShort(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/ls/00173.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:136",
                        "method-b-site": "GenericTypeValidatorTest.java:137",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sByte, and method-b is a pure setter to the field variable TypeBean.sShort.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-23",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 82,
        "inspection-start-time": "2022-01-26-12-23",
        "project": "commons-validator",
        "spec-id": "00174",
        "method-a": "org.apache.commons.validator.TypeBean.setDouble(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setDate(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/ls/00174.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:141",
                        "method-b-site": "GenericTypeValidatorTest.java:142",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sDouble, and method-b is a pure setter to the field variable TypeBean.sDate.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-25",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 83,
        "inspection-start-time": "2022-01-26-12-25",
        "project": "commons-validator",
        "spec-id": "00175",
        "method-a": "org.apache.commons.validator.TypeBean.setFloat(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setDate(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/ls/00175.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:140",
                        "method-b-site": "GenericTypeValidatorTest.java:142",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sFloat, and method-b is a pure setter to the field variable TypeBean.sDate.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-26",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 84,
        "inspection-start-time": "2022-01-26-12-26",
        "project": "commons-validator",
        "spec-id": "00176",
        "method-a": "org.apache.commons.validator.TypeBean.setFloat(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setDouble(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/ls/00176.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:140",
                        "method-b-site": "GenericTypeValidatorTest.java:141",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sFloat, and method-b is a pure setter to the field variable TypeBean.sDouble.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-28",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 85,
        "inspection-start-time": "2022-01-26-12-28",
        "project": "commons-validator",
        "spec-id": "00177",
        "method-a": "org.apache.commons.validator.TypeBean.setInteger(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setDate(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/ls/00177.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:138",
                        "method-b-site": "GenericTypeValidatorTest.java:142",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sInteger, and method-b is a pure setter to the field variable TypeBean.sDate.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-29",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 86,
        "inspection-start-time": "2022-01-26-12-29",
        "project": "commons-validator",
        "spec-id": "00178",
        "method-a": "org.apache.commons.validator.TypeBean.setInteger(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setDouble(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/ls/00178.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:138",
                        "method-b-site": "GenericTypeValidatorTest.java:141",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sInteger, and method-b is a pure setter to the field variable TypeBean.sDouble.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-30",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 87,
        "inspection-start-time": "2022-01-26-12-30",
        "project": "commons-validator",
        "spec-id": "00179",
        "method-a": "org.apache.commons.validator.TypeBean.setInteger(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setFloat(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/ls/00179.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:138",
                        "method-b-site": "GenericTypeValidatorTest.java:140",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sInteger, and method-b is a pure setter to the field variabe TypeBean.sFloat.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-32",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 88,
        "inspection-start-time": "2022-01-26-12-32",
        "project": "commons-validator",
        "spec-id": "00180",
        "method-a": "org.apache.commons.validator.TypeBean.setInteger(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setLong(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/ls/00180.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:138",
                        "method-b-site": "GenericTypeValidatorTest.java:139",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sInteger, and method-b is a pure setter to the field variable TypeBean.sLong.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-33",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 89,
        "inspection-start-time": "2022-01-26-12-34",
        "project": "commons-validator",
        "spec-id": "00181",
        "method-a": "org.apache.commons.validator.TypeBean.setLong(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setDate(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/ls/00181.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:139",
                        "method-b-site": "GenericTypeValidatorTest.java:142",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sLong, and method-b is a pure setter to the field variable TypeBean.sDate.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-35",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 90,
        "inspection-start-time": "2022-01-26-12-35",
        "project": "commons-validator",
        "spec-id": "00182",
        "method-a": "org.apache.commons.validator.TypeBean.setLong(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setDouble(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/ls/00182.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:139",
                        "method-b-site": "GenericTypeValidatorTest.java:141",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sLong, and method-b is a pure setter to the field variable TypeBean.sDouble.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-36",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 91,
        "inspection-start-time": "2022-01-26-12-36",
        "project": "commons-validator",
        "spec-id": "00183",
        "method-a": "org.apache.commons.validator.TypeBean.setLong(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setFloat(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/ls/00183.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:139",
                        "method-b-site": "GenericTypeValidatorTest.java:140",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sLong, and method-b is a pure setter to the field variable TypeBean.sFloat.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-38",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 92,
        "inspection-start-time": "2022-01-26-12-38",
        "project": "commons-validator",
        "spec-id": "00184",
        "method-a": "org.apache.commons.validator.TypeBean.setShort(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setDate(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/ls/00184.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:137",
                        "method-b-site": "GenericTypeValidatorTest.java:142",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sShort, and method-b is a pure setter to the field variable TypeBean.sDate.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-39",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 93,
        "inspection-start-time": "2022-01-26-12-39",
        "project": "commons-validator",
        "spec-id": "00185",
        "method-a": "org.apache.commons.validator.TypeBean.setShort(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setDouble(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/ls/00185.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:137",
                        "method-b-site": "GenericTypeValidatorTest.java:141",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sShort, and method-b is a pure setter to the field variable TypeBean.sDouble.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-40",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 94,
        "inspection-start-time": "2022-01-26-12-40",
        "project": "commons-validator",
        "spec-id": "00186",
        "method-a": "org.apache.commons.validator.TypeBean.setShort(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setFloat(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/ls/00186.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:137",
                        "method-b-site": "GenericTypeValidatorTest.java:140",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sShort, and method-b is a pure setter to the field variable TypeBean.sFloat.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-41",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 95,
        "inspection-start-time": "2022-01-26-12-41",
        "project": "commons-validator",
        "spec-id": "00187",
        "method-a": "org.apache.commons.validator.TypeBean.setShort(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setInteger(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/ls/00187.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:137",
                        "method-b-site": "GenericTypeValidatorTest.java:138",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sShort, and method-b is a pure setter to the field variable TypeBean.sInteger.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-43",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 96,
        "inspection-start-time": "2022-01-26-12-43",
        "project": "commons-validator",
        "spec-id": "00188",
        "method-a": "org.apache.commons.validator.TypeBean.setShort(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.TypeBean.setLong(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/ls/00188.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "GenericTypeValidatorTest.java:137",
                        "method-b-site": "GenericTypeValidatorTest.java:139",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.GenericTypeValidatorTest#testFRLocale",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable TypeBean.sShort, and method-b is a pure setter to the field variable TypeBean.sLong.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-12-44",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 97,
        "inspection-start-time": "2022-01-26-18-25",
        "project": "commons-validator",
        "spec-id": "00205",
        "method-a": "org.apache.commons.validator.Validator.getClassLoader()Ljava/lang/ClassLoader;",
        "method-b": "org.apache.commons.validator.Validator.setOnlyReturnErrors(Z)V",
        "method-a-return-type": "java.lang.ClassLoader",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00205.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyReturnErrors",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:758",
                        "method-b-site": "ValidatorTest.java:115",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at ValidatorAction.java:626, but got swallowed by the catch clause in ValidatorAction.java:578.",
                "notes": "The test passes because it simply checks for ValidatorResults.hResults, which is populated regardless of which method-a is successful or not."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyReturnErrors",
        "notes": "method-a accesses the field variables Validator.classLoader and Validator.userContextClassLoader. method-b is a pure setter to the field variable Validator.onlyReturnErrors (ONE_STATELESS_METHOD). Since these field variables are not directly related to each other, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-18-37",
        "inspection-time-in-minutes": 12
    },
    {
        "iid": 98,
        "inspection-start-time": "2022-01-26-19-13",
        "project": "commons-validator",
        "spec-id": "00207",
        "method-a": "org.apache.commons.validator.Validator.getParameterValue(Ljava/lang/String;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.Validator.getOnlyReturnErrors()Z",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 34,
        "code-snippets-file": "snippets/ls/00207.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Validator.java:352",
                        "method-b-site": "ValidatorAction.java:767",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DSI most likely replaced with null. This had no effect because DateTest-config.xml only contained a single formSet (with no specification of locale info), so the overwriting that happened in Validator.java:355 would lead to the same Form object.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "UNRELATED_STATELESS_METHODS - method-a retrieves an object from the Map field variable Validator.parameters, and method-b is a 1-line naive getter to the field variable Validator.onlyReturnErrors.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-26-19-18",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 99,
        "inspection-start-time": "2022-01-27-13-58",
        "project": "commons-validator",
        "spec-id": "00220",
        "method-a": "org.apache.commons.validator.ValidatorAction.formatJavascriptFileName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getClassLoader(Ljava/util/Map;)Ljava/lang/ClassLoader;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.ClassLoader",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00220.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:387",
                        "method-b-site": "ValidatorAction.java:534",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with ValidatorAction.jsFunction (REPLACEMENT_VALUE_UNCLEAR just in case). Either way, the original value of method-a and the replacement value of method-a both achieve the same effect in this test because ValidatorAction.javascript, the field variable that gets impacted by the return value of method-a, gets assigned null. Refer to snippet for more details.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it does not check for the value of ValidatorAction.javascript, a field variable that is impacted by the return value of method-a. However, since method-a simply creates a new string and returns it using the field variable ValidatorAction.jsFunction, and method-b retrieves a ClassLoader object, we can conclude that these methods by themselves are not related.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-14-10",
        "inspection-time-in-minutes": 12
    },
    {
        "iid": 100,
        "inspection-start-time": "2022-01-27-14-16",
        "project": "commons-validator",
        "spec-id": "00221",
        "method-a": "org.apache.commons.validator.ValidatorAction.formatJavascriptFileName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.util.List",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/ls/00221.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:387",
                        "method-b-site": "Field.java:847",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with ValidatorAction.jsFunction (REPLACEMENT_VALUE_UNCLEAR just in case). Either way, the original value of method-a and the replacement value of method-a both achieve the same effect in this test because ValidatorAction.javascript, the field variable that gets impacted by the return value of method-a, gets assigned null. Refer to snippet for more details.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it does not check for the value of ValidatorAction.javascript, a field variable that is impacted by the return value of method-a. However, since method-a simply creates a new string using the field variable ValidatorAction.jsFunction (it can throw a NullPointerException in the case that ValidatorAction.jsFunction was null) and returns it, and method-b simply retrieves the field variable ValidatorAction.dependencyList as an unmodifiable list, we can conclude that these methods by themselves are not related..",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-14-23",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 101,
        "inspection-start-time": "2022-01-27-14-23",
        "project": "commons-validator",
        "spec-id": "00222",
        "method-a": "org.apache.commons.validator.ValidatorAction.formatJavascriptFileName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 100,
        "code-snippets-file": "snippets/ls/00222.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:387",
                        "method-b-site": "ValidatorResources.java:367",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with ValidatorAction.jsFunction (REPLACEMENT_VALUE_UNCLEAR just in case). Either way, the original value of method-a and the replacement value of method-a both achieve the same effect in this test because ValidatorAction.javascript, the field variable that gets impacted by the return value of method-a, gets assigned null. Refer to snippet for more details.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it does not check for the value of ValidatorAction.javascript, a field variable that is impacted by the return value of method-a. However, since method-a creates a new string using the field variable ValidatorAction.jsFunction and returns it (method-a can throw a NullPointerException if ValidatorAction.jsFunction is null), and method-b is a 1-line naive getter for the field variable ValidatorAction.name (ONE_STATELESS_METHOD), we can conclude that these methods by themselves are not related..",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-14-26",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 102,
        "inspection-start-time": "2022-01-27-14-26",
        "project": "commons-validator",
        "spec-id": "00223",
        "method-a": "org.apache.commons.validator.ValidatorAction.formatJavascriptFileName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getParameterValues(Ljava/util/Map;)[Ljava/lang/Object;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.Object[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/ls/00223.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:387",
                        "method-b-site": "ValidatorAction.java:541",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with ValidatorAction.jsFunction (REPLACEMENT_VALUE_UNCLEAR just in case). Either way, the original value of method-a and the replacement value of method-a both achieve the same effect in this test because ValidatorAction.javascript, the field variable that gets impacted by the return value of method-a, gets assigned null. Refer to snippet for more details.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it does not check for the value of ValidatorAction.javascript, a field variable that is impacted by the return value of method-a. However, since method-a creates a new string using the field variable ValidatorAction.jsFunction and returns it (method-a can throw a NullPointerException if ValidatorAction.jsFunction is null), and method-b returns a list filled with values from ValidatorAction.methodParameterList, we can conclude that these methods by themselves are not related - UNRELATED_STATEFUL_METHODS. (Note that method-a could potentially throw a NullPointerException if ValidatorAction.jsFunction was null).",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-14-30",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 103,
        "inspection-start-time": "2022-01-27-14-30",
        "project": "commons-validator",
        "spec-id": "00224",
        "method-a": "org.apache.commons.validator.ValidatorAction.formatJavascriptFileName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getValidationClassInstance()Ljava/lang/Object;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/ls/00224.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:387",
                        "method-b-site": "ValidatorAction.java:541",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with ValidatorAction.jsFunction (REPLACEMENT_VALUE_UNCLEAR just in case). Either way, the original value of method-a and the replacement value of method-a both achieve the same effect in this test because ValidatorAction.javascript, the field variable that gets impacted by the return value of method-a, gets assigned null. Refer to snippet for more details.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it does not check for the value of ValidatorAction.javascript, a field variable that is impacted by the return value of method-a. method-a creates a new string using the field variable ValidatorAction.jsFunction and returns it (method-a can throw a NullPointerException if ValidatorAction.jsFunction is null). method-b uses the field variables ValidatorAction.validationMethod, ValidatorAction.instance, and ValidatorAction.validationClass to return an Object instance of the class needed to validate. From these definitions, it seems that this is a case of UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-14-36",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 104,
        "inspection-start-time": "2022-01-27-14-37",
        "project": "commons-validator",
        "spec-id": "00225",
        "method-a": "org.apache.commons.validator.ValidatorAction.formatJavascriptFileName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 9,
        "code-snippets-file": "snippets/ls/00225.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:387",
                        "method-b-site": "ValidatorAction.java:567",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with ValidatorAction.jsFunction (REPLACEMENT_VALUE_UNCLEAR just in case). Either way, the original value of method-a and the replacement value of method-a both achieve the same effect in this test because ValidatorAction.javascript, the field variable that gets impacted by the return value of method-a, gets assigned null. Refer to snippet for more details.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it does not check for the value of ValidatorAction.javascript, a field variable that is impacted by the return value of method-a. method-a creates a new string using the field variable ValidatorAction.jsFunction and returns it (method-a can throw a NullPointerException if ValidatorAction.jsFunction is null). method-b performs a check on the input Object, either that it is a Boolean object or a non-null value. Given these definitions, this seems like a case of UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-14-42",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 105,
        "inspection-start-time": "2022-01-27-15-49",
        "project": "commons-validator",
        "spec-id": "00226",
        "method-a": "org.apache.commons.validator.ValidatorAction.formatJavascriptFileName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadParameterClasses(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00226.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:387",
                        "method-b-site": "ValidatorAction.java:536",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with ValidatorAction.jsFunction (REPLACEMENT_VALUE_UNCLEAR just in case). Either way, the original value of method-a and the replacement value of method-a both achieve the same effect in this test because ValidatorAction.javascript, the field variable that gets impacted by the return value of method-a, gets assigned null. Refer to snippet for more details.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it does not check for the value of ValidatorAction.javascript, a field variable that is impacted by the return value of method-a. method-a creates a new string using the field variable ValidatorAction.jsFunction and returns it (method-a can throw a NullPointerException if ValidatorAction.jsFunction is null). method-b accesses the field variables ValidatorAction.parameterClasses and ValidatorAction.methodParameterList, and sets ValidatorAction.parameterClasses if it is not set before that point. Given these definitions, it seems reasonable to conclude that this is a case of UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-15-52",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 106,
        "inspection-start-time": "2022-01-27-15-52",
        "project": "commons-validator",
        "spec-id": "00227",
        "method-a": "org.apache.commons.validator.ValidatorAction.formatJavascriptFileName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationClass(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00227.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:387",
                        "method-b-site": "ValidatorAction.java:536",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with ValidatorAction.jsFunction (REPLACEMENT_VALUE_UNCLEAR just in case). Either way, the original value of method-a and the replacement value of method-a both achieve the same effect in this test because ValidatorAction.javascript, the field variable that gets impacted by the return value of method-a, gets assigned null. Refer to snippet for more details.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it does not check for the value of ValidatorAction.javascript, a field variable that is impacted by the return value of method-a. method-a creates a new string using the field variable ValidatorAction.jsFunction and returns it (method-a can throw a NullPointerException if ValidatorAction.jsFunction is null). method-b accesses the field variables ValidatorAction.validationClass and ValidatorAction.classname, and either sets ValidatorAction.validationClass (given that it's not set already), or throws an exception. Given these definitions, this seems like a UNRELATED_STATEFUL_METHODS case.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-15-55",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 107,
        "inspection-start-time": "2022-01-27-16-04",
        "project": "commons-validator",
        "spec-id": "00228",
        "method-a": "org.apache.commons.validator.ValidatorAction.formatJavascriptFileName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationMethod()V",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00228.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:387",
                        "method-b-site": "ValidatorAction.java:537",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with ValidatorAction.jsFunction (REPLACEMENT_VALUE_UNCLEAR just in case). Either way, the original value of method-a and the replacement value of method-a both achieve the same effect in this test because ValidatorAction.javascript, the field variable that gets impacted by the return value of method-a, gets assigned null. Refer to snippet for more details.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it does not check for the value of ValidatorAction.javascript, a field variable that is impacted by the return value of method-a. method-a creates a new string using the field variable ValidatorAction.jsFunction and returns it (method-a can throw a NullPointerException if ValidatorAction.jsFunction is null). method-b accesses the field variables ValidatorAction.validationMethod, ValidatorAction.validationClass, ValidatorAction.method, and ValidatorAction.parameterClasses, and either sets the field variable ValidatorAction.validationMethod (given that it is not yet set), or throws an exception. Given these definitions, it seems reasonable to call this a UNRELATED_STATEFUL_METHODS case.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-16-06",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 108,
        "inspection-start-time": "2022-01-27-16-06",
        "project": "commons-validator",
        "spec-id": "00229",
        "method-a": "org.apache.commons.validator.ValidatorAction.formatJavascriptFileName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.onlyReturnErrors(Ljava/util/Map;)Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 14,
        "code-snippets-file": "snippets/ls/00229.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:387",
                        "method-b-site": "ValidatorAction.java:568",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with ValidatorAction.jsFunction (REPLACEMENT_VALUE_UNCLEAR just in case). Either way, the original value of method-a and the replacement value of method-a both achieve the same effect in this test because ValidatorAction.javascript, the field variable that gets impacted by the return value of method-a, gets assigned null. Refer to snippet for more details.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it does not check for the value of ValidatorAction.javascript, a field variable that is impacted by the return value of method-a. method-a creates a new string using the field variable ValidatorAction.jsFunction and returns it (method-a can throw a NullPointerException if ValidatorAction.jsFunction is null). method-b retrieves a field variable from a Validator object using its argument (and does not access or modify ValidatorAction.javascript), this is most likely a spurious spec. Given this, it seems safe to conclude that this is an UNRELATED_STATEFUL_METHODS case.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-16-12",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 109,
        "inspection-start-time": "2022-01-27-16-14",
        "project": "commons-validator",
        "spec-id": "00230",
        "method-a": "org.apache.commons.validator.ValidatorAction.formatJavascriptFileName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.readJavascriptFile(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 22,
        "test-methods-mine-count": 111,
        "code-snippets-file": "snippets/ls/00230.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:387",
                        "method-b-site": "ValidatorAction.java:393",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with ValidatorAction.jsFunction (REPLACEMENT_VALUE_UNCLEAR just in case). The return value of method-a gets passed to method-b, but method-b happens to return null for the particular test, regardless of whether the true return value of method-a was passed in, or DSI's replacement was passed into method-b. (the file specified by the actual return value of method-a does not exist)",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "precondition",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because the value passed into method-b does not change the outcome of the test. In the use case in the test, the return value of method-a is passed into method-b as an argument. method-b would return null if the argument does not lead to an existing javascript file. While method-a is used to format the input string to be in a suitable format for method-b, one does not need to necessarily call method-a (especially if they already have a suitable string). Ultimately, this is technically a CONNECTION_DOES_NOT_NECESSITATE_ORDERING case, given that the only connection is that the return value of method-a is passed to method-b. Even so, method-b simply takes in a String. Note that both methods are private and their only usages are in ValidatorAction.loadJavascriptFunction(), so a client of commons-validator cannot call method-a and method-b on their own.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-27-16-31",
        "inspection-time-in-minutes": 17
    },
    {
        "iid": 110,
        "inspection-start-time": "2022-01-27-15-36",
        "project": "commons-validator",
        "spec-id": "00273",
        "method-a": "org.apache.commons.validator.ValidatorAction.getValidationClassInstance()Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 9,
        "test-methods-mine-count": 56,
        "code-snippets-file": "snippets/ls/00273.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:551",
                        "method-b-site": "ValidatorAction.java:567",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION. method-a when called from the test normally returns null (because the validation method is static), and DSI replaced the return value of method-a with the default value null.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The use case via the test is such that method-a returns an instance of the class that the validation method should be run on, reflection is used to run the validation method using the return value of method-a, and method-b takes the result of that reflection to evaluate whether the validation passed or not. In the general sense however, there's no direct relationship between method-a and method-b, since method-b simply performs a check and retrieves a value from its argument, and it doesn't seem like the return value of method-a ought to be passed to method-b either. So, I'm leaning towards this being a spurious spec (UNRELATED_STATEFUL_METHODS).",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-15-58",
        "inspection-time-in-minutes": 22
    },
    {
        "iid": 111,
        "inspection-start-time": "2022-01-28-15-58",
        "project": "commons-validator",
        "spec-id": "00274",
        "method-a": "org.apache.commons.validator.ValidatorAction.getValidationClassInstance()Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.ValidatorAction.onlyReturnErrors(Ljava/util/Map;)Z",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 30,
        "code-snippets-file": "snippets/ls/00274.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:551",
                        "method-b-site": "ValidatorAction.java:568",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION. method-a when called from the test normally returns null (because the validation method is static), and DSI replaced the return value of method-a with the default value null.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The use case via the test is such that method-a returns an instance of the class that the validation method should be run on, reflection is used to run the validation method using the return value of method-a, and method-b takes the result of that reflection to evaluate whether the validation passed or not. In the general sense however, there's no direct relationship between method-a and method-b, since method-b simply retrieves a value from its argument, and it doesn't seem like the return value of method-a ought to be passed to method-b either. So, I'm leaning towards this being a spurious spec (UNRELATED_STATEFUL_METHODS).",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-16-01",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 112,
        "inspection-start-time": "2022-01-28-19-34",
        "project": "commons-validator",
        "spec-id": "00278",
        "method-a": "org.apache.commons.validator.ValidatorAction.init()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getClassLoader(Ljava/util/Map;)Ljava/lang/ClassLoader;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.ClassLoader",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00278.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:365",
                        "method-b-site": "ValidatorAction.java:534",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it passes even when method-a is simply not called at all. However, upon inspection, it is clear that the two methods are not related, because while method-a sets the field variables ValidatorAction.jsFunction and ValidatorAction.javascript, method-b simply retrieves some data from the argument Map object (which is not related to any field variables in the class). So, this seems like a case of UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-19-40",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 113,
        "inspection-start-time": "2022-01-28-19-40",
        "project": "commons-validator",
        "spec-id": "00279",
        "method-a": "org.apache.commons.validator.ValidatorAction.init()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.List",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/ls/00279.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:365",
                        "method-b-site": "Field.java:847",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it passes even when method-a is simply not called at all. However, upon inspection, it is clear that the two methods are not related, because while method-a sets the field variables ValidatorAction.jsFunction and ValidatorAction.javascript, method-b simply retrieves an unmodifiable list version of the field variable ValidatorAction.dependencyList. So, this seems like a case of UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-19-42",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 114,
        "inspection-start-time": "2022-01-28-19-43",
        "project": "commons-validator",
        "spec-id": "00280",
        "method-a": "org.apache.commons.validator.ValidatorAction.init()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 100,
        "code-snippets-file": "snippets/ls/00280.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:365",
                        "method-b-site": "ValidatorResources.java:367",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it passes even when method-a is simply not called at all. However, upon inspection, it is clear that the two methods are not related, because while method-a sets the field variables ValidatorAction.jsFunction and ValidatorAction.javascript, method-b is a 1-line naive getter for the field variable ValidatorAction.name (ONE_STATELESS_METHOD).",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-19-45",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 115,
        "inspection-start-time": "2022-01-28-19-45",
        "project": "commons-validator",
        "spec-id": "00281",
        "method-a": "org.apache.commons.validator.ValidatorAction.init()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getParameterValues(Ljava/util/Map;)[Ljava/lang/Object;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.Object[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/ls/00281.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:365",
                        "method-b-site": "ValidatorAction.java:541",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it passes even when method-a is simply not called at all. However, upon inspection, it is clear that the two methods are not related, because while method-a sets field variables ValidatorAction.jsFunction and ValidatorAction.javascript, method-b accesses the field variable ValidatorAction.methodParameterList to return an Object list of parameter values, and the field variables set by method-a are not related to the field variables used by method-b. UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-19-48",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 116,
        "inspection-start-time": "2022-01-28-19-48",
        "project": "commons-validator",
        "spec-id": "00282",
        "method-a": "org.apache.commons.validator.ValidatorAction.init()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getValidationClassInstance()Ljava/lang/Object;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/ls/00282.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:365",
                        "method-b-site": "ValidatorAction.java:551",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it passes even when method-a is simply not called at all. However, upon inspection, it is clear that the two methods are not related, because while method-a sets field variables ValidatorAction.jsFunction and ValidatorAction.javascript, method-b accesses the field variables ValidatorAction.validationClass and ValidatorAction.validationMethod and set the field variable ValidatorAction.instance, and the field variables set by method-a are not related to the field variables set/used by method-b. UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-19-50",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 117,
        "inspection-start-time": "2022-01-28-19-50",
        "project": "commons-validator",
        "spec-id": "00283",
        "method-a": "org.apache.commons.validator.ValidatorAction.init()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 9,
        "code-snippets-file": "snippets/ls/00283.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:365",
                        "method-b-site": "ValidatorAction.java:567",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it passes even when method-a is simply not called at all. However, upon inspection, it is clear that the two methods are not related, because while method-a sets field variables ValidatorAction.jsFunction and ValidatorAction.javascript, method-b checks whether its argument was either a boolean value, or whether it is non-null, and the field variables set by method-a are not related to the argument of method-b. UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-19-52",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 118,
        "inspection-start-time": "2022-01-28-19-55",
        "project": "commons-validator",
        "spec-id": "00286",
        "method-a": "org.apache.commons.validator.ValidatorAction.init()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadParameterClasses(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00286.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:365",
                        "method-b-site": "ValidatorAction.java:536",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it passes even when method-a is simply not called at all. However, upon inspection, it is clear that the two methods are not related, because while method-a sets field variables ValidatorAction.jsFunction and ValidatorAction.javascript, method-b accesses the field variables ValidatorAction.parameterClasses and ValidatorAction.methodParameterList, and modifies the field variable ValidatorAction.parameterClasses. The field variables set by method-a are not related to the field variables accessed/modified by method-b. UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-19-59",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 119,
        "inspection-start-time": "2022-01-28-19-59",
        "project": "commons-validator",
        "spec-id": "00287",
        "method-a": "org.apache.commons.validator.ValidatorAction.init()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationClass(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00287.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:365",
                        "method-b-site": "ValidatorAction.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it passes even when method-a is simply not called at all. However, upon inspection, it is clear that the two methods are not related, because while method-a sets field variables ValidatorAction.jsFunction and ValidatorAction.javascript, method-b accesses and modifies the field variable ValidatorAction.validationClass. The field variables set by method-a are not related to the field variables accessed/modified by method-b. UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-20-04",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 120,
        "inspection-start-time": "2022-01-28-20-04",
        "project": "commons-validator",
        "spec-id": "00288",
        "method-a": "org.apache.commons.validator.ValidatorAction.init()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationMethod()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00288.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:365",
                        "method-b-site": "ValidatorAction.java:537",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it passes even when method-a is simply not called at all. However, upon inspection, it is clear that the two methods are not related, because while method-a sets field variables ValidatorAction.jsFunction and ValidatorAction.javascript, method-b accesses the field variables ValidatorAction.validationMethod and ValidatorAction.validationClass, and modifies the field variable ValidatorAction.validationMethod. The field variables set by method-a are not related to the field variables accessed/modified by method-b. UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-20-06",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 121,
        "inspection-start-time": "2022-01-28-20-06",
        "project": "commons-validator",
        "spec-id": "00289",
        "method-a": "org.apache.commons.validator.ValidatorAction.init()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.onlyReturnErrors(Ljava/util/Map;)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 14,
        "code-snippets-file": "snippets/ls/00289.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:365",
                        "method-b-site": "ValidatorAction.java:568",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The test is weak because it passes even when method-a is simply not called at all. However, upon inspection, it is clear that the two methods are not related, because while method-a sets field variables ValidatorAction.jsFunction and ValidatorAction.javascript, method-b retrieves some data from its argument Map object, and doesn't access/modify any field variables from ValidatorAction (its parameters are not from ValidatorAction). UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-20-09",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 122,
        "inspection-start-time": "2022-01-28-20-27",
        "project": "commons-validator",
        "spec-id": "00293",
        "method-a": "org.apache.commons.validator.ValidatorAction.javascriptAlreadyLoaded()Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.formatJavascriptFileName()Ljava/lang/String;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 22,
        "test-methods-mine-count": 111,
        "code-snippets-file": "snippets/ls/00293.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:375",
                        "method-b-site": "ValidatorAction.java:387",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION. method-a should return false, and DSI replaced the return value of method-a with the default value false.",
                "notes": "No test relies on method-a returning true"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The use case in the test was that the return value of method-a would serve as a guard to prevent computing the value to the field variable ValidatorAction.javascript if the field variable is already set. method-b accesses the field variable ValidatorAction.jsFunction, and its return variable is passed into ValidatorAction.readJavascriptFile(), which sets the value of ValidatorAction.javascript (if the return value of method-a didn't cause the method to return prematurely). In some sense, there is a relationship between method-a and method-b via the use case, but I think there's no direct relationship between method-a and method-b, given that they access different field variables. UNRELATED_STATEFUL_METHODS or CONNECTION_DOES_NOT_NECESSITATE_ORDERING?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-20-39",
        "inspection-time-in-minutes": 12
    },
    {
        "iid": 123,
        "inspection-start-time": "2022-01-28-20-39",
        "project": "commons-validator",
        "spec-id": "00294",
        "method-a": "org.apache.commons.validator.ValidatorAction.javascriptAlreadyLoaded()Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.generateJsFunction()Ljava/lang/String;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 22,
        "test-methods-mine-count": 111,
        "code-snippets-file": "snippets/ls/00294.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:375",
                        "method-b-site": "ValidatorAction.java:384",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION. method-a should return false, and DSI replaced the return value of method-a with the default value false.",
                "notes": "No test relies on method-a returning true"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The use case in the test was that the return value of method-a would serve as a guard to prevent computing the value to the field variable ValidatorAction.javascript if the field variable is already set. method-b by itself doesn't change the state of the ValidatorAction object, but its return value is used to set the field variable ValidatorAction.jsFunction, which is later used to modify the field variable ValidatorAction.javascript. In some sense, there is a relationship between method-a and method-b via the use case, but I think there's no direct relationship between method-a and method-b, given that method-b's return variable is used to set a different field variable. UNRELATED_STATEFUL_METHODS or CONNECTION_DOES_NOT_NECESSITATE_ORDERING?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-20-47",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 124,
        "inspection-start-time": "2022-01-28-20-47",
        "project": "commons-validator",
        "spec-id": "00295",
        "method-a": "org.apache.commons.validator.ValidatorAction.javascriptAlreadyLoaded()Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.getClassLoader(Ljava/util/Map;)Ljava/lang/ClassLoader;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.ClassLoader",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00295.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:375",
                        "method-b-site": "ValidatorAction.java:534",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION. method-a should return false, and DSI replaced the return value of method-a with the default value false.",
                "notes": "No test relies on method-a returning true"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a does a non-nullness check on the field variable ValidatorAction.javascript, and method-b retrieves a ClassLoader object using its argument without accessing any field variables. So, this seems like a UNRELATED_STATEFUL_METHODS case.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-20-51",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 125,
        "inspection-start-time": "2022-01-28-20-51",
        "project": "commons-validator",
        "spec-id": "00296",
        "method-a": "org.apache.commons.validator.ValidatorAction.javascriptAlreadyLoaded()Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.util.List",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/ls/00296.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:375",
                        "method-b-site": "Field.java:847",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION. method-a should return false, and DSI replaced the return value of method-a with the default value false.",
                "notes": "No test relies on method-a returning true"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a does a non-nullness check on the field variable ValidatorAction.javascript, and method-b simply retrieves an unmodifiable list version of the field variable ValidatorAction.dependencyList. UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-20-56",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 126,
        "inspection-start-time": "2022-01-28-20-56",
        "project": "commons-validator",
        "spec-id": "00297",
        "method-a": "org.apache.commons.validator.ValidatorAction.javascriptAlreadyLoaded()Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 100,
        "code-snippets-file": "snippets/ls/00297.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:375",
                        "method-b-site": "ValidatorResources.java:367",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION. method-a should return false, and DSI replaced the return value of method-a with the default value false.",
                "notes": "No test relies on method-a returning true"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a does a non-nullness check on the field variable ValidatorAction.javascript, and method-b simply retrieves the field variable ValidatorAction.name (ONE_STATELESS_METHOD).",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-20-59",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 127,
        "inspection-start-time": "2022-01-28-20-59",
        "project": "commons-validator",
        "spec-id": "00298",
        "method-a": "org.apache.commons.validator.ValidatorAction.javascriptAlreadyLoaded()Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.getParameterValues(Ljava/util/Map;)[Ljava/lang/Object;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.Object[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/ls/00298.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:375",
                        "method-b-site": "ValidatorAction.java:541",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION. method-a should return false, and DSI replaced the return value of method-a with the default value false.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a does a non-nullness check on the field variable ValidatorAction.javascript, and method-b creates and returns a new list containing the values contained in its argument Map, using the field variable ValidatorAction.methodParameterList. UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-21-03",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 128,
        "inspection-start-time": "2022-01-28-21-03",
        "project": "commons-validator",
        "spec-id": "00299",
        "method-a": "org.apache.commons.validator.ValidatorAction.javascriptAlreadyLoaded()Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.getValidationClassInstance()Ljava/lang/Object;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/ls/00299.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:375",
                        "method-b-site": "ValidatorAction.java:551",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION. method-a should return false, and DSI replaced the return value of method-a with the default value false.",
                "notes": "No test relies on method-a returning true"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a does a non-nullness check on the field variable ValidatorAction.javascript, and method-b accesses the field variables ValidatorAction.validationMethod and ValidatorAction.validationClass, and modifies the field variable ValidatorAction.instance. Since the field variable that method-a accesses does not seem related to those that method-b accesses/modifies, I think it's safe to call this a spurious spec. UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-21-08",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 129,
        "inspection-start-time": "2022-01-28-21-08",
        "project": "commons-validator",
        "spec-id": "00300",
        "method-a": "org.apache.commons.validator.ValidatorAction.javascriptAlreadyLoaded()Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 9,
        "code-snippets-file": "snippets/ls/00300.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:375",
                        "method-b-site": "ValidatorAction.java:567",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION. method-a should return false, and DSI replaced the return value of method-a with the default value false.",
                "notes": "No test relies on method-a returning true"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a returns a non-nullness check expression the field variable ValidatorAction.javascript, and method-b doesn't access any field variables - it returns the boolean value of the argument if the argument is a Boolean object, or whether the argument is not null if it is not a Boolean object.. ONE_STATELESS_METHOD",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-21-12",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 130,
        "inspection-start-time": "2022-01-28-21-35",
        "project": "commons-validator",
        "spec-id": "00301",
        "method-a": "org.apache.commons.validator.ValidatorAction.javascriptAlreadyLoaded()Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadParameterClasses(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "boolean",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00301.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:375",
                        "method-b-site": "ValidatorAction.java:536",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION. method-a should return false, and DSI replaced the return value of method-a with the default value false.",
                "notes": "No test relies on method-a returning true"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a does a non-nullness check on the field variable ValidatorAction.javascript, and method-b accesses the field variable ValidatorAction.methodParameterList and modifies the field variable ValidatorAction.parameterClasses. Since the field variable that method-a accesses does not seem related to those that method-b accesses/modifies, I think it's safe to call this a spurious spec. UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-21-37",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 131,
        "inspection-start-time": "2022-01-28-21-37",
        "project": "commons-validator",
        "spec-id": "00302",
        "method-a": "org.apache.commons.validator.ValidatorAction.javascriptAlreadyLoaded()Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationClass(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "boolean",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00302.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:375",
                        "method-b-site": "ValidatorAction.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION. method-a should return false, and DSI replaced the return value of method-a with the default value false.",
                "notes": "No test relies on method-a returning true"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a does a non-nullness check on the field variable ValidatorAction.javascript, and method-b accesses and modifies the field variable ValidatorAction.validationClass (or throws an exception). Since the field variable that method-a accesses does not seem related to those that method-b accesses/modifies, I think it's safe to call this a spurious spec. UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-21-39",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 132,
        "inspection-start-time": "2022-01-28-21-39",
        "project": "commons-validator",
        "spec-id": "00303",
        "method-a": "org.apache.commons.validator.ValidatorAction.javascriptAlreadyLoaded()Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationMethod()V",
        "method-a-return-type": "boolean",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00303.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:375",
                        "method-b-site": "ValidatorAction.java:537",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION. method-a should return false, and DSI replaced the return value of method-a with the default value false.",
                "notes": "No test relies on method-a returning true"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a does a non-nullness check on the field variable ValidatorAction.javascript, and method-b accesses the field variables ValidatorAction.validationClass and ValidatorAction.validationMethod, and modifies the field variable ValidatorAction.validationMethod (or throws an exception). Since the field variable that method-a accesses does not seem related to those that method-b accesses/modifies, I think it's safe to call this a spurious spec. UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-21-42",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 133,
        "inspection-start-time": "2022-01-28-21-42",
        "project": "commons-validator",
        "spec-id": "00304",
        "method-a": "org.apache.commons.validator.ValidatorAction.javascriptAlreadyLoaded()Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.onlyReturnErrors(Ljava/util/Map;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 14,
        "code-snippets-file": "snippets/ls/00304.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:375",
                        "method-b-site": "ValidatorAction.java:568",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION. method-a should return false, and DSI replaced the return value of method-a with the default value false.",
                "notes": "No test relies on method-a returning true"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a does a non-nullness check on the field variable ValidatorAction.javascript, and method-b retrieves a certain piece of data (the onlyReturnErrors setting) from a particular entry in the argument Map. From these definitions, this seems like a case of UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-21-46",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 134,
        "inspection-start-time": "2022-01-28-21-46",
        "project": "commons-validator",
        "spec-id": "00305",
        "method-a": "org.apache.commons.validator.ValidatorAction.javascriptAlreadyLoaded()Z",
        "method-b": "org.apache.commons.validator.ValidatorAction.readJavascriptFile(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 22,
        "test-methods-mine-count": 111,
        "code-snippets-file": "snippets/ls/00305.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:375",
                        "method-b-site": "ValidatorAction.java:393",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION. method-a should return false, and DSI replaced the return value of method-a with the default value false.",
                "notes": "No test relies on method-a returning true"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "The use case depicted in the test is that the method-a is used to assess whether further computation (including calling method-b) is necessary. Additionally, in the use case, the return value of method-b is set to the field variable ValidatorAction.javascript, which is the field variable that method-a checks (hence, the delayed call to method-a most likely returned true. Note that method-b does not directly change the state itself). The return value of method-b is set to the field variable ValidatorAction.javascript, which *can* establish a relationship between method-a and method-b, but in the general sense one can argue that the two methods are unrelated. Note that there does not exist a test in the test suite in which method-a returns true, and causing method-b to not be called (hence why all-tests mined this spec). It would be interesting to see a test case in which JavaScript plays a role and method-a returns true. Overall, this is a CONNECTION_DOES_NOT_NECESSITATE_ORDERING case, because method-a can be called at any time.",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-28-21-55",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 135,
        "inspection-start-time": "2022-01-28-22-18",
        "project": "commons-validator",
        "spec-id": "00309",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadJavascriptFunction()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getClassLoader(Ljava/util/Map;)Ljava/lang/ClassLoader;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.ClassLoader",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00309.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:359",
                        "method-b-site": "ValidatorAction.java:534",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "In its computation, method-a accesses and modifies the field variables ValidatorAction.jsFunction and ValidatorAction.javascript (if ValidatorAction.javascript was not set). method-b returns a ClassLoader object from an entry in its Map argument, which is not related to the field variables that method-a accessed/modified. So, I think it's safe to call this a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-22-26",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 136,
        "inspection-start-time": "2022-01-28-22-26",
        "project": "commons-validator",
        "spec-id": "00310",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadJavascriptFunction()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.List",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/ls/00310.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:359",
                        "method-b-site": "Field.java:847",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "In its computation, method-a accesses and modifies the field variables ValidatorAction.jsFunction and ValidatorAction.javascript (if ValidatorAction.javascript was not set). method-b returns an unmodifiable list version of the field variable ValidatorAction.dependencyList, which is not related to the field variables that method-a accessed/modified. So, I think it's safe to call this a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-22-29",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 137,
        "inspection-start-time": "2022-01-28-22-29",
        "project": "commons-validator",
        "spec-id": "00311",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadJavascriptFunction()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 100,
        "code-snippets-file": "snippets/ls/00311.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:359",
                        "method-b-site": "ValidatorResources.java:367",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "In its computation, method-a accesses and modifies the field variables ValidatorAction.jsFunction and ValidatorAction.javascript (if ValidatorAction.javascript was not set). method-b is a 1-line naive getter to the field variable ValidatorAction.name (ONE_STATELESS_METHOD), which is not related to the field variables that method-a accessed/modified. So, I think it's safe to call this a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-22-32",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 138,
        "inspection-start-time": "2022-01-28-22-32",
        "project": "commons-validator",
        "spec-id": "00312",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadJavascriptFunction()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getParameterValues(Ljava/util/Map;)[Ljava/lang/Object;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.Object[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/ls/00312.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:359",
                        "method-b-site": "ValidatorAction.java:541",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "In its computation, method-a accesses and modifies the field variables ValidatorAction.jsFunction and ValidatorAction.javascript (if ValidatorAction.javascript was not set). method-b returns an Object list containing the values of parameters using data from the field variable ValidatorAction.methodParameterList, which is not related to the field variables that method-a accessed/modified. So, I think it's safe to call this a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-22-36",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 139,
        "inspection-start-time": "2022-01-28-22-36",
        "project": "commons-validator",
        "spec-id": "00313",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadJavascriptFunction()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getValidationClassInstance()Ljava/lang/Object;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/ls/00313.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:359",
                        "method-b-site": "ValidatorAction.java:551",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "In its computation, method-a accesses and modifies the field variables ValidatorAction.jsFunction and ValidatorAction.javascript (if ValidatorAction.javascript was not set). method-b accesses the field variables ValidatorAction.validationMethod, ValidatorAction.validationClass, and modifies the field variable ValidatorAction.instance (or throws an exception), all of which are not related to the field variables that method-a accessed/modified. So, I think it's safe to call this a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-22-40",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 140,
        "inspection-start-time": "2022-01-28-22-40",
        "project": "commons-validator",
        "spec-id": "00314",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadJavascriptFunction()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 9,
        "code-snippets-file": "snippets/ls/00314.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:359",
                        "method-b-site": "ValidatorAction.java:567",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "In its computation, method-a accesses and modifies the field variables ValidatorAction.jsFunction and ValidatorAction.javascript (if ValidatorAction.javascript was not set). method-b either returns the boolean value of the argument if the argument is a Boolean object, returns whether the argument is not null otherwise, and doesn't access/modify any field variables; its argument is also not related to any of the field variables accessed/modified by method-a. So, I think it's safe to call this a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-22-42",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 141,
        "inspection-start-time": "2022-01-28-22-45",
        "project": "commons-validator",
        "spec-id": "00316",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadJavascriptFunction()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadParameterClasses(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00316.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:359",
                        "method-b-site": "ValidatorAction.java:536",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "In its computation, method-a accesses and modifies the field variables ValidatorAction.jsFunction and ValidatorAction.javascript (if ValidatorAction.javascript was not set). method-b accesses the field variables ValidatorAction.parameterClasses, ValidatorAction.methodParameterList, and modifies the field variable ValidatorAction.parameterClasses (or throws an exception), all of which are not related to the field variables that method-a accessed/modified. So, I think it's safe to call this a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-22-48",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 142,
        "inspection-start-time": "2022-01-28-22-48",
        "project": "commons-validator",
        "spec-id": "00317",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadJavascriptFunction()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationClass(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00317.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:359",
                        "method-b-site": "ValidatorAction.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "In its computation, method-a accesses and modifies the field variables ValidatorAction.jsFunction and ValidatorAction.javascript (if ValidatorAction.javascript was not set). method-b accesses and modifies the field variable ValidatorAction.validationClass (or throws an exception), all of which are not related to the field variables that method-a accessed/modified. So, I think it's safe to call this a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-22-51",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 143,
        "inspection-start-time": "2022-01-28-22-51",
        "project": "commons-validator",
        "spec-id": "00318",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadJavascriptFunction()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationMethod()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00318.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:359",
                        "method-b-site": "ValidatorAction.java:537",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "In its computation, method-a accesses and modifies the field variables ValidatorAction.jsFunction and ValidatorAction.javascript (if ValidatorAction.javascript was not set). method-b accesses the field variables ValidatorAction.validationMethod and ValidatorAction.validationClass, and modifies the field variable ValidatorAction.validationMethod (or throws an exception), all of which are not related to the field variables that method-a accessed/modified (UNRELATED_STATEFUL_METHODS). So, I think it's safe to call this a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-22-53",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 144,
        "inspection-start-time": "2022-01-28-22-53",
        "project": "commons-validator",
        "spec-id": "00319",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadJavascriptFunction()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.onlyReturnErrors(Ljava/util/Map;)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 14,
        "code-snippets-file": "snippets/ls/00319.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:359",
                        "method-b-site": "ValidatorAction.java:568",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "In its computation, method-a accesses and modifies the field variables ValidatorAction.jsFunction and ValidatorAction.javascript (if ValidatorAction.javascript was not set). method-b checks the onlyReturnErrors setting from a particular entry in its Map argument, and its argument is not related to the field variables that method-a accessed/modified. So, I think it's safe to call this a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-28-22-56",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 145,
        "inspection-start-time": "2022-01-29-00-46",
        "project": "commons-validator",
        "spec-id": "00329",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadValidationClass(Ljava/lang/ClassLoader;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadParameterClasses(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 100,
        "code-snippets-file": "snippets/ls/00329.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:535",
                        "method-b-site": "ValidatorAction.java:536",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a was needed in order to populate the field variable ValidatorAction.validationClass; otherwise the invocation in ValidatorAction.loadValidationMethod() would throw a NullPointerException. However, method-b was called before ValidatorAction.loadValidationMethod(), so the state was restored. Refer to snippet for more info."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a accesses and modifies the field variable ValidatorAction.loadValidationClass, and method-b accesses the field variables ValidatorAction.parameterClasses and ValidatorAction.methodParameterList, and modifies the field variable ValidatorAction.parameterClasses. Since these field variables are not related to each other, I think it is safe to conclude that this is a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-00-52",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 146,
        "inspection-start-time": "2022-01-29-02-48",
        "project": "commons-validator",
        "spec-id": "00332",
        "method-a": "org.apache.commons.validator.ValidatorAction.loadValidationMethod()V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getParameterValues(Ljava/util/Map;)[Ljava/lang/Object;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.Object[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 10,
        "test-methods-mine-count": 57,
        "code-snippets-file": "snippets/ls/00332.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:537",
                        "method-b-site": "ValidatorAction.java:541",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a definitely needs to be called by the point of the call to getValidationClassInstance() (because method-a sets the value of ValidatorAction.validationMethod), but method-b is called before that point, so the delayed call to method-a was able to restore the state. Refer to snippet for more info."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a accesses the field variables ValidatorAction.validationMethod, ValidatorAction.validationClass, ValidatorAction.method, ValidatorAction.parameterClasses, and sets the field variable ValidatorAction.validationMethod, and method-b accesses the field variables ValidatorAction.methodParameterList to construct a new Object list of parameter values that it returns. Since the value that method-a modifies is not accessed by method-b at all, this is a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-02-55",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 147,
        "inspection-start-time": "2022-01-29-03-23",
        "project": "commons-validator",
        "spec-id": "00337",
        "method-a": "org.apache.commons.validator.ValidatorAction.readJavascriptFile(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getClassLoader(Ljava/util/Map;)Ljava/lang/ClassLoader;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.ClassLoader",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00337.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:393",
                        "method-b-site": "ValidatorAction.java:534",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a on the test run without DSI experimentation returns null, and DSI most likely replaced the return value of method-a with the String value javascriptFileName, which is defined in ValidatorAction.java:387. The test is weak because it doesn't detect the \"incorrect\" replacement value.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField/snippet",
        "notes": "The test is weak because it does not detect the replaced, incorrect return value for method-a. In the use case of the test, the field variable ValidatorAction.javascript is set to be the return value of method-a (if ValidatorAction.javascript was not already set and also assuming that no exceptions have been thrown). method-b retrieves a ClassLoader object from a particular entry in its Map argument, which is not related to the field variables that method-a accessed/modified. So, I think it's safe to call this a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-03-36",
        "inspection-time-in-minutes": 13
    },
    {
        "iid": 148,
        "inspection-start-time": "2022-01-29-03-37",
        "project": "commons-validator",
        "spec-id": "00338",
        "method-a": "org.apache.commons.validator.ValidatorAction.readJavascriptFile(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.util.List",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/ls/00338.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:393",
                        "method-b-site": "Field.java:847",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a on the test run without DSI experimentation returns null, and DSI most likely replaced the return value of method-a with the String value javascriptFileName, which is defined in ValidatorAction.java:387. The test is weak because it doesn't detect the \"incorrect\" replacement value.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField/snippet",
        "notes": "The test is weak because it does not detect the replaced, incorrect return value for method-a. In the use case of the test, the field variable ValidatorAction.javascript is set to be the return value of method-a (if ValidatorAction.javascript was not already set and also assuming that no exceptions have been thrown). method-b is a stateless method that simply returns an unmodifiable list version of the field variable ValidatorAction.dependencyList, which is not related to ValidatorAction.javascript. So, I think it's safe to call this a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-03-41",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 149,
        "inspection-start-time": "2022-01-29-03-41",
        "project": "commons-validator",
        "spec-id": "00339",
        "method-a": "org.apache.commons.validator.ValidatorAction.readJavascriptFile(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 100,
        "code-snippets-file": "snippets/ls/00339.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:393",
                        "method-b-site": "ValidatorResources.java:367",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a on the test run without DSI experimentation returns null, and DSI most likely replaced the return value of method-a with the String value javascriptFileName, which is defined in ValidatorAction.java:387. The test is weak because it doesn't detect the \"incorrect\" replacement value.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField/snippet",
        "notes": "The test is weak because it does not detect the replaced, incorrect return value for method-a. The field variable ValidatorAction.javascript is set to be the return value of method-a (if ValidatorAction.javascript was not already set and also assuming that no exceptions have been thrown). method-b is a 1-line naive getter to the field variable ValidatorAction.name (ONE_STATELESS_METHOD), which is not related to ValidatorAction.javascript. So, I think it's safe to call this a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-03-45",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 150,
        "inspection-start-time": "2022-01-29-03-45",
        "project": "commons-validator",
        "spec-id": "00340",
        "method-a": "org.apache.commons.validator.ValidatorAction.readJavascriptFile(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getParameterValues(Ljava/util/Map;)[Ljava/lang/Object;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.Object[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/ls/00340.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:393",
                        "method-b-site": "ValidatorAction.java:541",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a on the test run without DSI experimentation returns null, and DSI most likely replaced the return value of method-a with the String value javascriptFileName, which is defined in ValidatorAction.java:387. The test is weak because it doesn't detect the \"incorrect\" replacement value.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField/snippet",
        "notes": "The test is weak because it does not detect the replaced, incorrect return value for method-a. The field variable ValidatorAction.javascript is set to be the return value of method-a (if ValidatorAction.javascript was not already set, and also assuming that no exceptions have been thrown). method-b returns a list constructed via using data from its argument and the field variable ValidatorAction.methodParameterList, which are both not related to ValidatorAction.javascript. So, I think it's safe to call this a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-03-49",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 151,
        "inspection-start-time": "2022-01-29-03-52",
        "project": "commons-validator",
        "spec-id": "00341",
        "method-a": "org.apache.commons.validator.ValidatorAction.readJavascriptFile(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.getValidationClassInstance()Ljava/lang/Object;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/ls/00341.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:393",
                        "method-b-site": "ValidatorAction.java:551",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a on the test run without DSI experimentation returns null, and DSI most likely replaced the return value of method-a with the String value javascriptFileName, which is defined in ValidatorAction.java:387. The test is weak because it doesn't detect the \"incorrect\" replacement value.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField/snippet",
        "notes": "The test is weak because it does not detect the replaced, incorrect return value for method-a. The field variable ValidatorAction.javascript is set to be the return value of method-a (if ValidatorAction.javascript was not already set, and also assuming that no exceptions have been thrown). method-b accesses the field variables ValidatorAction.validationMethod and ValidatorAction.validationClass, and modifies the field variable ValidatorAction.instance, which are all not related to ValidatorAction.javascript. So, I think it's safe to call this a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-03-56",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 152,
        "inspection-start-time": "2022-01-29-03-56",
        "project": "commons-validator",
        "spec-id": "00342",
        "method-a": "org.apache.commons.validator.ValidatorAction.readJavascriptFile(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.isValid(Ljava/lang/Object;)Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 9,
        "code-snippets-file": "snippets/ls/00342.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:393",
                        "method-b-site": "ValidatorAction.java:567",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a on the test run without DSI experimentation returns null, and DSI most likely replaced the return value of method-a with the String value javascriptFileName, which is defined in ValidatorAction.java:387. The test is weak because it doesn't detect the \"incorrect\" replacement value.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField/snippet",
        "notes": "The test is weak because it does not detect the replaced, incorrect return value for method-a. The field variable ValidatorAction.javascript is set to be the return value of method-a (if ValidatorAction.javascript was not already set, and also assuming that no exceptions have been thrown). method-b returns a boolean signifying either the boolean value from the argument or whether the argument is not null (depending on whether the argument is a Boolean object or not), and its argument is not related to ValidatorAction.javascript. So, I think it's safe to call this a spurious spec. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-03-58",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 153,
        "inspection-start-time": "2022-01-29-03-59",
        "project": "commons-validator",
        "spec-id": "00343",
        "method-a": "org.apache.commons.validator.ValidatorAction.readJavascriptFile(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadParameterClasses(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00343.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:393",
                        "method-b-site": "ValidatorAction.java:536",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a on the test run without DSI experimentation returns null, and DSI most likely replaced the return value of method-a with the String value javascriptFileName, which is defined in ValidatorAction.java:387. The test is weak because it doesn't detect the \"incorrect\" replacement value.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField/snippet",
        "notes": "The test is weak because it does not detect the replaced, incorrect return value for method-a. The field variable ValidatorAction.javascript is set to be the return value of method-a (if ValidatorAction.javascript was not already set, and also assuming that no exceptions have been thrown). method-b accesses the field variables ValidatorAction.parameterClasses and ValidatorAction.methodParameterList, and modifies ValidatorAction.parameterClasses (or throws an exception), which are not related to ValidatorAction.javascript. So, I think it's safe to call this a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-04-01",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 154,
        "inspection-start-time": "2022-01-29-04-01",
        "project": "commons-validator",
        "spec-id": "00344",
        "method-a": "org.apache.commons.validator.ValidatorAction.readJavascriptFile(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationClass(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00344.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:393",
                        "method-b-site": "ValidatorAction.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a on the test run without DSI experimentation returns null, and DSI most likely replaced the return value of method-a with the String value javascriptFileName, which is defined in ValidatorAction.java:387. The test is weak because it doesn't detect the \"incorrect\" replacement value.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField/snippet",
        "notes": "The test is weak because it does not detect the replaced, incorrect return value for method-a. The field variable ValidatorAction.javascript is set to be the return value of method-a (if ValidatorAction.javascript was not already set, and also assuming that no exceptions have been thrown). method-b accesses and modifies the field variable ValidatorAction.validationClass (or throws an exception), which is not related to ValidatorAction.javascript. So, I think it's safe to call this a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-04-05",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 155,
        "inspection-start-time": "2022-01-29-04-05",
        "project": "commons-validator",
        "spec-id": "00345",
        "method-a": "org.apache.commons.validator.ValidatorAction.readJavascriptFile(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationMethod()V",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 6,
        "test-methods-mine-count": 45,
        "code-snippets-file": "snippets/ls/00345.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:393",
                        "method-b-site": "ValidatorAction.java:537",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a on the test run without DSI experimentation returns null, and DSI most likely replaced the return value of method-a with the String value javascriptFileName, which is defined in ValidatorAction.java:387. The test is weak because it doesn't detect the \"incorrect\" replacement value.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField/snippet",
        "notes": "The test is weak because it does not detect the replaced, incorrect return value for method-a. The field variable ValidatorAction.javascript is set to be the return value of method-a (if ValidatorAction.javascript was not already set, and also assuming that no exceptions have been thrown). method-b accesses the field variables ValidatorAction.validationMethod and ValidatorAction.validationClass, and modifies the field variable ValidatorAction.validationMethod, which are not related to ValidatorAction.javascript. So, I think it's safe to call this a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-04-09",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 156,
        "inspection-start-time": "2022-01-29-15-18",
        "project": "commons-validator",
        "spec-id": "00346",
        "method-a": "org.apache.commons.validator.ValidatorAction.readJavascriptFile(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorAction.onlyReturnErrors(Ljava/util/Map;)Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 14,
        "code-snippets-file": "snippets/ls/00346.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorAction.java:393",
                        "method-b-site": "ValidatorAction.java:568",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a on the test run without DSI experimentation returns null, and DSI most likely replaced the return value of method-a with the String value javascriptFileName, which is defined in ValidatorAction.java:387. The test is weak because it doesn't detect the \"incorrect\" replacement value.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField/snippet",
        "notes": "The test is weak because it does not detect the replaced, incorrect return value for method-a. The field variable ValidatorAction.javascript is set to be the return value of method-a (if ValidatorAction.javascript was not already set, and also assuming that no exceptions have been thrown). method-b retrieves the onlyReturnErrors setting from a particular entry in its Map argument, which is not related to ValidatorAction.javascript. So, I think it's safe to call this a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-15-27",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 157,
        "inspection-start-time": "2022-01-29-15-27",
        "project": "commons-validator",
        "spec-id": "00347",
        "method-a": "org.apache.commons.validator.ValidatorAction.setClassname(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.executeValidationMethod(Lorg/apache/commons/validator/Field;Ljava/util/Map;Lorg/apache/commons/validator/ValidatorResults;I)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00347.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:148",
                        "method-b-site": "Field.java:826",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "SWALLOWED_EXCEPTION: ValidatorAction.loadValidationClass() (called from method-b) throws a NullPointerException, but method-b swallows that in the catch block starting from ValidatorAction.java:578. Refer to snippet for details."
            }
        ],
        "verdict": "true-spec",
        "is-oracle-weak": false,
        "spec-type": "precondition",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField if exception was not swallowed.",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.classname. The reason why this is a stage-3-complete with the test passing is because method-b throws and swallows a NullPointerException because method-a was not called, making the field variable ValidatorAction.classname never set (method-b calls ValidatorAction.loadValidationClass(), which accesses the field variable ValidatorAction.classname). If method-a was not called before method-b, method-b will log a NullPointerException message and exit, instead of invoking a validation method via reflection.",
        "findings": "Type-c: method-b is always preceded by method-a",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-29-15-44",
        "inspection-time-in-minutes": 17
    },
    {
        "iid": 158,
        "inspection-start-time": "2022-01-29-16-05",
        "project": "commons-validator",
        "spec-id": "00348",
        "method-a": "org.apache.commons.validator.ValidatorAction.setClassname(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.formatJavascriptFileName()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00348.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:148",
                        "method-b-site": "ValidatorAction.java:387",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.classname, and method-b happens before the field variable is actually used (either ValidatorResources.java:370 or ValidatorAction.java:626, depending on the conditional at ValidatorResources.java:369). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.classname, and method-b accesses the field variable ValidatorAction.jsFunction, which is not related to ValidatorAction.classname. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-16-14",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 159,
        "inspection-start-time": "2022-01-29-16-14",
        "project": "commons-validator",
        "spec-id": "00349",
        "method-a": "org.apache.commons.validator.ValidatorAction.setClassname(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.generateJsFunction()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00349.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:148",
                        "method-b-site": "ValidatorAction.java:384",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.classname, and method-b happens before the field variable is actually used (either ValidatorResources.java:370 or ValidatorAction.java:626, depending on the conditional at ValidatorResources.java:369). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.classname, and method-b only accesses the field variable ValidatorAction.name, which is not related to ValidatorAction.classname. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-16-17",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 160,
        "inspection-start-time": "2022-01-29-16-17",
        "project": "commons-validator",
        "spec-id": "00350",
        "method-a": "org.apache.commons.validator.ValidatorAction.setClassname(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getClassLoader(Ljava/util/Map;)Ljava/lang/ClassLoader;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.ClassLoader",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00350.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:148",
                        "method-b-site": "ValidatorAction.java:534",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.classname, and method-b happens before the field variable is actually used (ValidatorAction.java:626). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.classname, and method-b simply retrieves a ClassLoader object from a particular entry in its Map argument, which is not related to the field variable set by method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-16-24",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 161,
        "inspection-start-time": "2022-01-29-16-24",
        "project": "commons-validator",
        "spec-id": "00351",
        "method-a": "org.apache.commons.validator.ValidatorAction.setClassname(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.List",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00351.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:148",
                        "method-b-site": "Field.java:847",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.classname, and method-b happens before the field variable is actually used (ValidatorAction.java:626). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.classname, and method-b returns an unmodifiable list version of the field variable ValidatorAction.dependencyList, which is not related to the field variable set by method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-16-27",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 162,
        "inspection-start-time": "2022-01-29-16-27",
        "project": "commons-validator",
        "spec-id": "00352",
        "method-a": "org.apache.commons.validator.ValidatorAction.setClassname(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00352.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:148",
                        "method-b-site": "ValidatorResources.java:367",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.classname, and method-b happens before the field variable is actually used (ValidatorAction.java:626). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.classname, and method-b is a 1-line naive getter to the field variable ValidatorAction.name (ONE_STATELESS_METHOD), which is not related to the field variable set by method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-16-32",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 163,
        "inspection-start-time": "2022-01-29-16-45",
        "project": "commons-validator",
        "spec-id": "00355",
        "method-a": "org.apache.commons.validator.ValidatorAction.setClassname(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.init()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00355.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:148",
                        "method-b-site": "ValidatorResources.java:365",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.classname, and method-b happens before the field variable is actually used (ValidatorAction.java:626). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.classname, and method-b accesses and modifies the field variables ValidatorAction.jsFunction and ValidatorAction.javascript, which are not related to the field variable set by method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-16-49",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 164,
        "inspection-start-time": "2022-01-29-16-56",
        "project": "commons-validator",
        "spec-id": "00357",
        "method-a": "org.apache.commons.validator.ValidatorAction.setClassname(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.javascriptAlreadyLoaded()Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00357.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:148",
                        "method-b-site": "ValidatorAction.java:375",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.classname, and method-b happens before the field variable is actually used (either ValidatorResources.java:370 or ValidatorAction.java:626, depending on the conditional at ValidatorResources.java:369). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.classname, and method-b returns a non-nullness check on the field variable ValidatorAction.javascript, which is not related to ValidatorAction.classname. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-16-59",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 165,
        "inspection-start-time": "2022-01-29-16-59",
        "project": "commons-validator",
        "spec-id": "00358",
        "method-a": "org.apache.commons.validator.ValidatorAction.setClassname(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadJavascriptFunction()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00358.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:148",
                        "method-b-site": "ValidatorAction.java:359",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.classname, and method-b happens before the field variable is actually used (either ValidatorResources.java:370 or ValidatorAction.java:626, depending on the conditional at ValidatorResources.java:369). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.classname, and method-b accesses and modifies the field variables ValidatorAction.javascript and ValidatorAction.jsFunction, which are not related to ValidatorAction.classname. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-17-06",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 166,
        "inspection-start-time": "2022-01-29-17-39",
        "project": "commons-validator",
        "spec-id": "00363",
        "method-a": "org.apache.commons.validator.ValidatorAction.setClassname(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.readJavascriptFile(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00363.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:148",
                        "method-b-site": "ValidatorAction.java:393",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.classname, and method-b happens before the field variable is actually used (either ValidatorResources.java:370 or ValidatorAction.java:626, depending on the conditional at ValidatorResources.java:369). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "ONE_STATELESS_METHOD: method-a is a pure setter for the field variable ValidatorAction.classname, and method-b doesn't access/modifies any field variables but the field variable ValidatorAction.javascript, which is not related to ValidatorAction.classname, is set to its return value. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-17-45",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 167,
        "inspection-start-time": "2022-01-29-17-54",
        "project": "commons-validator",
        "spec-id": "00364",
        "method-a": "org.apache.commons.validator.ValidatorAction.setClassname(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.setMethod(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00364.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:148",
                        "method-b-site": "ValidatorTest.java:149",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.classname, and method-b happens before the field variable is actually used (either ValidatorResources.java:370 or ValidatorAction.java:626, depending on the conditional at ValidatorResources.java:369). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable ValidatorAction.classname, and method-b is a pure setter to the field variable ValidatorAction.method.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-17-56",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 168,
        "inspection-start-time": "2022-01-29-17-56",
        "project": "commons-validator",
        "spec-id": "00365",
        "method-a": "org.apache.commons.validator.ValidatorAction.setClassname(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.setMethodParams(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00365.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:148",
                        "method-b-site": "ValidatorTest.java:150",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.classname, and method-b happens before the field variable is actually used (either ValidatorResources.java:370 or ValidatorAction.java:626, depending on the conditional at ValidatorResources.java:369). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.classname, and method-b modifies the field variables ValidatorAction.methodParams and ValidatorAction.methodParameterList, which are not related to the field variable that method-a modifies.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-17-59",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 169,
        "inspection-start-time": "2022-01-29-17-59",
        "project": "commons-validator",
        "spec-id": "00366",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethod(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.executeValidationMethod(Lorg/apache/commons/validator/Field;Ljava/util/Map;Lorg/apache/commons/validator/ValidatorResults;I)Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00366.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:149",
                        "method-b-site": "Field.java:826",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "SWALLOWED_EXCEPTION: ValidatorAction.loadValidationMethod() (called from method-b) throws a NullPointerException, but method-b swallows that in the catch block starting from ValidatorAction.java:578. Refer to snippet for details."
            }
        ],
        "verdict": "true-spec",
        "is-oracle-weak": false,
        "spec-type": "precondition",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField if exception was not swallowed.",
        "notes": "The reason why this is a stage-3-complete with the test passing is because method-b throws and swallows a NullPointerException because method-a was not called, making the field variable ValidatorAction.method never set (method-b calls ValidatorAction.loadValidationMethod(), which accesses the field variable ValidatorAction.method). method-a is a pure setter to the field variable ValidatorAction.method (and it is the only location in the class that sets that field variable). Because of this relationship between method-a and ValidatorAction.loadValidationClass(), there is a relationship between method-a and method-b as well. If method-a was not called before method-b, method-b will log a NullPointerException message, add a failure result to its ValidatorResults argument and exit, instead of invoking a validation method via reflection (asssuming the user intended to do so).",
        "findings": "Type-c: method-b is always preceded by method-a",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-29-18-05",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 170,
        "inspection-start-time": "2022-01-29-18-05",
        "project": "commons-validator",
        "spec-id": "00367",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethod(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.formatJavascriptFileName()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00367.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:149",
                        "method-b-site": "ValidatorAction.java:387",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.method, and method-b is called before the field variable is actually used (ValidatorAction.java:605). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.method, and method-b accesses the field variable ValidatorAction.jsFunction, which is not related to ValidatorAction.classname. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-18-09",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 171,
        "inspection-start-time": "2022-01-29-18-09",
        "project": "commons-validator",
        "spec-id": "00368",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethod(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.generateJsFunction()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00368.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:149",
                        "method-b-site": "ValidatorAction.java:384",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.method, and method-b is called before the field variable is actually used (ValidatorAction.java:605). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.method, and method-b accesses the field variable ValidatorAction.name and its return value is assigned to the field variable ValidatorAction.jsFunction, which are not related to ValidatorAction.classname. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-18-13",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 172,
        "inspection-start-time": "2022-01-29-18-13",
        "project": "commons-validator",
        "spec-id": "00369",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethod(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getClassLoader(Ljava/util/Map;)Ljava/lang/ClassLoader;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.ClassLoader",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00369.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:149",
                        "method-b-site": "ValidatorAction.java:534",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.method, and method-b is called before the field variable is actually used (ValidatorAction.java:605). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.method, and method-b simply retrieves a ClassLoader object from a particular entry in its Map argument, which is not related to the field variable set by method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-18-19",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 173,
        "inspection-start-time": "2022-01-29-18-19",
        "project": "commons-validator",
        "spec-id": "00370",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethod(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.List",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00370.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:149",
                        "method-b-site": "Field.java:847",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.method, and method-b is called before the field variable is actually used (ValidatorAction.java:605). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.method, and method-b retrieves an unmodifiable list version of the field variable ValidatorAction.dependencyList, which is not related to the field variable set by method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-18-23",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 174,
        "inspection-start-time": "2022-01-29-18-23",
        "project": "commons-validator",
        "spec-id": "00371",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethod(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00371.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:149",
                        "method-b-site": "ValidatorResources.java:367",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.method, and method-b is called before the field variable is actually used (ValidatorAction.java:605). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.method, and method-b is a 1-line naive getter to the field variable ValidatorAction.name (ONE_STATELESS_METHOD), which is not related to the field variable set by method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-18-28",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 175,
        "inspection-start-time": "2022-01-29-20-59",
        "project": "commons-validator",
        "spec-id": "00374",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethod(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.init()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00374.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:149",
                        "method-b-site": "ValidatorResources.java:365",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.classname, and method-b happens before the field variable is actually used (ValidatorAction.java:626). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter to the field variable ValidatorAction.classname, and method-b accesses and modifies the field variables ValidatorAction.jsFunction and ValidatorAction.javascript, which are not related to the field variable set by method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-21-02",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 176,
        "inspection-start-time": "2022-01-29-21-13",
        "project": "commons-validator",
        "spec-id": "00376",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethod(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.javascriptAlreadyLoaded()Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00376.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:149",
                        "method-b-site": "ValidatorAction.java:375",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.method, and method-b is called before the field variable is actually used (ValidatorAction.java:605). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.method, and method-b does a check on the field variable ValidatorAction.javascript, which is not related to ValidatorAction.method. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-21-15",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 177,
        "inspection-start-time": "2022-01-29-21-15",
        "project": "commons-validator",
        "spec-id": "00377",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethod(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadJavascriptFunction()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00377.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:149",
                        "method-b-site": "ValidatorAction.java:359",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.method, and method-b is called before the field variable is actually used (ValidatorAction.java:605). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.method, and method-b accesses and modifies the field variables ValidatorAction.javascript and ValidatorAction.jsFunction, which are not related to ValidatorAction.method. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-21-18",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 178,
        "inspection-start-time": "2022-01-29-21-18",
        "project": "commons-validator",
        "spec-id": "00378",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethod(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadParameterClasses(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00378.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:149",
                        "method-b-site": "ValidatorAction.java:536",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.method, and method-b is called before the field variable is actually used (ValidatorAction.java:605). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.method, and method-b accesses the field variables ValidatorAction.parameterClasses and ValidatorAction.methodParameterList, and modifies the field variable ValidatorAction.parameterClasses, which are not related to the field variable modified by method-a. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-21-22",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 179,
        "inspection-start-time": "2022-01-29-21-22",
        "project": "commons-validator",
        "spec-id": "00379",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethod(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationClass(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00379.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:149",
                        "method-b-site": "ValidatorAction.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.method, and method-b is called before the field variable is actually used (ValidatorAction.java:605). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.method, and method-b accesses the field variables ValidatorAction.validationClass and ValidatorAction.classname, and modifies the field variable ValidatorAction.validationClass, which are not related to the field variable modified by method-a. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-21-24",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 180,
        "inspection-start-time": "2022-01-29-21-33",
        "project": "commons-validator",
        "spec-id": "00382",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethod(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.readJavascriptFile(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00382.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:149",
                        "method-b-site": "ValidatorAction.java:393",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.method, and method-b is called before the field variable is actually used (ValidatorAction.java:605). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.method, and method-b does not access/modify any field variables but its return value is set to the field variable ValidatorAction.javascript, which is not related to ValidatorAction.method. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-21-37",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 181,
        "inspection-start-time": "2022-01-29-21-37",
        "project": "commons-validator",
        "spec-id": "00383",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethod(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.setMethodParams(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00383.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:149",
                        "method-b-site": "ValidatorTest.java:150",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.method, and method-b is called before the field variable is actually used (ValidatorAction.java:605). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "ONE_PURE_SETTER: method-a modifies the field variable ValidatorAction.method, and method-b modifies the field variables ValidatorAction.methodParams and ValidatorAction.methodParameterList, which are not related to the field variable that method-a modifies.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-21-42",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 182,
        "inspection-start-time": "2022-01-29-22-18",
        "project": "commons-validator",
        "spec-id": "00385",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethodParams(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.formatJavascriptFileName()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00385.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:150",
                        "method-b-site": "ValidatorAction.java:387",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a populates the field variable ValidatorAction.methodParameterList, and method-b is called before the field variable is actually used (ValidatorAction.java:646). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a modifies the field variables ValidatorAction.methodParams and ValidatorAction.methodParameterList, and method-b constructs and returnsa new String variable from it the field variable ValidatorAction.jsFunction, which is not related to the field variables that method-a modifies. Hence, this is a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-22-21",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 183,
        "inspection-start-time": "2022-01-29-22-21",
        "project": "commons-validator",
        "spec-id": "00386",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethodParams(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.generateJsFunction()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00386.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:150",
                        "method-b-site": "ValidatorAction.java:384",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a populates the field variable ValidatorAction.methodParameterList, and method-b is called before the field variable is actually used (ValidatorAction.java:646). So, the delayed call to method-a after method-b restores the state (and populates the field variables )."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a modifies the field variables ValidatorAction.methodParams and ValidatorAction.methodParameterList, and method-b does not access/modify any field variable but its return variable is assigned to the field variable ValidatorAction.jsFunction, which is not related to either of the field variables that method-a modifies. Hence, this is a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-22-25",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 184,
        "inspection-start-time": "2022-01-29-22-25",
        "project": "commons-validator",
        "spec-id": "00387",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethodParams(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getClassLoader(Ljava/util/Map;)Ljava/lang/ClassLoader;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.ClassLoader",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00387.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:150",
                        "method-b-site": "ValidatorAction.java:534",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.method, and method-b is called before the field variable is actually used (ValidatorAction.java:605). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "method-a modifies the field variables ValidatorAction.methodParams and ValidatorAction.methodParameterList, and method-b returns a ClassLoader object from a particular entry in its Map argument, which is not related to either of the field variables set by method-a - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-22-28",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 185,
        "inspection-start-time": "2022-01-29-22-29",
        "project": "commons-validator",
        "spec-id": "00388",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethodParams(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getDependencyList()Ljava/util/List;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.List",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00388.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:150",
                        "method-b-site": "Field.java:847",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.method, and method-b is called before the field variable is actually used (ValidatorAction.java:605). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "method-a modifies the field variables ValidatorAction.methodParams and ValidatorAction.methodParameterList, and method-b retrieves an unmodifiable list version of the field variable ValidatorAction.dependencyList, which is not related to either of the field variables set by method-a. UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-22-32",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 186,
        "inspection-start-time": "2022-01-29-22-32",
        "project": "commons-validator",
        "spec-id": "00389",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethodParams(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.getName()Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00389.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:150",
                        "method-b-site": "ValidatorResources.java:367",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.method, and method-b is called before the field variable is actually used (ValidatorAction.java:605). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "method-a modifies the field variables ValidatorAction.methodParams and ValidatorAction.methodParameterList, and method-b is a 1-line naive getter to the field variable ValidatorAction.name (ONE_STATELESS_METHOD), which is not related to either of the field variables set by method-a.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-22-34",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 187,
        "inspection-start-time": "2022-01-29-22-56",
        "project": "commons-validator",
        "spec-id": "00392",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethodParams(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.init()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00392.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:150",
                        "method-b-site": "ValidatorResources.java:365",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.method, and method-b is called before the field variable is actually used (ValidatorAction.java:605). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField.",
        "notes": "method-a modifies/populates the field variables ValidatorAction.methodParams and ValidatorAction.methodParameterList, and method-b accesses and modifies the field variables ValidatorAction.jsFunction and ValidatorAction.javascript, which are not related to either of the field variables set by method-a. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-22-58",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 188,
        "inspection-start-time": "2022-01-29-23-06",
        "project": "commons-validator",
        "spec-id": "00394",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethodParams(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.javascriptAlreadyLoaded()Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00394.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:150",
                        "method-b-site": "ValidatorAction.java:375",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a populates the field variable ValidatorAction.methodParameterList, and method-b is called before the field variable is actually used (ValidatorAction.java:646). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a modifies/populates the field variables ValidatorAction.methodParams and ValidatorAction.methodParameterList, and method-b performs a simple non-nullness check on the field variable ValidatorAction.javascript, which is not related to the field variables that method-a modifies. Hence, this is a spurious spec. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-23-08",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 189,
        "inspection-start-time": "2022-01-29-23-08",
        "project": "commons-validator",
        "spec-id": "00395",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethodParams(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadJavascriptFunction()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00395.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:150",
                        "method-b-site": "ValidatorAction.java:359",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a populates the field variable ValidatorAction.methodParameterList, and method-b is called before the field variable is actually used (ValidatorAction.java:646). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a modifies/populates the field variables ValidatorAction.methodParams and ValidatorAction.methodParameterList, and method-b accesses and modifies the field variables ValidatorAction.jsFunction and ValidatorAction.javascript, which is not related to the field variables that method-a modifies. Hence, this is a spurious spec. UNRELATED_STATEFUL_METHODS?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-23-13",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 190,
        "inspection-start-time": "2022-01-29-23-35",
        "project": "commons-validator",
        "spec-id": "00397",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethodParams(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.loadValidationClass(Ljava/lang/ClassLoader;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00397.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:150",
                        "method-b-site": "ValidatorResources.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a sets the field variable ValidatorAction.method, and method-b is called before the field variable is actually used (ValidatorAction.java:605). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a modifies/populates the field variables ValidatorAction.methodParams and ValidatorAction.methodParameterList, and method-b accesses the field variables ValidatorAction.validationClass and ValidatorAction.classname and modifies the field variable ValidatorAction.validationClass (or throws an exception), which are not related to the field variables that method-a modifies. Hence, this is a spurious spec. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-23-39",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 191,
        "inspection-start-time": "2022-01-29-23-47",
        "project": "commons-validator",
        "spec-id": "00400",
        "method-a": "org.apache.commons.validator.ValidatorAction.setMethodParams(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.readJavascriptFile(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00400.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:150",
                        "method-b-site": "ValidatorAction.java:393",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: method-a populates the field variable ValidatorAction.methodParameterList, and method-b is called before the field variable is actually used (ValidatorAction.java:646). So, the delayed call to method-a after method-b restores the state (and sets the value to ValidatorAction.classname)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a modifies/populates the field variables ValidatorAction.methodParams and ValidatorAction.methodParameterList, and method-b doesn't access/modify any field variables but its return value is assigned to the field variable ValidatorAction.javascript, which is not related to the field variables that method-a modifies. Hence, this is a spurious spec. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-29-23-52",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 192,
        "inspection-start-time": "2022-01-29-00-48",
        "project": "commons-validator",
        "spec-id": "00411",
        "method-a": "org.apache.commons.validator.ValidatorAction.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.javascriptAlreadyLoaded()Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00411.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:147",
                        "method-b-site": "ValidatorAction.java:375",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: ValidatorAction.generateJsFunction() would have thrown a NullPointerException if method-a was not called before it, but since method-b was called before then, the delayed call to method-a restored the state."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter of the field variable ValidatorAction.name, and method-b simply performs a check on the field variable ValidatorAction.javascript, which is unrelated to the field variable that method-a sets. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-00-52",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 193,
        "inspection-start-time": "2022-01-30-01-39",
        "project": "commons-validator",
        "spec-id": "00418",
        "method-a": "org.apache.commons.validator.ValidatorAction.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.setClassname(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00418.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:147",
                        "method-b-site": "ValidatorTest.java:148",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: ValidatorAction.generateJsFunction() would have thrown a NullPointerException if method-a was not called before it, but since method-b was called before then, the delayed call to method-a restored the state."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable ValidatorAction.name, and method-b is a pure setter to the field variable ValidatorAction.classname.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-01-44",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 194,
        "inspection-start-time": "2022-01-30-01-44",
        "project": "commons-validator",
        "spec-id": "00419",
        "method-a": "org.apache.commons.validator.ValidatorAction.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.setMethod(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00419.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:147",
                        "method-b-site": "ValidatorTest.java:149",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: ValidatorAction.generateJsFunction() would have thrown a NullPointerException if method-a was not called before it, but since method-b was called before then, the delayed call to method-a restored the state."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "UNRELATED_PURE_SETTERS - method-a is a pure setter to the field variable ValidatorAction.name, and method-b is a pure setter to the field variable ValidatorAction.method.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-01-46",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 195,
        "inspection-start-time": "2022-01-30-01-46",
        "project": "commons-validator",
        "spec-id": "00420",
        "method-a": "org.apache.commons.validator.ValidatorAction.setName(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.validator.ValidatorAction.setMethodParams(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00420.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:147",
                        "method-b-site": "ValidatorTest.java:150",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "STATE_RESTORED: ValidatorAction.generateJsFunction() would have thrown a NullPointerException if method-a was not called before it, but since method-b was called before then, the delayed call to method-a restored the state."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "ONE_PURE_SETTER: method-a is a pure setter for the field variable ValidatorAction.name, and method-a modifies/populates the field variables ValidatorAction.methodParams and ValidatorAction.methodParameterList, both of which are not related to the field variable set by method-a. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-01-50",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 196,
        "inspection-start-time": "2022-01-30-15-56",
        "project": "commons-validator",
        "spec-id": "00428",
        "method-a": "org.apache.commons.validator.ValidatorResources.addOldArgRules(Lorg/apache/commons/digester/Digester;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.addFormSet(Lorg/apache/commons/validator/FormSet;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00428.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:257",
                        "method-b-site": "FormSetFactory.java:88",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a simply modifies the input Digester object, and while method-b is indirectly called from via the Digester object to add a FormSet to the field variable ValidatorResources.hFormSets, there is no relation between the modifications that method-a made and any of the operations that method-b does (UNRELATED_STATEFUL_METHODS). Note that method-a is defined and used for the sake of backwards compatibility (I didn't quite understand the configuration files well enough...), but I think for the general sense and the use case intended for the recent version of validator, this can be seen as a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-16-10",
        "inspection-time-in-minutes": 14
    },
    {
        "iid": 197,
        "inspection-start-time": "2022-01-30-16-10",
        "project": "commons-validator",
        "spec-id": "00429",
        "method-a": "org.apache.commons.validator.ValidatorResources.addOldArgRules(Lorg/apache/commons/digester/Digester;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.buildKey(Lorg/apache/commons/validator/FormSet;)Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00429.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:257",
                        "method-b-site": "ValidatorResources.java:321",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a simply modifies the input Digester object, and while method-b is indirectly called from via the Digester object to return a String containing information from the argument FormSet object's language, country, and variant fields, there is no relation between the modifications that method-a made and any of the operations that method-b does (UNRELATED_STATEFUL_METHODS). Note that method-a is defined and used for the sake of backwards compatibility (I didn't quite understand the configuration files well enough, but method-b gets called and the inspected test passes regardless of whether method-a was called or not), but I think for the general sense and the use case intended for the recent version of validator, this can be seen as a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-16-13",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 198,
        "inspection-start-time": "2022-01-30-16-13",
        "project": "commons-validator",
        "spec-id": "00430",
        "method-a": "org.apache.commons.validator.ValidatorResources.addOldArgRules(Lorg/apache/commons/digester/Digester;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getActions()Ljava/util/Map;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 3,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/ls/00430.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:257",
                        "method-b-site": "ValidatorResources.java:367",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Note that this test is one of a much smaller test set compared to the test set that mined 00429. This is simply because tests like DateTest#testValidDate, the test that was inspected in 00429, call method-b multiple times as opposed to once (most likely because their XML files contain more than one validator field)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.EntityImportTest#testEntityImport",
        "notes": "method-a simply modifies the input Digester object, and while method-b is indirectly called from via the Digester object, there is no relation between the modifications that method-a made and any of the operations that method-b does (especially because method-b is a 1-line naive getter to the field variable ValidatorResources.hActions - ONE_STATELESS_METHOD). Note that method-a is defined and used for the sake of backwards compatibility (I didn't quite understand the configuration files well enough, but method-b gets called and the inspected test passes regardless of whether method-a was called or not), but I think for the general sense and the use case intended for the recent version of validator, this can be seen as a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-16-23",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 199,
        "inspection-start-time": "2022-01-30-16-23",
        "project": "commons-validator",
        "spec-id": "00431",
        "method-a": "org.apache.commons.validator.ValidatorResources.addOldArgRules(Lorg/apache/commons/digester/Digester;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getConstants()Ljava/util/Map;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00431.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:257",
                        "method-b-site": "ValidatorResources.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a simply modifies the input Digester object, and while method-b is indirectly called from via the Digester object, there is no relation between the modifications that method-a made and any of the operations that method-b does (especially because method-b is a 1-line naive getter to the field variable ValidatorResources.hConstants - ONE_STATELESS_METHOD). Note that method-a is defined and used for the sake of backwards compatibility (I didn't quite understand the configuration files well enough, but method-b gets called and the inspected test passes regardless of whether method-a was called or not), but I think for the general sense and the use case intended for the recent version of validator, this can be seen as a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-16-27",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 200,
        "inspection-start-time": "2022-01-30-16-27",
        "project": "commons-validator",
        "spec-id": "00432",
        "method-a": "org.apache.commons.validator.ValidatorResources.addOldArgRules(Lorg/apache/commons/digester/Digester;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 17,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00432.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:257",
                        "method-b-site": "ValidatorResources.java:428",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a simply modifies the input Digester object, and there is no relation between the modifications that method-a made and any of the operations that method-b does (method-b retrieves a form object from either the field variable ValidatorResources.hFormSets or ValidatorResources.defaultFormSet - UNRELATED_STATEFUL_METHODS). Note that method-a is defined and used for the sake of backwards compatibility (I didn't quite understand the configuration files well enough, but the inspected test calls method-b and passes regardless of whether method-a was called or not), but I think for the general sense and the use case intended for the recent version of validator, this can be seen as a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-16-42",
        "inspection-time-in-minutes": 15
    },
    {
        "iid": 201,
        "inspection-start-time": "2022-01-30-16-42",
        "project": "commons-validator",
        "spec-id": "00433",
        "method-a": "org.apache.commons.validator.ValidatorResources.addOldArgRules(Lorg/apache/commons/digester/Digester;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/util/Locale;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 17,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00433.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:257",
                        "method-b-site": "Validator.java:360",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a simply modifies the input Digester object, and there is no relation between the modifications that method-a made and any of the operations that method-b does (method-b retrieves a form object from either the field variable ValidatorResources.hFormSets or ValidatorResources.defaultFormSet). Note that method-a is defined and used for the sake of backwards compatibility (I didn't quite understand the configuration files well enough, but the inspected test calls method-b and passes regardless of whether method-a was called or not), but I think for the general sense and the use case intended for the recent version of validator, this can be seen as a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-16-44",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 202,
        "inspection-start-time": "2022-01-30-16-44",
        "project": "commons-validator",
        "spec-id": "00434",
        "method-a": "org.apache.commons.validator.ValidatorResources.addOldArgRules(Lorg/apache/commons/digester/Digester;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getFormSet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/FormSet;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.FormSet",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00434.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:257",
                        "method-b-site": "FormSetFactory.java:73",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a simply modifies the input Digester object, and while method-b is indirectly called from via the Digester object, there is no relation between the modifications that method-a made and any of the operations that method-b does (method-b retrieves a FormSet object from either the field variable ValidatorResources.hFormSets or the field variable ValidatorResources.defaultFormSet). Note that method-a is defined and used for the sake of backwards compatibility (I didn't quite understand the configuration files well enough, but the inspected test calls method-b and passes regardless of whether method-a was called or not), but I think for the general sense and the use case intended for the recent version of validator, this can be seen as a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-16-49",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 203,
        "inspection-start-time": "2022-01-30-16-49",
        "project": "commons-validator",
        "spec-id": "00435",
        "method-a": "org.apache.commons.validator.ValidatorResources.addOldArgRules(Lorg/apache/commons/digester/Digester;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getParent(Lorg/apache/commons/validator/FormSet;)Lorg/apache/commons/validator/FormSet;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.FormSet",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/ls/00435.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:257",
                        "method-b-site": "ValidatorResources.java:539",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.MultipleConfigFilesTest#testRequiredLastNameShort",
        "notes": "method-a simply modifies the input Digester object, and while method-b is indirectly called from via the Digester object, there is no relation between the modifications that method-a made and any of the operations that method-b does (method-b retrieves a FormSet object from either the field variable ValidatorResources.hFormSets or the field variable ValidatorResources.defaultFormSet based on the argument FormSet object). Note that method-a is defined and used for the sake of backwards compatibility (I didn't quite understand the configuration files well enough, but the inspected test calls method-b and passes regardless of whether method-a was called or not), but I think for the general sense and the use case intended for the recent version of validator, this can be seen as a spurious spec. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-16-55",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 204,
        "inspection-start-time": "2022-01-30-16-55",
        "project": "commons-validator",
        "spec-id": "00436",
        "method-a": "org.apache.commons.validator.ValidatorResources.addOldArgRules(Lorg/apache/commons/digester/Digester;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getValidatorActions()Ljava/util/Map;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 15,
        "test-methods-mine-count": 89,
        "code-snippets-file": "snippets/ls/00436.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:257",
                        "method-b-site": "Validator.java:365",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a simply modifies the input Digester object, and while method-b is indirectly called from via the Digester object, there is no relation between the modifications that method-a made and any of the operations that method-b does (method-b retrieves an unmodifiable list view of the field variable Valdiator.hActions). Note that method-a is defined and used for the sake of backwards compatibility (I didn't quite understand the configuration files well enough, but the inspected test calls method-b and passes regardless of whether method-a was called or not), but I think for the general sense and the use case intended for the recent version of validator, this can be seen as a spurious spec 0. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-17-01",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 205,
        "inspection-start-time": "2022-01-30-17-01",
        "project": "commons-validator",
        "spec-id": "00437",
        "method-a": "org.apache.commons.validator.ValidatorResources.addOldArgRules(Lorg/apache/commons/digester/Digester;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.process()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 21,
        "test-methods-mine-count": 107,
        "code-snippets-file": "snippets/ls/00437.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:257",
                        "method-b-site": "ValidatorResources.java:164",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a simply modifies the input Digester object, and there is no relation between the modifications that method-a made and any of the operations that method-b does (method-b modifies the data on some field variables, including ValidatorResources.hFormSets, ValidatorResources.hConstants, ValidatorResources.hActions, and ValidatorResources.defaultFormSet). Note that method-a is defined and used for the sake of backwards compatibility (I didn't quite understand the configuration files well enough, but the inspected test calls method-b and passes regardless of whether method-a was called or not), but I think for the general sense and the use case intended for the recent version of validator, this can be seen as a spurious spec. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-17-11",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 206,
        "inspection-start-time": "2022-01-30-17-14",
        "project": "commons-validator",
        "spec-id": "00438",
        "method-a": "org.apache.commons.validator.ValidatorResources.addOldArgRules(Lorg/apache/commons/digester/Digester;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.processForms()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 21,
        "test-methods-mine-count": 107,
        "code-snippets-file": "snippets/ls/00438.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:257",
                        "method-b-site": "ValidatorResources.java:522",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause the test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a simply modifies the input Digester object, and there is no relation between the modifications that method-a made and any of the operations that method-b does (method-b modifies the data on field variables ValidatorResources.hFormSets and ValidatorResources.defaultFormSet). Note that method-a is defined and used for the sake of backwards compatibility (I didn't quite understand the configuration files well enough, but method-b gets called and the inspected test passes regardless of whether method-a was called or not), but I think for the general sense and the use case intended for the recent version of validator, this can be seen as a spurious spec. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-17-20",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 207,
        "inspection-start-time": "2022-01-30-17-20",
        "project": "commons-validator",
        "spec-id": "00439",
        "method-a": "org.apache.commons.validator.ValidatorResources.addValidatorAction(Lorg/apache/commons/validator/ValidatorAction;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.addFormSet(Lorg/apache/commons/validator/FormSet;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00439.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:161",
                        "method-b-site": "ValidatorTest.java:162",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a modifies its ValidatorAction object and adds it to the Map field variable ValidatorResources.hActions. method-b modifies the field variable ValidatorResources.defaultFormSet or the field variable ValidatorResources.hFormSets, which are not related to a ValidatorAction object nor the field variable ValidatorResources.hActions. Hence, this is a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-17-31",
        "inspection-time-in-minutes": 11
    },
    {
        "iid": 208,
        "inspection-start-time": "2022-01-30-17-31",
        "project": "commons-validator",
        "spec-id": "00440",
        "method-a": "org.apache.commons.validator.ValidatorResources.addValidatorAction(Lorg/apache/commons/validator/ValidatorAction;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.buildKey(Lorg/apache/commons/validator/FormSet;)Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00440.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:161",
                        "method-b-site": "ValidatorResources.java:321",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a modifies its ValidatorAction object and adds it to the Map field variable ValidatorResources.hActions. method-b returns a string that is created by accessing some field variables from its FormSet argument, which is not related to a ValidatorAction object nor the field variable ValidatorResources.hActions. Hence, this is a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-17-34",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 209,
        "inspection-start-time": "2022-01-30-17-34",
        "project": "commons-validator",
        "spec-id": "00441",
        "method-a": "org.apache.commons.validator.ValidatorResources.addValidatorAction(Lorg/apache/commons/validator/ValidatorAction;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getConstants()Ljava/util/Map;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00441.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:161",
                        "method-b-site": "ValidatorResources.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a modifies its ValidatorAction object and adds it to the Map field variable ValidatorResources.hActions. method-b is a 1-line naive getter for the field variable ValidatorResources.hConstants (ONE_STATELESS_METHOD), which is not related to a ValidatorAction object nor the field variable ValidatorResources.hActions. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-17-36",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 210,
        "inspection-start-time": "2022-01-30-17-36",
        "project": "commons-validator",
        "spec-id": "00442",
        "method-a": "org.apache.commons.validator.ValidatorResources.addValidatorAction(Lorg/apache/commons/validator/ValidatorAction;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00442.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:161",
                        "method-b-site": "ValidatorResources.java:428",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a modifies its ValidatorAction object and adds it to the Map field variable ValidatorResources.hActions. method-b retrieves a Form object from either the field variable ValidatorResources.hFormSets or the field variable ValidatorResources.defaultFormSet, which is not related to a ValidatorAction object nor the field variable ValidatorResources.hActions. Hence, this is a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-20-17-40",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 211,
        "inspection-start-time": "2022-01-20-17-46",
        "project": "commons-validator",
        "spec-id": "00443",
        "method-a": "org.apache.commons.validator.ValidatorResources.addValidatorAction(Lorg/apache/commons/validator/ValidatorAction;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/util/Locale;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00443.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:161",
                        "method-b-site": "Validator.java:360",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a modifies its ValidatorAction object and adds it to the Map field variable ValidatorResources.hActions. method-b retrieves a Form object from either the field variable ValidatorResources.hFormSets or the field variable ValidatorResources.defaultFormSet, which is not related to a ValidatorAction object nor the field variable ValidatorResources.hActions. Hence, this is a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-17-48",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 212,
        "inspection-start-time": "2022-01-30-17-48",
        "project": "commons-validator",
        "spec-id": "00444",
        "method-a": "org.apache.commons.validator.ValidatorResources.addValidatorAction(Lorg/apache/commons/validator/ValidatorAction;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getValidatorActions()Ljava/util/Map;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00444.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:161",
                        "method-b-site": "Validator.java:365",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test passes here because method-a adds elements to the Map field variable ValidatorResources.hActions, and the return value of method-b contains a reference to it (via the unmodifiable list). So, calling method-a after method-b would implicitly modify the object that both method-a and method-b has a handle to (ValidatorResources.hActions)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a modifies its ValidatorAction object and adds it to the Map field variable ValidatorResources.hActions. method-b returns the unmodifiable list version of ValidatorResources.hActions, which contains a reference to ValidatorResources.hActions. I think it's better practice to call method-a after method-b, but ultimately I think this is a case of CONNECTION_DOES_NOT_NECESSITATE_ORDERING, because both method-a and method-b are public methods that can be called at any time (ValidatorResources.hActions is initialized at declaration).",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-18-04",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 213,
        "inspection-start-time": "2022-01-30-18-04",
        "project": "commons-validator",
        "spec-id": "00445",
        "method-a": "org.apache.commons.validator.ValidatorResources.addValidatorAction(Lorg/apache/commons/validator/ValidatorAction;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.process()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00445.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:161",
                        "method-b-site": "ValidatorTest.java:163",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a modifies its ValidatorAction object and adds it to the Map field variable ValidatorResources.hActions. method-b modifies the data on some field variables, including ValidatorResources.hFormSets, ValidatorResources.hConstants, ValidatorResources.hActions, and ValidatorResources.defaultFormSet. The way that method-b modifies ValidatorResources.hActions is by setting the mode to fast, which is not related to the modifications that method-a does (populating the map with variables). Hence, this is a spurious spec - CONNECTION_DOES_NOT_NECESSITATE_ORDERING.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-18-10",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 214,
        "inspection-start-time": "2022-01-30-18-10",
        "project": "commons-validator",
        "spec-id": "00446",
        "method-a": "org.apache.commons.validator.ValidatorResources.addValidatorAction(Lorg/apache/commons/validator/ValidatorAction;)V",
        "method-b": "org.apache.commons.validator.ValidatorResources.processForms()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/ls/00446.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:161",
                        "method-b-site": "ValidatorResources.java:522",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a modifies its ValidatorAction object and adds it to the Map field variable ValidatorResources.hActions. method-b modifies the data on field variables ValidatorResources.hFormSets and ValidatorResources.defaultFormSet, which is not related to the modifications that method-a does. Hence, this is a spurious spec. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-18-14",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 215,
        "inspection-start-time": "2022-01-30-21-04",
        "project": "commons-validator",
        "spec-id": "00447",
        "method-a": "org.apache.commons.validator.ValidatorResources.buildKey(Lorg/apache/commons/validator/FormSet;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getConstants()Ljava/util/Map;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 96,
        "code-snippets-file": "snippets/ls/00447.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:321",
                        "method-b-site": "ValidatorResources.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: from the result of the test, it seems that REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION happened (the return value of method-a was \"\" (the empty string), and any other return value would have caused a WARNING message and an assertion failure). However, since there is no variable assignment to the empty string, I'm not sure where it came from.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a does not change any field variables (it returns a String based on the argument FormSet). method-b is a 1-line naive getter to the field variable hConstants (ONE_STATELESS_METHOD), which is not related to any of the computations method-a does. Hence, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-21-13",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 216,
        "inspection-start-time": "2022-01-30-21-16",
        "project": "commons-validator",
        "spec-id": "00448",
        "method-a": "org.apache.commons.validator.ValidatorResources.buildKey(Lorg/apache/commons/validator/FormSet;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 16,
        "test-methods-mine-count": 84,
        "code-snippets-file": "snippets/ls/00448.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:321",
                        "method-b-site": "ValidatorResources.java:428",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: from the result of the test, it seems that REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION happened (the return value of method-a was \"\" (the empty string), and any other return value would have caused a WARNING message and an assertion failure). However, since there is no variable assignment to the empty string, I'm not sure where it came from.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a does not change any field variables (it returns a String based on the argument FormSet). method-b retrieves a Form object form either ValidatorResources.defaultFormSet or ValidatorResources.hFormSets using its String arguments. The use case makes a connection between method-a and method-b where the caller of method-a (ValidatorResources.addFormSet()) decides where to add the argument FormSet to based on the return value of method-a, which impacts whether method-b can retrieve the same FormSet. However, I think method-a by itself has no connection to method-b. Note that the computation of method-b and its caller includes a very similar computation as method-a itself (calling ValidatorResources.buildLocale()) CONNECTION_DOES_NOT_NECESSITATE_ORDERING?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-21-30",
        "inspection-time-in-minutes": 14
    },
    {
        "iid": 217,
        "inspection-start-time": "2022-01-30-21-30",
        "project": "commons-validator",
        "spec-id": "00449",
        "method-a": "org.apache.commons.validator.ValidatorResources.buildKey(Lorg/apache/commons/validator/FormSet;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/util/Locale;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 16,
        "test-methods-mine-count": 84,
        "code-snippets-file": "snippets/ls/00449.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:321",
                        "method-b-site": "Validator.java:360",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: from the result of the test, it seems that REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION happened (the return value of method-a was \"\" (the empty string), and any other return value would have caused a WARNING message and an assertion failure). However, since there is no variable assignment to the empty string, I'm not sure where it came from.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a does not change any field variables (it returns a String based on the language, country, and variant fields of the argument FormSet). method-b retrieves a Form object form either ValidatorResources.defaultFormSet or ValidatorResources.hFormSets. The use case makes a connection between method-a and method-b where the caller of method-a (ValidatorResources.addFormSet()) decides where to add the argument FormSet to based on the return value of method-a, which impacts whether method-b can retrieve the same FormSet. However, I think method-a by itself has no connection to method-b - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-21-34",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 218,
        "inspection-start-time": "2022-01-30-21-34",
        "project": "commons-validator",
        "spec-id": "00450",
        "method-a": "org.apache.commons.validator.ValidatorResources.buildKey(Lorg/apache/commons/validator/FormSet;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getValidatorActions()Ljava/util/Map;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 14,
        "test-methods-mine-count": 81,
        "code-snippets-file": "snippets/ls/00450.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:321",
                        "method-b-site": "Validator.java:365",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: from the result of the test, it seems that REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION happened (the return value of method-a was \"\" (the empty string), and any other return value would have caused a WARNING message and an assertion failure). However, since there is no variable assignment to the empty string, I'm not sure where it came from.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a does not change any field variables (it returns a String based on the language, country, and variant fields of the argument FormSet). method-b returns an unmodifiable list verion of the field variable ValidatorResources.hActions, which is not related to method-a in any way. Hence, this is UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-21-36",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 219,
        "inspection-start-time": "2022-01-30-21-36",
        "project": "commons-validator",
        "spec-id": "00451",
        "method-a": "org.apache.commons.validator.ValidatorResources.buildKey(Lorg/apache/commons/validator/FormSet;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorResources.process()V",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 96,
        "code-snippets-file": "snippets/ls/00451.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:321",
                        "method-b-site": "ValidatorTest.java:163",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: from the result of the test, it seems that REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION happened (the return value of method-a was \"\" (the empty string), and any other return value would have caused a WARNING message and an assertion failure). However, since there is no variable assignment to the empty string, I'm not sure where it came from.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a does not change any field variables (it returns a String based on the language, country, and variant fields of the argument FormSet). method-b processes/modifies the field variables ValidatorResources.defaultFormSet and ValidatorResources.hFormSets. The use case makes a connection between method-a and method-b where the caller of method-a (ValidatorResources.addFormSet()) decides where to add the argument FormSet to based on the return value of method-a, which impacts whether method-b can retrieve the same FormSet. However, I think in general, method-a has no connection to method-b - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-21-51",
        "inspection-time-in-minutes": 15
    },
    {
        "iid": 220,
        "inspection-start-time": "2022-01-30-21-51",
        "project": "commons-validator",
        "spec-id": "00452",
        "method-a": "org.apache.commons.validator.ValidatorResources.buildKey(Lorg/apache/commons/validator/FormSet;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.ValidatorResources.processForms()V",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 19,
        "test-methods-mine-count": 96,
        "code-snippets-file": "snippets/ls/00452.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:321",
                        "method-b-site": "ValidatorResources.java:522",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: from the result of the test, it seems that REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION happened (the return value of method-a was \"\" (the empty string), and any other return value would have caused a WARNING message and an assertion failure). However, since there is no variable assignment to the empty string, I'm not sure where it came from.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a does not change any field variables (it returns a String based on the language, country, and variant fields of the argument FormSet). method-b processes/modifies the field variables ValidatorResources.defaultFormSet and ValidatorResources.hFormSets. The use case makes a connection between method-a and method-b where the caller of method-a (ValidatorResources.addFormSet()) decides where to add the argument FormSet to based on the return value of method-a, which impacts whether method-b can retrieve the same FormSet. However, I think method-a by itself has no connection to method-b - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-30-21-54",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 221,
        "inspection-start-time": "2022-01-31-00-02",
        "project": "commons-validator",
        "spec-id": "00467",
        "method-a": "org.apache.commons.validator.ValidatorResources.getFormSet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/FormSet;",
        "method-b": "org.apache.commons.validator.ValidatorResources.addFormSet(Lorg/apache/commons/validator/FormSet;)V",
        "method-a-return-type": "org.apache.commons.validator.FormSet",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00467.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:73",
                        "method-b-site": "FormSetFactory.java:88",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION - method-a was supposed to return null in the test, and DSI replaced the return value of method-a with the default value null.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.EntityImportTest#testEntityImport",
        "notes": "method-a retrieves the appropriate FormSet value from ValidatorResources.hFormSets, or returns the field variable ValidatorResources.defaultFormSet. method-b takes in as argument a FormSet object, and either adds it to the map field variable ValidatorResources.hFormSets, or assigns the field variable ValidatorResources.defaultFormSet to it. The use case of method-a and method-b is one such that method-a is a check on whether method-b should be called in the first place (if method-a returns null, then method-b ought to be called because the FormSet value cannot be found from either of the two field variables). This is a case of CONNECTION_DOES_NOT_NECESSITATE_ORDERING, since one could call method-a and method-b in either order.",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-31-00-16",
        "inspection-time-in-minutes": 13
    },
    {
        "iid": 222,
        "inspection-start-time": "2022-01-31-00-16",
        "project": "commons-validator",
        "spec-id": "00468",
        "method-a": "org.apache.commons.validator.ValidatorResources.getFormSet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/FormSet;",
        "method-b": "org.apache.commons.validator.ValidatorResources.buildKey(Lorg/apache/commons/validator/FormSet;)Ljava/lang/String;",
        "method-a-return-type": "org.apache.commons.validator.FormSet",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00468.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:73",
                        "method-b-site": "ValidatorResources.java:321",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION - method-a was supposed to return null in the test, and DSI replaced the return value of method-a with the default value null.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.EntityImportTest#testEntityImport",
        "notes": "method-a retrieves the appropriate FormSet value from ValidatorResources.hFormSets, or returns the field variable ValidatorResources.defaultFormSet. method-b only accesses field variables from the input FormSet, which is not the FormSet that method-a returns. One could argue that method-a's return value could be passed into method-b, but I think that doesn't necessitate method-b being called after method-a (there's no use case of that sort in the project). So, I think this is a spurious spec. This could be a CONNECTION_DOES_NOT_NECESSITATE_ORDERING or a UNRELATED_STATEFUL_METHODS?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-00-29",
        "inspection-time-in-minutes": 13
    },
    {
        "iid": 223,
        "inspection-start-time": "2022-01-31-00-29",
        "project": "commons-validator",
        "spec-id": "00469",
        "method-a": "org.apache.commons.validator.ValidatorResources.getFormSet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/FormSet;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getConstants()Ljava/util/Map;",
        "method-a-return-type": "org.apache.commons.validator.FormSet",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00469.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:73",
                        "method-b-site": "ValidatorResources.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION - method-a was supposed to return null in the test, and DSI replaced the return value of method-a with the default value null.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.EntityImportTest#testEntityImport",
        "notes": "method-a retrieves the appropriate FormSet value from ValidatorResources.hFormSets, or returns the field variable ValidatorResources.defaultFormSet, and method-b is a 1-line naive getter to the field variable ValidatorResources.hConstants (ONE_STATELESS_METHOD), which is not related to either of the field variables accessed by method-a. So, I think this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-00-36",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 224,
        "inspection-start-time": "2022-01-31-00-36",
        "project": "commons-validator",
        "spec-id": "00470",
        "method-a": "org.apache.commons.validator.ValidatorResources.getFormSet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/FormSet;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "org.apache.commons.validator.FormSet",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 16,
        "test-methods-mine-count": 83,
        "code-snippets-file": "snippets/ls/00470.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:73",
                        "method-b-site": "ValidatorResources.java:428",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION - method-a was supposed to return null in the test, and DSI replaced the return value of method-a with the default value null.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.EntityImportTest#testEntityImport",
        "notes": "method-a retrieves the appropriate FormSet value from ValidatorResources.hFormSets, or returns the field variable ValidatorResources.defaultFormSet, and method-b retrieves the appropriate Form value from ValidatorResources.hFormSets, or returns the field variable ValidatorResources.defaultFormSet. Given that method-a and method-b both only retrieve from these field variables, I think this is a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-00-45",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 225,
        "inspection-start-time": "2022-01-31-00-45",
        "project": "commons-validator",
        "spec-id": "00471",
        "method-a": "org.apache.commons.validator.ValidatorResources.getFormSet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/FormSet;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/util/Locale;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "org.apache.commons.validator.FormSet",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 16,
        "test-methods-mine-count": 83,
        "code-snippets-file": "snippets/ls/00471.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.EntityImportTest#testEntityImport",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:73",
                        "method-b-site": "EntityImportTest.java:40",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION - method-a was supposed to return null in the test, and DSI replaced the return value of method-a with the default value null.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.EntityImportTest#testEntityImport",
        "notes": "method-a retrieves the appropriate FormSet value from ValidatorResources.hFormSets, or returns the field variable ValidatorResources.defaultFormSet, and method-b retrieves the appropriate Form value from ValidatorResources.hFormSets, or returns the field variable ValidatorResources.defaultFormSet. Given that method-a and method-b both only retrieve from these field variables, I think this is a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-00-47",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 226,
        "inspection-start-time": "2022-01-31-00-47",
        "project": "commons-validator",
        "spec-id": "00472",
        "method-a": "org.apache.commons.validator.ValidatorResources.getFormSet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/FormSet;",
        "method-b": "org.apache.commons.validator.ValidatorResources.getValidatorActions()Ljava/util/Map;",
        "method-a-return-type": "org.apache.commons.validator.FormSet",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 14,
        "test-methods-mine-count": 80,
        "code-snippets-file": "snippets/ls/00472.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:73",
                        "method-b-site": "Validator.java:365",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION - method-a was supposed to return null in the test, and DSI replaced the return value of method-a with the default value null.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a retrieves the appropriate FormSet value from ValidatorResources.hFormSets, or returns the field variable ValidatorResources.defaultFormSet, and method-b returns an unmodifiable list version of the field variable ValidatorResources.hActions, which is not related to either of the field variables accessed by method-a. Hence, this is a spurious spec - UNRELATED_STATEFUL_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-00-52",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 227,
        "inspection-start-time": "2022-01-31-00-52",
        "project": "commons-validator",
        "spec-id": "00473",
        "method-a": "org.apache.commons.validator.ValidatorResources.getFormSet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/FormSet;",
        "method-b": "org.apache.commons.validator.ValidatorResources.process()V",
        "method-a-return-type": "org.apache.commons.validator.FormSet",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00473.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:73",
                        "method-b-site": "ValidatorResources.java:164",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION - method-a was supposed to return null in the test, and DSI replaced the return value of method-a with the default value null.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a retrieves the appropriate FormSet value from ValidatorResources.hFormSets, or returns the field variable ValidatorResources.defaultFormSet. method-b modifies the contents of the field variables ValidatorResources.hFormSets and ValidatorResources.defaultFormSet. Since the variables that method-a accesses and method-b modifies are the same, there is definitely a connection between these two methods. However, I think that one could call method-a after method-b as well, since method-a only accesses the field variables (calling method-b could change the output of method-a eversoslightly, but I don't think that makes method-b a postcondition of method-a). So, this seems like a case of CONNECTION_DOES_NOT_NECESSITATE_ORDERING.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-01-06",
        "inspection-time-in-minutes": 14
    },
    {
        "iid": 228,
        "inspection-start-time": "2022-01-31-01-06",
        "project": "commons-validator",
        "spec-id": "00474",
        "method-a": "org.apache.commons.validator.ValidatorResources.getFormSet(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/FormSet;",
        "method-b": "org.apache.commons.validator.ValidatorResources.processForms()V",
        "method-a-return-type": "org.apache.commons.validator.FormSet",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 18,
        "test-methods-mine-count": 92,
        "code-snippets-file": "snippets/ls/00474.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.DateTest#testValidDate",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "FormSetFactory.java:73",
                        "method-b-site": "ValidatorResources.java:522",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION - method-a was supposed to return null in the test, and DSI replaced the return value of method-a with the default value null.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.DateTest#testValidDate",
        "notes": "method-a retrieves the appropriate FormSet value from ValidatorResources.hFormSets, or returns the field variable ValidatorResources.defaultFormSet. method-b modifies the contents of the field variables ValidatorResources.hFormSets and ValidatorResources.defaultFormSet. Since the variables that method-a accesses and method-b modifies are the same, there is definitely a connection between these two methods. However, I think that one could call method-a after method-b as well, since method-a only accesses the field variables (calling method-b could change the output of method-a eversoslightly, but I don't think that makes method-b a postcondition of method-a). So, this is a case of CONNECTION_DOES_NOT_NECESSITATE_ORDERING.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-01-11",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 229,
        "inspection-start-time": "2022-01-31-03-54",
        "project": "commons-validator",
        "spec-id": "00493",
        "method-a": "org.apache.commons.validator.ValidatorResources.process()V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 17,
        "test-methods-mine-count": 93,
        "code-snippets-file": "snippets/ls/00493.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:163",
                        "method-b-site": "ValidatorResources.java:428",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test is weak because it does not detect for the effects of calling method-a are not checked (not calling method-a at all would also make the test pass)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-a processes/further populates the field variables ValidatorResources.defaultFormSet and ValidatorResources.hFormSets, and method-b retrieves a Form object from either of the two field variables. Since it seems that method-a does not introduce any completely new Form objects to the ValidatorResources object (it can merge two FormSet objects together, in which case Form objects that belonged in either get populated so that both objects have it), and method-b retrieves a Form object as long as it exists in the ValidatorResources object, and since method-b returns a reference, it might be the case that one does not necessarily have to call method-a before method-b. CONNECTION_DOES_NOT_NECESSITATE_ORDERING?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-04-19",
        "inspection-time-in-minutes": 25
    },
    {
        "iid": 230,
        "inspection-start-time": "2022-01-31-04-19",
        "project": "commons-validator",
        "spec-id": "00494",
        "method-a": "org.apache.commons.validator.ValidatorResources.process()V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/util/Locale;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 17,
        "test-methods-mine-count": 93,
        "code-snippets-file": "snippets/ls/00494.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:163",
                        "method-b-site": "Validator.java:360",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test is weak because it does not detect for the effects of calling method-a are not checked (not calling method-a at all would also make the test pass)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "By extension of 00493 - method-a processes/further populates the field variables ValidatorResources.defaultFormSet and ValidatorResources.hFormSets, and method-b retrieves a Form object from either of the two field variables. Since it seems that method-a does not introduce any completely new Form objects to the ValidatorResources object (it can merge two FormSet objects together, in which case Form objects that belonged in either get populated so that both objects have it), and method-b retrieves a Form object as long as it exists in the ValidatorResources object, and since method-b returns a reference, it might be the case that one does not necessarily have to call method-a before method-b. CONNECTION_DOES_NOT_NECESSITATE_ORDERING?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-04-22",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 231,
        "inspection-start-time": "2022-01-31-04-26",
        "project": "commons-validator",
        "spec-id": "00496",
        "method-a": "org.apache.commons.validator.ValidatorResources.process()V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getValidatorActions()Ljava/util/Map;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 15,
        "test-methods-mine-count": 90,
        "code-snippets-file": "snippets/ls/00496.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorTest.java:163",
                        "method-b-site": "Validator.java:365",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test is weak because it does not detect for the effects of calling method-a are not checked (not calling method-a at all would also make the test pass)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-b retrieves an unmodifiable list reference to the field variable ValidatorResources.hActions. While method-a does manipulate ValidatorResources.hActions, it only does so by setting it to fast mode, which does not affects its contents. Hence, this is a spurious spec - CONNECTION_DOES_NOT_NECESSITATE_ORDERING.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-04-29",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 232,
        "inspection-start-time": "2022-01-31-04-34",
        "project": "commons-validator",
        "spec-id": "00499",
        "method-a": "org.apache.commons.validator.ValidatorResources.processForms()V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 17,
        "test-methods-mine-count": 93,
        "code-snippets-file": "snippets/ls/00499.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:522",
                        "method-b-site": "ValidatorResources.java:428",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test is weak because it does not detect for the effects of calling method-a are not checked (not calling method-a at all would also make the test pass)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "By extension of 00493 - method-a processes/further populates the field variables ValidatorResources.defaultFormSet and ValidatorResources.hFormSets, and method-b retrieves a Form object from either of the two field variables. Since it seems that method-a does not introduce any completely new Form objects to the ValidatorResources object (it can merge two FormSet objects together, in which case Form objects that belonged in either get populated so that both objects have it), and method-b retrieves a Form object as long as it exists in the ValidatorResources object, and since method-b returns a reference, it might be the case that one does not necessarily have to call method-a before method-b. CONNECTION_DOES_NOT_NECESSITATE_ORDERING?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-04-37",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 233,
        "inspection-start-time": "2022-01-31-04-37",
        "project": "commons-validator",
        "spec-id": "00500",
        "method-a": "org.apache.commons.validator.ValidatorResources.processForms()V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getForm(Ljava/util/Locale;Ljava/lang/String;)Lorg/apache/commons/validator/Form;",
        "method-a-return-type": "void",
        "method-b-return-type": "org.apache.commons.validator.Form",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 17,
        "test-methods-mine-count": 93,
        "code-snippets-file": "snippets/ls/00500.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:522",
                        "method-b-site": "Validator.java:360",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test is weak because it does not detect for the effects of calling method-a are not checked (not calling method-a at all would also make the test pass)."
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "By extension of 00494 - method-a processes/further populates the field variables ValidatorResources.defaultFormSet and ValidatorResources.hFormSets, and method-b retrieves a Form object from either of the two field variables. Since it seems that method-a does not introduce any completely new Form objects to the ValidatorResources object (it can merge two FormSet objects together, in which case Form objects that belonged in either get populated so that both objects have it), and method-b retrieves a Form object as long as it exists in the ValidatorResources object, and since method-b returns a reference, it might be the case that one does not necessarily have to call method-a before method-b. CONNECTION_DOES_NOT_NECESSITATE_ORDERING?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-04-39",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 234,
        "inspection-start-time": "2022-01-31-13-16",
        "project": "commons-validator",
        "spec-id": "00502",
        "method-a": "org.apache.commons.validator.ValidatorResources.processForms()V",
        "method-b": "org.apache.commons.validator.ValidatorResources.getValidatorActions()Ljava/util/Map;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.util.Map",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 15,
        "test-methods-mine-count": 90,
        "code-snippets-file": "snippets/ls/00502.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ValidatorResources.java:522",
                        "method-b-site": "Validator.java:365",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Commenting out method-a does not cause this test to fail"
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.ValidatorTest#testOnlyValidateField",
        "notes": "method-b retrieves an unmodifiable list reference to the field variable ValidatorResources.hActions. method-a modifies/populates the field variables ValidatorResources.hFormSets and ValidatorResources.defaultFormSet, which are not related to ValidatorResources.hActions. Hence, this is a spurious spec - UNRELATED_STATEFUL_METHODS?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-13-19",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 235,
        "inspection-start-time": "2022-01-31-15-39",
        "project": "commons-validator",
        "spec-id": "00511",
        "method-a": "org.apache.commons.validator.Var.getName()Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.Var.getValue()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00511.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.RetrieveFormTest#testFormNotFound",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Field.java:468",
                        "method-b-site": "Field.java:598",
                        "invocation-count": 12
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: Might have replaced with one of the three Strings that were the argument of addVar() (caller of the caller to method-a)? The test passes even when the return value of method-a was manually replaced with a bogus string value, or even null.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.RetrieveFormTest#testFormNotFound/snippet",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable Var.name, and method-b is a 1-line naive getter to the field variable Var.value.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-15-46",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 236,
        "inspection-start-time": "2022-01-31-19-08",
        "project": "commons-validator",
        "spec-id": "00528",
        "method-a": "org.apache.commons.validator.routines.AbstractFormatValidator.isStrict()Z",
        "method-b": "org.apache.commons.validator.routines.AbstractCalendarValidator.format(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00528.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractFormatValidator.java:187",
                        "method-b-site": "AbstractCalendarValidatorTest.java:188",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "GOOD_EXAMPLE: The return value of method-a in this test ought to be true, but DSI most likely replaced the return value with false. However, since the return value of method-a was in a && expression with an expression that evaluated to false, the replacement value did not make any difference here (refer to snippet).",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
        "notes": "method-a is a 1-line naive getter to the field variable AbstractFormatValidator.strict (ONE_STATELESS_METHOD), which is only set in the constructor of the class. Hence, this is a spurious spec. For reference, method-b returns a String formatted version of the Object argument using the String argument pattern.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-19-16",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 237,
        "inspection-start-time": "2022-01-31-19-16",
        "project": "commons-validator",
        "spec-id": "00529",
        "method-a": "org.apache.commons.validator.routines.AbstractFormatValidator.isStrict()Z",
        "method-b": "org.apache.commons.validator.routines.AbstractCalendarValidator.format(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00529.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractFormatValidator.java:187",
                        "method-b-site": "AbstractCalendarValidatorTest.java:189",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "GOOD_EXAMPLE: The return value of method-a in this test ought to be true, but DSI most likely replaced the return value with false. However, since the return value of method-a was in a && expression with an expression that evaluated to false, the replacement value did not make any difference here (refer to snippet).",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
        "notes": "method-a is a 1-line naive getter to the field variable AbstractFormatValidator.strict (ONE_STATELESS_METHOD), which is only set in the constructor of the class. Hence, this is a spurious spec. For reference, method-b returns a String formatted version of the Object argument using the Locale argument.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-19-18",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 238,
        "inspection-start-time": "2022-01-31-19-18",
        "project": "commons-validator",
        "spec-id": "00530",
        "method-a": "org.apache.commons.validator.routines.AbstractFormatValidator.isStrict()Z",
        "method-b": "org.apache.commons.validator.routines.AbstractCalendarValidator.getFormat(Ljava/util/Locale;)Ljava/text/Format;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.text.Format",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00530.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractFormatValidator.java:187",
                        "method-b-site": "AbstractCalendarValidator.java:217",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "GOOD_EXAMPLE: The return value of method-a in this test ought to be true, but DSI most likely replaced the return value with false. However, since the return value of method-a was in a && expression with an expression that evaluated to false, the replacement value did not make any difference here (refer to snippet).",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
        "notes": "method-a is a 1-line naive getter to the field variable AbstractFormatValidator.strict (ONE_STATELESS_METHOD), which is only set in the constructor of the class. Hence, this is a spurious spec. For reference, method-b uses its argument Locale object to determine a Format object for that Locale.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-19-24",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 239,
        "inspection-start-time": "2022-01-31-19-24",
        "project": "commons-validator",
        "spec-id": "00531",
        "method-a": "org.apache.commons.validator.routines.AbstractFormatValidator.isStrict()Z",
        "method-b": "org.apache.commons.validator.routines.AbstractFormatValidator.processParsedValue(Ljava/lang/Object;Ljava/text/Format;)Ljava/lang/Object;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/ls/00531.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractFormatValidator.java:187",
                        "method-b-site": "AbstractFormatValidator.java:192",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "GOOD_EXAMPLE: The return value of method-a in this test ought to be true, but DSI most likely replaced the return value with false. However, since the return value of method-a was in a && expression with an expression that evaluated to false, the replacement value did not make any difference here (refer to snippet).",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter for the field variable AbstractFormatValidator.strict, and the used implementation of method-b simply returns its Object argument.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-19-27",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 240,
        "inspection-start-time": "2022-01-31-19-27",
        "project": "commons-validator",
        "spec-id": "00532",
        "method-a": "org.apache.commons.validator.routines.AbstractFormatValidator.isValid(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Z",
        "method-b": "org.apache.commons.validator.routines.BigDecimalValidator.isValid(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00532.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CurrencyValidatorTest#testPattern",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractFormatValidator.java:88",
                        "method-b-site": "CurrencyValidatorTest.java:192",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_EXPECTED_OUTPUT - method-a would have returned false, and DSI replaced the return value of method-a with the default value false. Moreover, the return value of method-a is checked via an assertFalse().",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "DYNAMIC_DISPATCH_SAME_METHOD.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-19-39",
        "inspection-time-in-minutes": 12
    },
    {
        "iid": 241,
        "inspection-start-time": "2022-01-31-19-39",
        "project": "commons-validator",
        "spec-id": "00533",
        "method-a": "org.apache.commons.validator.routines.AbstractFormatValidator.processParsedValue(Ljava/lang/Object;Ljava/text/Format;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.routines.AbstractCalendarValidator.format(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00533.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractFormatValidator.java:192",
                        "method-b-site": "AbstractCalendarValidatorTest.java:188",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION - DSI most likely returned the return value of method-a with the Object variable parsedValue, which is the argument to method-a. The specific implementation of method-a that is being used simply returns that argument, so the replaced value via DSI was actually correct.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
        "notes": "The used implementation of method-a is a 1-line method that returns the Object argument (ONE_STATELESS_METHOD), so calling method-a would be a no-op in the use case of this test. It seems that method-a in general simply applies further operation to the input Object value, which could be passed to method-b as an argument; however, I don't think that method-a always needs to be called before method-b. method-b returns a formatted String based off of the Object argument, using the String argument as a pattern.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-19-51",
        "inspection-time-in-minutes": 12
    },
    {
        "iid": 242,
        "inspection-start-time": "2022-01-31-19-51",
        "project": "commons-validator",
        "spec-id": "00534",
        "method-a": "org.apache.commons.validator.routines.AbstractFormatValidator.processParsedValue(Ljava/lang/Object;Ljava/text/Format;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.routines.AbstractCalendarValidator.format(Ljava/lang/Object;Ljava/util/Locale;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00534.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractFormatValidator.java:192",
                        "method-b-site": "AbstractCalendarValidatorTest.java:189",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION - DSI most likely returned the return value of method-a with the Object variable parsedValue, which is the argument to method-a. The specific implementation of method-a that is being used simply returns that argument, so the replaced value via DSI was actually correct.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
        "notes": "The used implementation of method-a is a 1-line method that returns the Object argument (ONE_STATELESS_METHOD), so calling method-a would be a no-op in the use case of this test. It seems that method-a in general simply applies further operation to the input Object value, which could be passed to method-b as an argument; however, I don't think that method-a always needs to be called before method-b. method-b returns a formatted String based off the Object argument, using the Locale argument to specify the formatting.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-19-57",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 243,
        "inspection-start-time": "2022-01-31-19-57",
        "project": "commons-validator",
        "spec-id": "00535",
        "method-a": "org.apache.commons.validator.routines.AbstractFormatValidator.processParsedValue(Ljava/lang/Object;Ljava/text/Format;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.validator.routines.AbstractCalendarValidator.getFormat(Ljava/util/Locale;)Ljava/text/Format;",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "java.text.Format",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00535.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractFormatValidator.java:192",
                        "method-b-site": "AbstractCalendarValidator.java:217",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION - DSI most likely returned the return value of method-a with the Object variable parsedValue, which is the argument to method-a. The specific implementation of method-a that is being used simply returns that argument, so the replaced value via DSI was actually correct.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testFormat",
        "notes": "By extension of 00534 -The used implementation of method-a is a 1-line method that returns the Object argument (ONE_STATELESS_METHOD), so calling method-a would be a no-op in the use case of this test. It seems that method-a in general simply applies further operation to the input Object value, which could be passed to method-b as an argument; however, I don't think that method-a always needs to be called before method-b. method-b returns a Format object that ought to be created, using the information from the Locale argument.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-20-03",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 244,
        "inspection-start-time": "2022-01-31-20-09",
        "project": "commons-validator",
        "spec-id": "00537",
        "method-a": "org.apache.commons.validator.routines.BigDecimalValidator.isValid(Ljava/lang/String;Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.BigDecimalValidator.isValid(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00537.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CurrencyValidatorTest#testPattern",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "CurrencyValidatorTest.java:191",
                        "method-b-site": "CurrencyValidatorTest.java:192",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_EXPECTED_OUTPUT - method-a would have returned false, and DSI replaced the return value of method-a with the default value false. Moreover, the return value of method-a is checked via an assertFalse().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CurrencyValidatorTest#testPattern",
        "notes": "Note that there is a kind of a no-break-pass situation going on where method-a calls method-b, but just under a different (a parent) class due to DYNAMIC_DISPATCH. REVERSE_NBP SPECIAL_NBP",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-31-20-13",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 245,
        "inspection-start-time": "2022-02-01-02-24",
        "project": "commons-validator",
        "spec-id": "00557",
        "method-a": "org.apache.commons.validator.routines.CodeValidator.getRegexValidator()Lorg/apache/commons/validator/routines/RegexValidator;",
        "method-b": "org.apache.commons.validator.routines.CodeValidator.getCheckDigit()Lorg/apache/commons/validator/routines/checkdigit/CheckDigit;",
        "method-a-return-type": "org.apache.commons.validator.routines.RegexValidator",
        "method-b-return-type": "org.apache.commons.validator.routines.checkdigit.CheckDigit",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00557.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CodeValidatorTest#testConstructors",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "CodeValidatorTest.java:221",
                        "method-b-site": "CodeValidatorTest.java:224",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:228",
                        "method-b-site": "CodeValidatorTest.java:231",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:235",
                        "method-b-site": "CodeValidatorTest.java:238",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:242",
                        "method-b-site": "CodeValidatorTest.java:245",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:249",
                        "method-b-site": "CodeValidatorTest.java:252",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:256",
                        "method-b-site": "CodeValidatorTest.java:259",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT - each invocation of method-a was replaced by the RegexValidator variable regex, which was passed into the constructor. Since it was passed into the constructor, method-a ought to always return that regex.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CodeValidatorTest#testConstructors",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable CodeValidator.regexValidator, and method-b is a 1-line naive getter to the field variable CodeValidator.checkdigit.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-02-29",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 246,
        "inspection-start-time": "2022-02-01-02-35",
        "project": "commons-validator",
        "spec-id": "00558",
        "method-a": "org.apache.commons.validator.routines.CodeValidator.getRegexValidator()Lorg/apache/commons/validator/routines/RegexValidator;",
        "method-b": "org.apache.commons.validator.routines.CodeValidator.getMaxLength()I",
        "method-a-return-type": "org.apache.commons.validator.routines.RegexValidator",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00558.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CodeValidatorTest#testConstructors",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "CodeValidatorTest.java:221",
                        "method-b-site": "CodeValidatorTest.java:223",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:228",
                        "method-b-site": "CodeValidatorTest.java:230",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:235",
                        "method-b-site": "CodeValidatorTest.java:237",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:242",
                        "method-b-site": "CodeValidatorTest.java:244",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:249",
                        "method-b-site": "CodeValidatorTest.java:251",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:256",
                        "method-b-site": "CodeValidatorTest.java:258",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT - each invocation of method-a was replaced by the RegexValidator variable regex, which was passed into the constructor. Since it was passed into the constructor, method-a ought to always return that regex.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CodeValidatorTest#testConstructors",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable CodeValidator.regexvalidator, and method-b is a 1-line naive getter to the field variable CodeValidator.maxLength.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-02-37",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 247,
        "inspection-start-time": "2022-02-01-02-37",
        "project": "commons-validator",
        "spec-id": "00559",
        "method-a": "org.apache.commons.validator.routines.CodeValidator.getRegexValidator()Lorg/apache/commons/validator/routines/RegexValidator;",
        "method-b": "org.apache.commons.validator.routines.CodeValidator.getMinLength()I",
        "method-a-return-type": "org.apache.commons.validator.routines.RegexValidator",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00559.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.CodeValidatorTest#testConstructors",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "CodeValidatorTest.java:221",
                        "method-b-site": "CodeValidatorTest.java:222",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:228",
                        "method-b-site": "CodeValidatorTest.java:229",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:235",
                        "method-b-site": "CodeValidatorTest.java:236",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:242",
                        "method-b-site": "CodeValidatorTest.java:243",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:249",
                        "method-b-site": "CodeValidatorTest.java:250",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "CodeValidatorTest.java:256",
                        "method-b-site": "CodeValidatorTest.java:257",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT - each invocation of method-a was replaced by the RegexValidator variable regex, which was passed into the constructor. Since it was passed into the constructor, method-a ought to always return that regex.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.CodeValidatorTest#testConstructors",
        "notes": "UNRELATED_STATELESS_METHODS - method-a is a 1-line naive getter to the field variable CodeValidator.regexvalidator, and method-b is a 1-line naive getter to the field variable CodeValidator.minLength.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-02-39",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 248,
        "inspection-start-time": "2022-02-01-02-45",
        "project": "commons-validator",
        "spec-id": "00561",
        "method-a": "org.apache.commons.validator.routines.DateValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Date;",
        "method-b": "org.apache.commons.validator.routines.DateValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Date;",
        "method-a-return-type": "java.util.Date",
        "method-b-return-type": "java.util.Date",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00561.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testDateValidatorMethods",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DateValidatorTest.java:109",
                        "method-b-site": "DateValidatorTest.java:110",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT - DSI replaced the return value of method-a with the Date object expectedZone, which is the value that the return value of method-a was compared against in an assertEquals().",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testDateValidatorMethods",
        "notes": "snippets show that method-a and method-b are both wrappers for the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)), so there is no ordering relationship between method-a and method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-02-51",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 249,
        "inspection-start-time": "2022-02-01-02-51",
        "project": "commons-validator",
        "spec-id": "00562",
        "method-a": "org.apache.commons.validator.routines.DateValidator.validate(Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Date;",
        "method-b": "org.apache.commons.validator.routines.DateValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Date;",
        "method-a-return-type": "java.util.Date",
        "method-b-return-type": "java.util.Date",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00562.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testDateValidatorMethods",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DateValidatorTest.java:108",
                        "method-b-site": "DateValidatorTest.java:110",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT - DSI replaced the return value of method-a with the Date object expectedZone, which is the value that the return value of method-a was compared against in an assertEquals().",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testDateValidatorMethods",
        "notes": "snippets show that method-a and method-b are both wrappers for the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)), so there is no ordering relationship between method-a and method-b. CONNECTION_DOES_NOT_NECESSITATE_ORDERING.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-02-53",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 250,
        "inspection-start-time": "2022-02-01-02-53",
        "project": "commons-validator",
        "spec-id": "00563",
        "method-a": "org.apache.commons.validator.routines.DateValidator.validate(Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Date;",
        "method-b": "org.apache.commons.validator.routines.DateValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Date;",
        "method-a-return-type": "java.util.Date",
        "method-b-return-type": "java.util.Date",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00563.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testDateValidatorMethods",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DateValidatorTest.java:108",
                        "method-b-site": "DateValidatorTest.java:109",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT - DSI replaced the return value of method-a with the Date object expectedZone, which is the value that the return value of method-a was compared against in an assertEquals().",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testDateValidatorMethods",
        "notes": "snippets show that method-a and method-b are both wrappers for the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)), so there is no ordering relationship between method-a and method-b. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-02-55",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 251,
        "inspection-start-time": "2022-02-01-02-55",
        "project": "commons-validator",
        "spec-id": "00564",
        "method-a": "org.apache.commons.validator.routines.DateValidator.validate(Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Date;",
        "method-b": "org.apache.commons.validator.routines.DateValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Date;",
        "method-a-return-type": "java.util.Date",
        "method-b-return-type": "java.util.Date",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00564.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testDateValidatorMethods",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DateValidatorTest.java:107",
                        "method-b-site": "DateValidatorTest.java:110",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT - DSI replaced the return value of method-a with the Date object expectedZone, which is the value that the return value of method-a was compared against in an assertEquals().",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testDateValidatorMethods",
        "notes": "snippets show that method-a and method-b are both wrappers for the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)), so there is no ordering relationship between method-a and method-b. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-02-56",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 252,
        "inspection-start-time": "2022-02-01-02-56",
        "project": "commons-validator",
        "spec-id": "00565",
        "method-a": "org.apache.commons.validator.routines.DateValidator.validate(Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Date;",
        "method-b": "org.apache.commons.validator.routines.DateValidator.validate(Ljava/lang/String;Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Date;",
        "method-a-return-type": "java.util.Date",
        "method-b-return-type": "java.util.Date",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00565.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testDateValidatorMethods",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DateValidatorTest.java:107",
                        "method-b-site": "DateValidatorTest.java:109",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT - DSI replaced the return value of method-a with the Date object expectedZone, which is the value that the return value of method-a was compared against in an assertEquals().",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testDateValidatorMethods",
        "notes": "snippets show that method-a and method-b are both wrappers for the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)), so there is no ordering relationship between method-a and method-b. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-02-57",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 253,
        "inspection-start-time": "2022-02-01-02-57",
        "project": "commons-validator",
        "spec-id": "00566",
        "method-a": "org.apache.commons.validator.routines.DateValidator.validate(Ljava/lang/String;Ljava/util/TimeZone;)Ljava/util/Date;",
        "method-b": "org.apache.commons.validator.routines.DateValidator.validate(Ljava/lang/String;Ljava/util/Locale;Ljava/util/TimeZone;)Ljava/util/Date;",
        "method-a-return-type": "java.util.Date",
        "method-b-return-type": "java.util.Date",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00566.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DateValidatorTest#testDateValidatorMethods",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DateValidatorTest.java:107",
                        "method-b-site": "DateValidatorTest.java:108",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT - DSI replaced the return value of method-a with the Date object expectedZone, which is the value that the return value of method-a was compared against in an assertEquals().",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DateValidatorTest#testDateValidatorMethods",
        "notes": "snippets show that method-a and method-b are both wrappers for the same method (AbstractCalendarValidator.parse(String, String, Locale, TimeZone)), so there is no ordering relationship between method-a and method-b. CONNECTION_DOES_NOT_NECESSITATE_ORDERING",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-02-58",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 254,
        "inspection-start-time": "2022-02-01-14-28",
        "project": "commons-validator",
        "spec-id": "00572",
        "method-a": "org.apache.commons.validator.routines.DomainValidator.isValidGenericTld(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.DomainValidator.isValidCountryCodeTld(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/ls/00572.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DomainValidatorTest#testIDN",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DomainValidator.java:326",
                        "method-b-site": "DomainValidator.java:327",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "GOOD_EXAMPLE + REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION - method-a and method-b are called together in a short-circuit OR, so if method-a was replaced with true then the DSI experiment would have resulted in a stage-0.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DomainValidatorTest#testIDN",
        "notes": "method-a and method-b are both different checks on the specified argument String; their only relationship is that their caller calls them in a short circuit OR. there is no ordering relationship between the two methods. UNRELATED_STATELESS_METHODS.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-14-36",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 255,
        "inspection-start-time": "2022-02-01-14-46",
        "project": "commons-validator",
        "spec-id": "00573",
        "method-a": "org.apache.commons.validator.routines.DomainValidator.isValidInfrastructureTld(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.DomainValidator.isValidCountryCodeTld(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/ls/00573.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DomainValidatorTest#testIDN",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DomainValidator.java:325",
                        "method-b-site": "DomainValidator.java:327",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION - method-a and method-b are called together in a short-circuit OR, so if method-a was replaced with true then the DSI experiment would have resulted in a stage-0.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DomainValidatorTest#testIDN",
        "notes": "method-a and method-b are both different checks on the specified argument String; their only relationship is that their caller calls them in a short circuit OR. there is no ordering relationship between the two methods. UNRELATED_STATELESS_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-14-50",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 256,
        "inspection-start-time": "2022-02-01-14-50",
        "project": "commons-validator",
        "spec-id": "00574",
        "method-a": "org.apache.commons.validator.routines.DomainValidator.isValidInfrastructureTld(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.DomainValidator.isValidGenericTld(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 23,
        "code-snippets-file": "snippets/ls/00574.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.DomainValidatorTest#testIDN",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DomainValidator.java:325",
                        "method-b-site": "DomainValidator.java:326",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION - method-a and method-b are called together in a short-circuit OR, so if method-a was replaced with true then the DSI experiment would have resulted in a stage-0.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.DomainValidatorTest#testIDN",
        "notes": "method-a and method-b are both different checks on the specified argument String; their only relationship is that their caller calls them in a short circuit OR. there is no ordering relationship between the two methods. UNRELATED_STATELESS_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-14-54",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 257,
        "inspection-start-time": "2022-02-01-15-30",
        "project": "commons-validator",
        "spec-id": "00581",
        "method-a": "org.apache.commons.validator.routines.IBANValidator.createValidators([Lorg/apache/commons/validator/routines/IBANValidator$Validator;)Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.routines.IBANValidator.getValidator(Ljava/lang/String;)Lorg/apache/commons/validator/routines/IBANValidator$Validator;",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "org.apache.commons.validator.routines.IBANValidator$Validator",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00581.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.IBANValidatorTest#testNull",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "IBANValidator.java:228",
                        "method-b-site": "IBANValidator.java:246",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DSI most likely replaced the return value of method-a with null. The test only passed because it is weak, and simply checked that passing null to IBANValidator.isValid() would return false. IBANValidator.isValid()/method-b checks the input before doing any operations with respect to the field variable IBANValidator.formatValidators.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "precondition",
        "validating-test-file": "org.apache.commons.validator.routines.IBANValidatorTest#testNull but set this.formatValidators to null, and replace the null in the test with a bogus string value with length greater than or equal to 2 will show the connection between method-a and method-b.",
        "notes": "The return value of method-a is set to the field variable IBANValidator.formatValidators (IBANValidator.formatValidators is only set to the return value of method-a and nothing else). method-b retrieves a Validator object from IBANValidator.formatValidators, so I believe one must call method-a before method-b to avoid a NullPointerException or an incorrect result of calling method-b. However, this relationship exists only because the constructor of IBANValidator sets IBANValidator.formatValidators to be the return value of method-a. Decision: this seems like a CONNECTION_DOES_NOT_NECESSITATE_ORDERING case. The relation here is that IBANValidator.formatValidators need to be set to a non-null value, before method-b is called. method-a by itself does not achieve this. The actual spec would probably something across the lines of calling IBANValidator() before calling method-b.",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-02-01-15-47",
        "inspection-time-in-minutes": 17
    },
    {
        "iid": 258,
        "inspection-start-time": "2022-02-01-15-47",
        "project": "commons-validator",
        "spec-id": "00582",
        "method-a": "org.apache.commons.validator.routines.IBANValidator.createValidators([Lorg/apache/commons/validator/routines/IBANValidator$Validator;)Ljava/util/Map;",
        "method-b": "org.apache.commons.validator.routines.IBANValidator.isValid(Ljava/lang/String;)Z",
        "method-a-return-type": "java.util.Map",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00582.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.IBANValidatorTest#testNull",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "IBANValidator.java:228",
                        "method-b-site": "IBANValidatorTest.java:172",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DSI most likely replaced the return value of method-a with null. The test only passed because it is weak, and simply checked that passing null to IBANValidator.isValid() would return false. method-b checks the input before doing any operations with respect to the field variable IBANValidator.formatValidators.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.IBANValidatorTest#testNull but set this.formatValidators to null, and replace the null in the test with a bogus string value that has length greater than or equal to 2 shows the connection between method-a and method-b.",
        "notes": "The return value of method-a is set to the field variable IBANValidator.formatValidators (IBANValidator.formatValidators is only set to the return value of method-a and nothing else). As a part of its computations, method-b retrieves a Validator object from IBANValidator.formatValidators, so I believe one must call method-a before method-b to avoid a NullPointerException or an incorrect result of calling method-b. However, this relationship exists only because the constructor of IBANValidator sets IBANValidator.formatValidators to be the return value of method-a. Decision: this seems like a CONNECTION_DOES_NOT_NECESSITATE_ORDERING case. The relation here is that IBANValidator.formatValidators need to be set to a non-null value, before method-b is called. method-a by itself does not achieve this. The actual spec would probably something across the lines of calling IBANValidator() before calling method-b.",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-02-01-15-51",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 259,
        "inspection-start-time": "2022-02-01-18-01",
        "project": "commons-validator",
        "spec-id": "00585",
        "method-a": "org.apache.commons.validator.routines.ISBNValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.ISBNValidator.convertToISBN13(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00585.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.ISBNValidatorTest#testNull",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ISBNValidatorTest.java:250",
                        "method-b-site": "ISBNValidatorTest.java:256",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_EXPECTED_OUTPUT - method-a was expected to return false (assertFalse()), and DSI replaced the return value of method-a with the default value false.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.ISBNValidatorTest#testNull",
        "notes": "There doesn't seem to be anything in relation between the two methods. They both take in a different String value; method-a applies validation checks, and method-b returns a converted version of the input string. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-18-12",
        "inspection-time-in-minutes": 11
    },
    {
        "iid": 260,
        "inspection-start-time": "2022-02-01-18-12",
        "project": "commons-validator",
        "spec-id": "00586",
        "method-a": "org.apache.commons.validator.routines.ISBNValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.ISBNValidator.validate(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00586.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.ISBNValidatorTest#testNull",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ISBNValidatorTest.java:250",
                        "method-b-site": "ISBNValidatorTest.java:253",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_EXPECTED_OUTPUT - method-a was expected to return false (assertFalse()), and DSI replaced the return value of method-a with the default value false.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.ISBNValidatorTest#testNull",
        "notes": "There doesn't seem to be anything in relation between the two methods. They both take in a different String value; method-a checks whether the input is valid, and method-b also checks whether the input is valid but also processes the String further. UNRELATED_STATEFUL_METHODS",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-18-18",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 261,
        "inspection-start-time": "2022-02-01-18-40",
        "project": "commons-validator",
        "spec-id": "00591",
        "method-a": "org.apache.commons.validator.routines.InetAddressValidator.isValidInet4Address(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.InetAddressValidator.isValidInet6Address(Ljava/lang/String;)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00591.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.InetAddressValidatorTest#testVALIDATOR_335",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "InetAddressValidator.java:80",
                        "method-b-site": "InetAddressValidator.java:80",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION - method-a and method-b are called together in a short circuit OR, which means that in order for method-b to even be reached, method-a has to return false in this test. DSI replaced the return value of method-a with the default value false.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.InetAddressValidatorTest#testVALIDATOR_335",
        "notes": "method-a and method-b both check a particular String value to see whether it is a valid IPv4 address (method-a) or a valid IPv6 address (method-b). It most likely would not matter whether method-a or method-b was called first here. Note that method-b actually calls method-a as a part of its routines, so it's sort of a REVERSE_NBP. UNRELATED_STATEFUL_METHODS?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-18-46",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 262,
        "inspection-start-time": "2022-02-01-20-46",
        "project": "commons-validator",
        "spec-id": "00593",
        "method-a": "org.apache.commons.validator.routines.RegexValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.RegexValidator.match(Ljava/lang/String;)[Ljava/lang/String;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.String[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00593.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.RegexValidatorTest#testNullValue",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "RegexValidatorTest.java:183",
                        "method-b-site": "RegexValidatorTest.java:185",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_EXPECTED_OUTPUT - method-a was expected to return false (via an assertEquals() to false), and DSI replaced the return value of method-a with false.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.RegexValidatorTest#testNullValue",
        "notes": "method-a and method-b roughly accomplish the same thing, with method-b returning more information; they both validate whether the input string matches some item in the set of regular expressions, and method-b returns the groups that are matched in the case that the input string does match. There doesn't seem to be an ordering relationship between the two methods - CONNECTION_DOES_NOT_NECESSITATE_ORDERING.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-20-50",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 263,
        "inspection-start-time": "2022-02-01-21-10",
        "project": "commons-validator",
        "spec-id": "00594",
        "method-a": "org.apache.commons.validator.routines.RegexValidator.isValid(Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.validator.routines.RegexValidator.validate(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/ls/00594.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.RegexValidatorTest#testNullValue",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "RegexValidatorTest.java:183",
                        "method-b-site": "RegexValidatorTest.java:184",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_EXPECTED_OUTPUT - method-a was expected to return false (via an assertEquals() to false), and DSI replaced the return value of method-a with false.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.RegexValidatorTest#testNullValue",
        "notes": "method-a and method-b roughly accomplish the same thing, with method-b returning more information; they both validate whether the input string matches some item in the set of regular expressions, and method-b returns as a String the groups that are matched in the case that the input string does match. There doesn't seem to be an ordering relationship between the two methods - CONNECTION_DOES_NOT_NECESSITATE_ORDERING.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-01-21-13",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 264,
        "inspection-start-time": "2022-02-02-00-18",
        "project": "commons-validator",
        "spec-id": "00621",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.countToken(Ljava/lang/String;Ljava/lang/String;)I",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.isValidFragment(Ljava/lang/String;)Z",
        "method-a-return-type": "int",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 8,
        "code-snippets-file": "snippets/ls/00621.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:462",
                        "method-b-site": "UrlValidator.java:337",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_EXPECTED_OUTPUT - method-a in the test execution returns 0, and DSI most likely replaced the return value of method-a with the default int value 0.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
        "notes": "UNRELATED_STATEFUL_METHODS - while method-a declares and returns a local variable and method-b does access a field variable (UrlValidator.option), neither of these methods modify any state from UrlValidator. method-a takes in a String token and a String target, and returns the number of times the token appears in the target, and method-b does some checks on the argument and UrlValidator.option. These methods seem unrelated and thus this is most likely a spurious spec. No test relies on method-a returning a non-zero value.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-00-31",
        "inspection-time-in-minutes": 13
    },
    {
        "iid": 265,
        "inspection-start-time": "2022-02-02-00-31",
        "project": "commons-validator",
        "spec-id": "00622",
        "method-a": "org.apache.commons.validator.routines.UrlValidator.countToken(Ljava/lang/String;Ljava/lang/String;)I",
        "method-b": "org.apache.commons.validator.routines.UrlValidator.isValidQuery(Ljava/lang/String;)Z",
        "method-a-return-type": "int",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 8,
        "code-snippets-file": "snippets/ls/00622.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "UrlValidator.java:462",
                        "method-b-site": "UrlValidator.java:333",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_EXPECTED_OUTPUT - method-a in the test execution returns 0, and DSI most likely replaced the return value of method-a with the default int value 0.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.UrlValidatorTest#testValidator202",
        "notes": "UNRELATED_STATEFUL_METHODS - while method-a declares and returns a local variable and method-b does access a field variable (UrlValidator.QUERY_PATTERN), neither of these methods modify any state from UrlValidator. method-a takes in a String token and a String target, and returns the number of times the token appears in the target, and method-b does some checks on the argument using the field variable UrlValidator.QUERY_PATTERN and the Java Matcher. These methods seem unrelated and thus this is most likely a spurious spec. No test relies on method-a returning a non-zero value.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-00-35",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 266,
        "inspection-start-time": "2022-02-02-12-51",
        "project": "commons-validator",
        "spec-id": "00644",
        "method-a": "org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest.checkDigit(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest.removeCheckDigit(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 14,
        "code-snippets-file": "snippets/ls/00644.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.checkdigit.ABANumberCheckDigitTest#testCalculateInvalid",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "AbstractCheckDigitTest.java:187",
                        "method-b-site": "AbstractCheckDigitTest.java:188",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DSI replaced the return value of method-a with the String variable code. While this isn't equal to the value that method-a should return on a normal test execution, the test still passed because the replaced return value of method-a was not equal to method-b. In that sense, this is a weak oracle.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.checkdigit.ABANumberCheckDigitTest#testCalculateInvalid",
        "notes": "UNRELATED_STATEFUL_METHODS - method-a and method-b define local variables, but they don't change the state of AbstractCheckDigitTest, and their return variables are not set to field variables either. This is a spurious spec because method-a simply returns the check digit portion of the input String code, and method-b returns all but the check digit portion of the input String code. Note that the two methods in the spec were DEFINED_IN_ABSTRACT_TEST_CLASS - they should not have been included in the set that DSI experiments over!",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-13-08",
        "inspection-time-in-minutes": 17
    },
    {
        "iid": 267,
        "inspection-start-time": "2022-02-02-13-32",
        "project": "commons-validator",
        "spec-id": "00645",
        "method-a": "org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest.setUp()V",
        "method-b": "org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest.checkDigit(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 14,
        "code-snippets-file": "snippets/ls/00645.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.checkdigit.ABANumberCheckDigitTest#testCalculateInvalid",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ABANumberCheckDigitTest.java:41",
                        "method-b-site": "AbstractCheckDigitTest.java:187",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.checkdigit.ABANumberCheckDigitTest#testCalculateInvalid",
        "notes": "AbstractCheckDigitTest.setUp() is actually defined in TestCase, which is a third party class (and its definition most likely does not do anything - ONE_STATELESS_METHOD?). Note that the two methods in the spec were DEFINED_IN_ABSTRACT_TEST_CLASS - they should not have been included in the set that DSI experiments over! For reference, it seems that method-b does the testing for the CheckDigit.calculate() method.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-13-38",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 268,
        "inspection-start-time": "2022-02-02-13-38",
        "project": "commons-validator",
        "spec-id": "00646",
        "method-a": "org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest.setUp()V",
        "method-b": "org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest.createInvalidCodes([Ljava/lang/String;)[Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 16,
        "code-snippets-file": "snippets/ls/00646.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.checkdigit.ABANumberCheckDigitTest#testIsValidFalse",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ABANumberCheckDigitTest.java:41",
                        "method-b-site": "AbstractCheckDigitTest.java:138",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.checkdigit.ABANumberCheckDigitTest#testIsValidFalse",
        "notes": "AbstractCheckDigitTest.setUp() is actually defined in TestCase, which is a third party class (and its definition most likely does not do anything - ONE_STATELESS_METHOD?). Note that the two methods in the spec were DEFINED_IN_ABSTRACT_TEST_CLASS - they should not have been included in the set that DSI experiments over! For reference, method-b takes in the String[] argument containing codes with valid check digits, and returns a series of invalid check digits.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-13-40",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 269,
        "inspection-start-time": "2022-02-02-13-40",
        "project": "commons-validator",
        "spec-id": "00647",
        "method-a": "org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest.setUp()V",
        "method-b": "org.apache.commons.validator.routines.checkdigit.AbstractCheckDigitTest.removeCheckDigit(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "void",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 14,
        "code-snippets-file": "snippets/ls/00647.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.checkdigit.ABANumberCheckDigitTest#testCalculateInvalid",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ABANumberCheckDigitTest.java:41",
                        "method-b-site": "AbstractCheckDigitTest.java:188",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.checkdigit.ABANumberCheckDigitTest#testCalculateInvalid",
        "notes": "AbstractCheckDigitTest.setUp() is actually defined in TestCase, which is a third party class (and its definition most likely does not do anything - ONE_STATELESS_METHOD?). Note that the two methods in the spec were DEFINED_IN_ABSTRACT_TEST_CLASS - they should not have been included in the set that DSI experiments over! method-b returns all but the last character of the String argument.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-13-43",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 270,
        "inspection-start-time": "2022-02-02-14-33",
        "project": "commons-validator",
        "spec-id": "00654",
        "method-a": "org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.calculateModulus(Ljava/lang/String;Z)I",
        "method-b": "org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.toCheckDigit(I)Ljava/lang/String;",
        "method-a-return-type": "int",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/ls/00654.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.checkdigit.ABANumberCheckDigitTest#testCalculateInvalid",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ModulusCheckDigit.java:95",
                        "method-b-site": "ModulusCheckDigit.java:97",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DEFAULT_VALUE_SAME_AS_RETURN/REPLACE_RETURN_WITH_CORRECT_VALUE_NONASSERTION - method-a in a normal execution returns 0, and DSI replaced the return value of method-a with the default value 0.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": false,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.checkdigit.ABANumberCheckDigitTest#testCalculateInvalid",
        "notes": "The use case here is one such that the return value of method-a is applied to some computation, the result of which is passed into method-b. method-a calculates the modulus for the input String argument code, with the boolean argument signifying whether the String argument contains the checksum or not. method-b returns the String check digit of the Integer argument. Both method-a and method-b can throw an exception. In the general sense, I don't think method-a is always necessarily needed to call method-b (one can simply pass in a hard-coded int value to method-b if they wanted to see the check digit of that integer). So, I think this is a spurious spec - CONNECTION_DOES_NOT_NECESSITATE_ORDERING?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-14-42",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 271,
        "inspection-start-time": "2022-02-02-16-04",
        "project": "commons-validator",
        "spec-id": "00661",
        "method-a": "org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.toInt(CII)I",
        "method-b": "org.apache.commons.validator.routines.checkdigit.ModulusCheckDigit.weightedValue(III)I",
        "method-a-return-type": "int",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 11,
        "code-snippets-file": "snippets/ls/00661.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.validator.routines.checkdigit.ModulusTenABACheckDigitTest#testMissingCode",
                "stage": "stage-3-complete",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "ModulusCheckDigit.java:115",
                        "method-b-site": "ModulusCheckDigit.java:116",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "DSI most likely replaced the return value of method-a with the int variable rightPos (which contains 1 in the execution of this test, while method-a returns 9 in a normal execution of the test). The caller of ModulusCheckDigit.calculateModulus() (the caller of method-a and method-b) returns true even when the return value of method-a is replaced with the wrong value because it doesn't make the accumulated value be divisible by the field variabble modulus (10) - I believe this makes the test weak.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "is-oracle-weak": true,
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.validator.routines.checkdigit.ModulusTenABACheckDigitTest#testMissingCode",
        "notes": "method-a converts the char argument to an int value, or throws a CheckDigitException using the first int argument. method-b calculates the weighted value of the int argument signifying the int value of a char. The use case in this test (and the only use case of method-b) is that the return value of method-a is passed into method-b as an argument. However, I think in the general case one does not necessarily need to call method-a in order to supply an argument to method-b because method-b seems to be an utility function that takes in any int... although it might be good practice to always call method-a before method-b. CONNECTION_DOES_NOT_NECESSITATE_ORDERING?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-02-02-16-16",
        "inspection-time-in-minutes": 12
    }

]
