00001 a=com.mpatric.mp3agic.AbstractID3v2FrameData.packAndUnsynchroniseFrameData()[B b=com.mpatric.mp3agic.AbstractID3v2FrameData.packFrameData()[B com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2CommentFrameDataTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,all-tests,com.mpatric.mp3agic.ID3v2PictureFrameDataTest,com.mpatric.mp3agic.ID3v2TextFrameDataTest,com.mpatric.mp3agic.ID3v2UrlFrameDataTest,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#notEqualIfOneHasSubframes,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#notEqualIfOneHasSubframes,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsEmptyFrameDataToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoCommentToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionAndCommentIsUnicodeToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoLanguageToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithUnicodeToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldConvertFrameDataWithUnicodeDescriptionToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TextFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2TextFrameDataTest#shouldConvertFrameDataWithUnicodeToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataWithNoDescriptionToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataWithUnicodeDescriptionToBytesAndBackToEquivalentObject
00002 a=com.mpatric.mp3agic.AbstractID3v2FrameData.packAndUnsynchroniseFrameData()[B b=com.mpatric.mp3agic.ID3v2CommentFrameData.getLength()I com.mpatric.mp3agic.ID3v2CommentFrameDataTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsEmptyFrameDataToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoCommentToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionAndCommentIsUnicodeToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoLanguageToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithUnicodeToBytesAndBackToEquivalentObject
00003 a=com.mpatric.mp3agic.AbstractID3v2FrameData.packAndUnsynchroniseFrameData()[B b=com.mpatric.mp3agic.ID3v2PictureFrameData.getLength()I com.mpatric.mp3agic.ID3v2PictureFrameDataTest,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldConvertFrameDataWithUnicodeDescriptionToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking
00004 a=com.mpatric.mp3agic.AbstractID3v2FrameData.packAndUnsynchroniseFrameData()[B b=com.mpatric.mp3agic.ID3v2TextFrameData.getLength()I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v2TextFrameDataTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#notEqualIfOneHasSubframes,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#notEqualIfOneHasSubframes,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual,com.mpatric.mp3agic.ID3v2TextFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2TextFrameDataTest#shouldConvertFrameDataWithUnicodeToBytesAndBackToEquivalentObject
00005 a=com.mpatric.mp3agic.AbstractID3v2FrameData.packAndUnsynchroniseFrameData()[B b=com.mpatric.mp3agic.ID3v2UrlFrameData.getLength()I com.mpatric.mp3agic.ID3v2UrlFrameDataTest,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataWithNoDescriptionToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataWithUnicodeDescriptionToBytesAndBackToEquivalentObject
00006 a=com.mpatric.mp3agic.AbstractID3v2FrameData.packFrameData()[B b=com.mpatric.mp3agic.ID3v2CommentFrameData.getLength()I com.mpatric.mp3agic.ID3v2CommentFrameDataTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsEmptyFrameDataToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoCommentToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionAndCommentIsUnicodeToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoLanguageToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithUnicodeToBytesAndBackToEquivalentObject
00007 a=com.mpatric.mp3agic.AbstractID3v2FrameData.packFrameData()[B b=com.mpatric.mp3agic.ID3v2PictureFrameData.getLength()I com.mpatric.mp3agic.ID3v2PictureFrameDataTest,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldConvertFrameDataWithUnicodeDescriptionToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking
00008 a=com.mpatric.mp3agic.AbstractID3v2FrameData.packFrameData()[B b=com.mpatric.mp3agic.ID3v2TextFrameData.getLength()I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v2TextFrameDataTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#notEqualIfOneHasSubframes,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#notEqualIfOneHasSubframes,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual,com.mpatric.mp3agic.ID3v2TextFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2TextFrameDataTest#shouldConvertFrameDataWithUnicodeToBytesAndBackToEquivalentObject
00009 a=com.mpatric.mp3agic.AbstractID3v2FrameData.packFrameData()[B b=com.mpatric.mp3agic.ID3v2UrlFrameData.getLength()I com.mpatric.mp3agic.ID3v2UrlFrameDataTest,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataWithNoDescriptionToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataWithUnicodeDescriptionToBytesAndBackToEquivalentObject
00010 a=com.mpatric.mp3agic.AbstractID3v2FrameData.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2FrameData.packAndUnsynchroniseFrameData()[B com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#notEqualIfOneHasSubframes,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#notEqualIfOneHasSubframes,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual
00011 a=com.mpatric.mp3agic.AbstractID3v2FrameData.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2FrameData.packFrameData()[B com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#notEqualIfOneHasSubframes,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#notEqualIfOneHasSubframes,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual
00012 a=com.mpatric.mp3agic.AbstractID3v2FrameData.toBytes()[B b=com.mpatric.mp3agic.ID3v2TextFrameData.getLength()I com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#notEqualIfOneHasSubframes,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#notEqualIfOneHasSubframes,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject
00013 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.AbstractID3v2FrameData.packAndUnsynchroniseFrameData()[B com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking
00014 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.AbstractID3v2FrameData.packFrameData()[B com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking
00015 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getChildren()[Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
00016 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getId()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
00017 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getSubframes()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
00018 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2CommentFrameData.getComment()Lcom/mpatric/mp3agic/EncodedText; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsEmptyFrameDataToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoCommentToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionAndCommentIsUnicodeToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoLanguageToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
00019 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2CommentFrameData.getDescription()Lcom/mpatric/mp3agic/EncodedText; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsEmptyFrameDataToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoCommentToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionAndCommentIsUnicodeToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoLanguageToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
00020 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2CommentFrameData.getLanguage()Ljava/lang/String; com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsEmptyFrameDataToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoCommentToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionAndCommentIsUnicodeToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoLanguageToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
00021 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2CommentFrameData.getLength()I com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
00022 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2CommentFrameData.toBytes()[B com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
00023 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getDescription()Lcom/mpatric/mp3agic/EncodedText; com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameDataWithUnicodeDescription,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameData
00024 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getImageData()[B com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameDataWithUnicodeDescription,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameData
00025 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameDataWithUnicodeDescription,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameData
00026 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getPictureType()B com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameDataWithUnicodeDescription,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameData
00027 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2PictureFrameData.getImageData()[B com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00028 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2PictureFrameData.getLength()I com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking
00029 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2PictureFrameData.toBytes()[B com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking
00030 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2PopmFrameData.getAddress()Ljava/lang/String; com.mpatric.mp3agic.ID3v2PopmFrameDataTest#canSetAndGetAddress,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturnAddress,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
00031 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2PopmFrameData.getRating()I com.mpatric.mp3agic.ID3v2PopmFrameDataTest#canSetAndGetRating,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn2StarRating,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn1StarRating,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn3StarRating,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn4StarRating,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn5StarRating,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturnMinus1ForInvalidRating,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
00032 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2PopmFrameData.setAddress(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2PopmFrameDataTest#canSetAndGetAddress
00033 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2PopmFrameData.setRating(I)V com.mpatric.mp3agic.ID3v2PopmFrameDataTest#canSetAndGetRating
00034 a=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2TextFrameData.getText()Lcom/mpatric/mp3agic/EncodedText; com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
00035 a=com.mpatric.mp3agic.AbstractID3v2Tag.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00036 a=com.mpatric.mp3agic.AbstractID3v2Tag.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;Z)V b=com.mpatric.mp3agic.ID3v24Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00037 a=com.mpatric.mp3agic.AbstractID3v2Tag.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;Z)V b=com.mpatric.mp3agic.ID3v24Tag.getRecordingTime()Ljava/lang/String; com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00038 a=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
00039 a=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
00040 a=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
00041 a=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
00042 a=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
00043 a=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I b=com.mpatric.mp3agic.ID3v24Tag.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
00044 a=com.mpatric.mp3agic.AbstractID3v2Tag.clearFrameSet(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00045 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00046 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00047 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00048 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00049 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00050 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00051 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.ID3v22Tag.toBytes()[B com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00052 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.AbstractID3v2Tag.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;Z)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00053 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment
00054 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00055 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher
00056 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.AbstractID3v2Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00057 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.ID3v22Tag.getAlbumArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist
00058 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.ID3v22Tag.getBPM()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM
00059 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.ID3v22Tag.getDate()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate
00060 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.ID3v22Tag.getGrouping()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping
00061 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.ID3v22Tag.getItunesComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment
00062 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.ID3v22Tag.getKey()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey
00063 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.ID3v22Tag.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00064 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.ID3v22Tag.getPartOfSet()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet
00065 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.ID3v22Tag.getPublisher()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher
00066 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.ID3v22Tag.isCompilation()Z com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation
00067 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.ID3v24Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00068 a=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.ID3v24Tag.getRecordingTime()Ljava/lang/String; com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00069 a=com.mpatric.mp3agic.AbstractID3v2Tag.createPictureFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2PictureFrameData; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00070 a=com.mpatric.mp3agic.AbstractID3v2Tag.createPictureFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2PictureFrameData; b=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00071 a=com.mpatric.mp3agic.AbstractID3v2Tag.createPictureFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2PictureFrameData; b=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00072 a=com.mpatric.mp3agic.AbstractID3v2Tag.createPictureFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2PictureFrameData; b=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00073 a=com.mpatric.mp3agic.AbstractID3v2Tag.createPictureFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2PictureFrameData; b=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00074 a=com.mpatric.mp3agic.AbstractID3v2Tag.createPictureFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2PictureFrameData; b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00075 a=com.mpatric.mp3agic.AbstractID3v2Tag.createPictureFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2PictureFrameData; b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00076 a=com.mpatric.mp3agic.AbstractID3v2Tag.createPictureFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2PictureFrameData; b=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00077 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractChapterTOCFrameData(Ljava/lang/String;)Ljava/util/ArrayList; b=com.mpatric.mp3agic.AbstractID3v2Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
00078 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00079 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00080 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00081 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00082 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00083 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00084 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00085 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00086 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00087 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00088 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00089 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00090 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00091 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00092 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00093 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00094 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00095 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00096 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00097 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00098 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00099 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00100 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00101 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00102 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00103 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00104 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00105 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00106 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00107 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00108 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00109 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00110 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00111 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00112 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractPopmFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2PopmFrameData; b=com.mpatric.mp3agic.AbstractID3v2Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating
00113 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; b=com.mpatric.mp3agic.AbstractID3v2Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter
00114 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00115 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00116 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00117 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00118 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00119 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00120 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00121 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00122 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00123 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00124 a=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00125 a=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
00126 a=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00127 a=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
00128 a=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00129 a=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00130 a=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00131 a=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I b=com.mpatric.mp3agic.ID3v24Tag.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
00132 a=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00133 a=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V b=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00134 a=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00135 a=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00136 a=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00137 a=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00138 a=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00139 a=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V b=com.mpatric.mp3agic.ID3v22Tag.toBytes()[B com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00140 a=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00141 a=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V b=com.mpatric.mp3agic.ID3v24Tag.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
00142 a=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
00143 a=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I b=com.mpatric.mp3agic.ID3v24Tag.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
00144 a=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00145 a=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
00146 a=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00147 a=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I b=com.mpatric.mp3agic.ID3v24Tag.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
00148 a=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00149 a=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
00150 a=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00151 a=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00152 a=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V b=com.mpatric.mp3agic.ID3v24Tag.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
00153 a=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
00154 a=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
00155 a=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
00156 a=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
00157 a=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
00158 a=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
00159 a=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
00160 a=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
00161 a=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
00162 a=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
00163 a=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
00164 a=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
00165 a=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
00166 a=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
00167 a=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
00168 a=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
00169 a=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
00170 a=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
00171 a=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
00172 a=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
00173 a=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
00174 a=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
00175 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;Z)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00176 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.clearFrameSet(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00177 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00178 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.extractChapterFrameData(Ljava/lang/String;)Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
00179 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.extractChapterTOCFrameData(Ljava/lang/String;)Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
00180 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00181 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00182 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.extractPopmFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2PopmFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating
00183 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter
00184 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00185 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter
00186 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00187 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag
00188 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldCalculateCorrectDataLengthsFromHeaderBlock,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldInitialiseFromHeaderBlockWithValidHeaders,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3WithObselete32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
00189 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00190 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.clearAlbumImage()V com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00191 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00192 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00193 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00194 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00195 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00196 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00197 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00198 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getBPM()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter
00199 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getChapterTOC()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
00200 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getChapters()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
00201 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00202 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00203 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00204 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00205 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00206 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldCalculateCorrectDataLengthsFromHeaderBlock
00207 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00208 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically
00209 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00210 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00211 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getItunesComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment
00212 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter
00213 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00214 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00215 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00216 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00217 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00218 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00219 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00220 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00221 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldInitialiseFromHeaderBlockWithValidHeaders,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00222 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getWmpRating()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating
00223 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00224 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v22Tag.getAlbumArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist
00225 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v22Tag.getBPM()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM
00226 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v22Tag.getDate()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate
00227 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v22Tag.getGrouping()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping
00228 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v22Tag.getItunesComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment
00229 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v22Tag.getKey()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey
00230 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v22Tag.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00231 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v22Tag.getPartOfSet()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet
00232 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v22Tag.getPublisher()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher
00233 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v22Tag.isCompilation()Z com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation
00234 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v24Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00235 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v24Tag.getRecordingTime()Ljava/lang/String; com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00236 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.AbstractID3v2Tag.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;Z)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00237 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.AbstractID3v2Tag.clearFrameSet(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00238 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00239 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractChapterFrameData(Ljava/lang/String;)Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
00240 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractChapterTOCFrameData(Ljava/lang/String;)Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
00241 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00242 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00243 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractPopmFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2PopmFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating
00244 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter
00245 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00246 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.AbstractID3v2Tag.getDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter
00247 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00248 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag
00249 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.AbstractID3v2Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00250 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.clearAlbumImage()V com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00251 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00252 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00253 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00254 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00255 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00256 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00257 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00258 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getBPM()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter
00259 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getChapterTOC()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
00260 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getChapters()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
00261 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00262 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00263 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00264 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00265 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00266 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldCalculateCorrectDataLengthsFromHeaderBlock
00267 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00268 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically
00269 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00270 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00271 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getItunesComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment
00272 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter
00273 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00274 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00275 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00276 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00277 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00278 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00279 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00280 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00281 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldInitialiseFromHeaderBlockWithValidHeaders,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00282 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getWmpRating()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating
00283 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00284 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v22Tag.getAlbumArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist
00285 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v22Tag.getBPM()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM
00286 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v22Tag.getDate()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate
00287 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v22Tag.getGrouping()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping
00288 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v22Tag.getItunesComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment
00289 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v22Tag.getKey()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey
00290 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v22Tag.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00291 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v22Tag.getPartOfSet()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet
00292 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v22Tag.getPublisher()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher
00293 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v22Tag.isCompilation()Z com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation
00294 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v24Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00295 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I b=com.mpatric.mp3agic.ID3v24Tag.getRecordingTime()Ljava/lang/String; com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00296 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.AbstractID3v2Tag.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;Z)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00297 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.AbstractID3v2Tag.clearFrameSet(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00298 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00299 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractChapterFrameData(Ljava/lang/String;)Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
00300 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractChapterTOCFrameData(Ljava/lang/String;)Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
00301 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00302 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00303 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractPopmFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2PopmFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating
00304 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter
00305 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00306 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.AbstractID3v2Tag.getDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter
00307 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00308 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldCalculateCorrectDataLengthsFromHeaderBlock,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldInitialiseFromHeaderBlockWithValidHeaders,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3WithObselete32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
00309 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag
00310 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldCalculateCorrectDataLengthsFromHeaderBlock,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldInitialiseFromHeaderBlockWithValidHeaders,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3WithObselete32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
00311 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.AbstractID3v2Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00312 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.clearAlbumImage()V com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00313 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00314 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00315 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00316 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00317 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00318 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00319 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00320 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getBPM()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter
00321 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getChapterTOC()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
00322 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getChapters()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
00323 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00324 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00325 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00326 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00327 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00328 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldCalculateCorrectDataLengthsFromHeaderBlock
00329 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00330 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically
00331 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00332 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00333 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getItunesComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment
00334 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter
00335 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00336 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00337 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00338 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00339 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00340 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00341 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00342 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00343 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldInitialiseFromHeaderBlockWithValidHeaders,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00344 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getWmpRating()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating
00345 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00346 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v22Tag.getAlbumArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist
00347 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v22Tag.getBPM()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM
00348 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v22Tag.getDate()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate
00349 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v22Tag.getGrouping()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping
00350 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v22Tag.getItunesComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment
00351 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v22Tag.getKey()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey
00352 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v22Tag.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00353 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v22Tag.getPartOfSet()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet
00354 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v22Tag.getPublisher()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher
00355 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v22Tag.isCompilation()Z com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation
00356 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v24Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00357 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I b=com.mpatric.mp3agic.ID3v24Tag.getRecordingTime()Ljava/lang/String; com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00358 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;Z)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00359 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.clearFrameSet(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00360 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame([BI)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00361 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.extractChapterFrameData(Ljava/lang/String;)Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
00362 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.extractChapterTOCFrameData(Ljava/lang/String;)Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
00363 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00364 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00365 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.extractPopmFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2PopmFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating
00366 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter
00367 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00368 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter
00369 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00370 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFlags([B)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldCalculateCorrectDataLengthsFromHeaderBlock,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldInitialiseFromHeaderBlockWithValidHeaders,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3WithObselete32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
00371 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag
00372 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.unpackFrames([BII)I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldCalculateCorrectDataLengthsFromHeaderBlock,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldInitialiseFromHeaderBlockWithValidHeaders,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3WithObselete32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
00373 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.unpackHeader([B)I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldCalculateCorrectDataLengthsFromHeaderBlock,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldInitialiseFromHeaderBlockWithValidHeaders,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3WithObselete32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
00374 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.AbstractID3v2Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00375 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.clearAlbumImage()V com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00376 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00377 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00378 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00379 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00380 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00381 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00382 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00383 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getBPM()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter
00384 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getChapterTOC()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
00385 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getChapters()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
00386 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00387 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00388 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00389 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00390 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00391 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldCalculateCorrectDataLengthsFromHeaderBlock
00392 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00393 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically
00394 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00395 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00396 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getItunesComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment
00397 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter
00398 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00399 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00400 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00401 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00402 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00403 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00404 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00405 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00406 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldInitialiseFromHeaderBlockWithValidHeaders,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00407 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getWmpRating()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating
00408 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00409 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v22Tag.getAlbumArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist
00410 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v22Tag.getBPM()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM
00411 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v22Tag.getDate()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate
00412 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v22Tag.getGrouping()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping
00413 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v22Tag.getItunesComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment
00414 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v22Tag.getKey()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey
00415 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v22Tag.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
00416 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v22Tag.getPartOfSet()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet
00417 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v22Tag.getPublisher()Ljava/lang/String; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher
00418 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v22Tag.isCompilation()Z com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation
00419 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v24Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00420 a=com.mpatric.mp3agic.AbstractID3v2Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v24Tag.getRecordingTime()Ljava/lang/String; com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
00421 a=com.mpatric.mp3agic.AbstractID3v2Tag.useFrameUnsynchronisation()Z b=com.mpatric.mp3agic.AbstractID3v2Tag.clearFrameSet(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00422 a=com.mpatric.mp3agic.AbstractID3v2Tag.useFrameUnsynchronisation()Z b=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00423 a=com.mpatric.mp3agic.AbstractID3v2Tag.useFrameUnsynchronisation()Z b=com.mpatric.mp3agic.ID3v2.clearAlbumImage()V com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00424 a=com.mpatric.mp3agic.BaseException.getMessage()Ljava/lang/String; b=com.mpatric.mp3agic.BaseException.getDetailedMessage()Ljava/lang/String; com.mpatric.mp3agic.BaseExceptionTest,all-tests,com.mpatric.mp3agic.BaseExceptionTest#generatesCorrectDetailedMessageForChainedBaseExceptions,com.mpatric.mp3agic.BaseExceptionTest#generatesCorrectDetailedMessageForSingleException,com.mpatric.mp3agic.BaseExceptionTest#generatesCorrectDetailedMessageForChainedExceptionsWithOtherExceptionInMix
00425 a=com.mpatric.mp3agic.EncodedText.getCharacterSet()Ljava/lang/String; b=com.mpatric.mp3agic.EncodedText.toBytes()[B com.mpatric.mp3agic.EncodedTextTest#shouldEncodeAndDecodeISO8859_1Text,com.mpatric.mp3agic.EncodedTextTest#shouldEncodeAndDecodeUTF16BEText,com.mpatric.mp3agic.EncodedTextTest#shouldEncodeAndDecodeUTF16Text,com.mpatric.mp3agic.EncodedTextTest#shouldEncodeAndDecodeUTF8Text
00426 a=com.mpatric.mp3agic.EncodedText.getCharacterSet()Ljava/lang/String; b=com.mpatric.mp3agic.EncodedText.toBytes(Z)[B com.mpatric.mp3agic.EncodedTextTest,all-tests,com.mpatric.mp3agic.EncodedTextTest#shouldEncodeAndDecodeISO8859_1Text,com.mpatric.mp3agic.EncodedTextTest#shouldEncodeAndDecodeUTF16BEText,com.mpatric.mp3agic.EncodedTextTest#shouldEncodeAndDecodeUTF16Text,com.mpatric.mp3agic.EncodedTextTest#shouldEncodeAndDecodeUTF8Text
00427 a=com.mpatric.mp3agic.EncodedText.getTextEncoding()B b=com.mpatric.mp3agic.EncodedText.toBytes()[B com.mpatric.mp3agic.ID3v2PictureFrameDataTest,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldConvertFrameDataWithUnicodeDescriptionToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking
00428 a=com.mpatric.mp3agic.EncodedText.setTextEncoding(BZ)V b=com.mpatric.mp3agic.EncodedText.toBytes()[B com.mpatric.mp3agic.EncodedTextTest#shouldTranscodeFromOneEncodingToAnother
00429 a=com.mpatric.mp3agic.EncodedText.setTextEncoding(BZ)V b=com.mpatric.mp3agic.EncodedText.toBytes(ZZ)[B com.mpatric.mp3agic.EncodedTextTest#shouldTranscodeFromOneEncodingToAnother
00430 a=com.mpatric.mp3agic.EncodedText.stripBomAndTerminator()V b=com.mpatric.mp3agic.EncodedText.getTerminator()[B com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00431 a=com.mpatric.mp3agic.EncodedText.stripBomAndTerminator()V b=com.mpatric.mp3agic.EncodedText.getTextEncoding()B com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.EncodedTextTest#shouldDetectUTF16BEEncodingFromBytesWithBOM,com.mpatric.mp3agic.EncodedTextTest#shouldDetectUTF16EncodingFromBytesWithBOM,com.mpatric.mp3agic.EncodedTextTest#shouldDetectUTF8EncodingFromBytesWithBOM,com.mpatric.mp3agic.EncodedTextTest#shouldInferISO8859_1EncodingFromBytesWithNoBOM,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#notEqualIfOneHasSubframes,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#notEqualIfOneHasSubframes,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#constructorThrowsErrorWhenEncodingsDoNotMatch,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#equalIfLanguageIsNullOnBoth,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#equalsItself,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#notEqualIfCommentNotEqual,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#notEqualIfDescriptionNotEqual,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#notEqualIfLanguageIsNullOnOne,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#notEqualIfLanguageNotEqual,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#notEqualToDifferentClass,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#notEqualToNull,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#notEqualIfUnsynchronizationNotEqual,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
00432 a=com.mpatric.mp3agic.EncodedText.stripBomAndTerminator()V b=com.mpatric.mp3agic.EncodedText.setTextEncoding(BZ)V com.mpatric.mp3agic.EncodedTextTest#shouldThrowAnExceptionWhenAttemptingToTranscodeToACharacterSetWithUnmappableCharacters,com.mpatric.mp3agic.EncodedTextTest#shouldThrowExceptionWhenTranscodingWithInvalidCharacterSet,com.mpatric.mp3agic.EncodedTextTest#shouldTranscodeFromOneEncodingToAnother
00433 a=com.mpatric.mp3agic.EncodedText.stripBomAndTerminator()V b=com.mpatric.mp3agic.EncodedText.toBytes()[B com.mpatric.mp3agic.EncodedTextTest#shouldTranscodeFromOneEncodingToAnother,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking
00434 a=com.mpatric.mp3agic.EncodedText.stripBomAndTerminator()V b=com.mpatric.mp3agic.EncodedText.toBytes(ZZ)[B com.mpatric.mp3agic.EncodedTextTest#shouldTranscodeFromOneEncodingToAnother
00435 a=com.mpatric.mp3agic.EncodedText.toBytes()[B b=com.mpatric.mp3agic.EncodedText.toBytes(Z)[B com.mpatric.mp3agic.EncodedTextTest#shouldEncodeAndDecodeISO8859_1Text,com.mpatric.mp3agic.EncodedTextTest#shouldEncodeAndDecodeUTF16BEText,com.mpatric.mp3agic.EncodedTextTest#shouldEncodeAndDecodeUTF16Text,com.mpatric.mp3agic.EncodedTextTest#shouldEncodeAndDecodeUTF8Text
00436 a=com.mpatric.mp3agic.EncodedText.toBytes()[B b=com.mpatric.mp3agic.EncodedText.toBytes(ZZ)[B com.mpatric.mp3agic.EncodedTextTest#shouldTranscodeFromOneEncodingToAnother
00437 a=com.mpatric.mp3agic.FileWrapper.getLastModified()J b=com.mpatric.mp3agic.FileWrapper.getLength()J com.mpatric.mp3agic.FileWrapperTest,all-tests,com.mpatric.mp3agic.FileWrapperTest#shouldReadValidFile,com.mpatric.mp3agic.FileWrapperTest#shouldReadValidPath,com.mpatric.mp3agic.FileWrapperTest#shouldReadValidFilename
00438 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.FileWrapper.getLastModified()J com.mpatric.mp3agic.FileWrapperTest#shouldReadValidFile,com.mpatric.mp3agic.FileWrapperTest#shouldReadValidPath,com.mpatric.mp3agic.FileWrapperTest#shouldReadValidFilename
00439 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.FileWrapper.getLength()J com.mpatric.mp3agic.FileWrapperTest#shouldReadValidFile,com.mpatric.mp3agic.FileWrapperTest#shouldReadValidPath,com.mpatric.mp3agic.FileWrapperTest#shouldReadValidFilename
00440 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.addBitrate(I)V com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
00441 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00442 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00443 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
00444 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00445 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00446 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.getFilename()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
00447 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.getFrameCount()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00448 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
00449 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00450 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00451 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.getLength()J com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
00452 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00453 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.getSampleRate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00454 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00455 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00456 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.getXingBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00457 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00458 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
00459 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.hasId3v1Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
00460 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
00461 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
00462 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.init(IZ)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
00463 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
00464 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
00465 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
00466 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.isCopyright()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00467 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.isOriginal()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
00468 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
00469 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
00470 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.save(Ljava/lang/String;)V com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
00471 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.scanBlock([BIII)I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
00472 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.scanBlockForStart([BIII)I com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
00473 a=com.mpatric.mp3agic.FileWrapper.init()V b=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
00474 a=com.mpatric.mp3agic.ID3Wrapper.getAlbumImage()[B b=com.mpatric.mp3agic.ID3Wrapper.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest,all-tests,com.mpatric.mp3agic.ID3WrapperTest#getAlbumImageReturnsNullIfV2TagDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#getAlbumImageReturnsV2TagsAlbumImage
00475 a=com.mpatric.mp3agic.ID3v1.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00476 a=com.mpatric.mp3agic.ID3v1.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getGenre()I com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00477 a=com.mpatric.mp3agic.ID3v1.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00478 a=com.mpatric.mp3agic.ID3v1.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00479 a=com.mpatric.mp3agic.ID3v1.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00480 a=com.mpatric.mp3agic.ID3v1.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00481 a=com.mpatric.mp3agic.ID3v1.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getGenre()I com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00482 a=com.mpatric.mp3agic.ID3v1.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00483 a=com.mpatric.mp3agic.ID3v1.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00484 a=com.mpatric.mp3agic.ID3v1.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00485 a=com.mpatric.mp3agic.ID3v1.getGenre()I b=com.mpatric.mp3agic.ID3v1.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00486 a=com.mpatric.mp3agic.ID3v1.getGenre()I b=com.mpatric.mp3agic.ID3v1.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00487 a=com.mpatric.mp3agic.ID3v1.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00488 a=com.mpatric.mp3agic.ID3v1.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00489 a=com.mpatric.mp3agic.ID3v1.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00490 a=com.mpatric.mp3agic.ID3v1.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getGenre()I com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00491 a=com.mpatric.mp3agic.ID3v1.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00492 a=com.mpatric.mp3agic.ID3v1.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00493 a=com.mpatric.mp3agic.ID3v1.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00494 a=com.mpatric.mp3agic.ID3v1.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00495 a=com.mpatric.mp3agic.ID3v1.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00496 a=com.mpatric.mp3agic.ID3v1.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getGenre()I com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00497 a=com.mpatric.mp3agic.ID3v1.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00498 a=com.mpatric.mp3agic.ID3v1.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00499 a=com.mpatric.mp3agic.ID3v1.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00500 a=com.mpatric.mp3agic.ID3v1.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00501 a=com.mpatric.mp3agic.ID3v1.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getGenre()I com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00502 a=com.mpatric.mp3agic.ID3v1.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00503 a=com.mpatric.mp3agic.ID3v1.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest#getAlbumReturnsV1TagsAlbumIfV2TagDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#getAlbumReturnsV1TagsAlbumIfV2TagsAlbumDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#getAlbumReturnsV1TagsAlbumIfV2TagsAlbumIsEmpty,com.mpatric.mp3agic.ID3WrapperTest#setsAlbumOnV1TagOnly,com.mpatric.mp3agic.ID3WrapperTest#setsAlbumOnBothV1AndV2Tags
00504 a=com.mpatric.mp3agic.ID3v1.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setComment(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00505 a=com.mpatric.mp3agic.ID3v1.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setGenre(I)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00506 a=com.mpatric.mp3agic.ID3v1.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setYear(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00507 a=com.mpatric.mp3agic.ID3v1.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.toBytes()[B com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00508 a=com.mpatric.mp3agic.ID3v1.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.numericsOnly(Ljava/lang/String;)Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00509 a=com.mpatric.mp3agic.ID3v1.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.packTag([B)V com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00510 a=com.mpatric.mp3agic.ID3v1.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest#getArtistReturnsV1TagsArtistIfV2TagsArtistDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#getArtistReturnsV1TagsArtistIfV2TagDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#getArtistReturnsV1TagsArtistIfV2TagsArtistIsEmpty,com.mpatric.mp3agic.ID3WrapperTest#setsArtistOnBothV1AndV2Tags,com.mpatric.mp3agic.ID3WrapperTest#setsArtistOnV1TagOnly
00511 a=com.mpatric.mp3agic.ID3v1.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setAlbum(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00512 a=com.mpatric.mp3agic.ID3v1.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setComment(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00513 a=com.mpatric.mp3agic.ID3v1.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setGenre(I)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00514 a=com.mpatric.mp3agic.ID3v1.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setTitle(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00515 a=com.mpatric.mp3agic.ID3v1.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setYear(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00516 a=com.mpatric.mp3agic.ID3v1.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.toBytes()[B com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00517 a=com.mpatric.mp3agic.ID3v1.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.numericsOnly(Ljava/lang/String;)Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00518 a=com.mpatric.mp3agic.ID3v1.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.packTag([B)V com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00519 a=com.mpatric.mp3agic.ID3v1.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest#getCommentReturnsV1TagsCommentIfV2TagDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#getCommentReturnsV1TagsCommentIfV2TagsCommentDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#getCommentReturnsV1TagsCommentIfV2TagsCommentIsEmpty,com.mpatric.mp3agic.ID3WrapperTest#setsCommentOnBothV1AndV2Tags,com.mpatric.mp3agic.ID3WrapperTest#setsCommentOnV1TagOnly
00520 a=com.mpatric.mp3agic.ID3v1.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.toBytes()[B com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00521 a=com.mpatric.mp3agic.ID3v1.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.numericsOnly(Ljava/lang/String;)Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00522 a=com.mpatric.mp3agic.ID3v1.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.packTag([B)V com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00523 a=com.mpatric.mp3agic.ID3v1.setGenre(I)V b=com.mpatric.mp3agic.ID3v1.getGenre()I com.mpatric.mp3agic.ID3WrapperTest#getGenreReturnsV1TagsGenreIfV2TagsGenreIsNegativeOne,com.mpatric.mp3agic.ID3WrapperTest#getGenreReturnsV1TagsGenreIfV2TagDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#setsGenreOnBothV1AndV2Tags,com.mpatric.mp3agic.ID3WrapperTest#setsGenreOnV1TagOnly
00524 a=com.mpatric.mp3agic.ID3v1.setGenre(I)V b=com.mpatric.mp3agic.ID3v1.setComment(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00525 a=com.mpatric.mp3agic.ID3v1.setGenre(I)V b=com.mpatric.mp3agic.ID3v1.toBytes()[B com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00526 a=com.mpatric.mp3agic.ID3v1.setGenre(I)V b=com.mpatric.mp3agic.ID3v1Tag.numericsOnly(Ljava/lang/String;)Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00527 a=com.mpatric.mp3agic.ID3v1.setGenre(I)V b=com.mpatric.mp3agic.ID3v1Tag.packTag([B)V com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00528 a=com.mpatric.mp3agic.ID3v1.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest#getTitleReturnsV1TagsTitleIfV2TagDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#getTitleReturnsV1TagsTitleIfV2TagsTitleDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#getTitleReturnsV1TagsTitleIfV2TagsTitleIsEmpty,com.mpatric.mp3agic.ID3WrapperTest#setsTitleOnBothV1AndV2Tags,com.mpatric.mp3agic.ID3WrapperTest#setsTitleOnV1TagOnly
00529 a=com.mpatric.mp3agic.ID3v1.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setAlbum(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00530 a=com.mpatric.mp3agic.ID3v1.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setComment(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00531 a=com.mpatric.mp3agic.ID3v1.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setGenre(I)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00532 a=com.mpatric.mp3agic.ID3v1.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setYear(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00533 a=com.mpatric.mp3agic.ID3v1.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.toBytes()[B com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00534 a=com.mpatric.mp3agic.ID3v1.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.numericsOnly(Ljava/lang/String;)Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00535 a=com.mpatric.mp3agic.ID3v1.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.packTag([B)V com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00536 a=com.mpatric.mp3agic.ID3v1.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.getTrack()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest#getTrackReturnsV1TagsTrackIfV2TagDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#getTrackReturnsV1TagsTrackIfV2TagsTrackDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#getTrackReturnsV1TagsTrackIfV2TagsTrackIsEmpty,com.mpatric.mp3agic.ID3WrapperTest#setsTrackOnBothV1AndV2Tags,com.mpatric.mp3agic.ID3WrapperTest#setsTrackOnV1TagOnly
00537 a=com.mpatric.mp3agic.ID3v1.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setAlbum(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00538 a=com.mpatric.mp3agic.ID3v1.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setArtist(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00539 a=com.mpatric.mp3agic.ID3v1.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setComment(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00540 a=com.mpatric.mp3agic.ID3v1.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setGenre(I)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00541 a=com.mpatric.mp3agic.ID3v1.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setTitle(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00542 a=com.mpatric.mp3agic.ID3v1.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setYear(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00543 a=com.mpatric.mp3agic.ID3v1.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.toBytes()[B com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00544 a=com.mpatric.mp3agic.ID3v1.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.numericsOnly(Ljava/lang/String;)Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00545 a=com.mpatric.mp3agic.ID3v1.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.packTag([B)V com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00546 a=com.mpatric.mp3agic.ID3v1.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest#getYearReturnsV1TagsYearIfV2TagsYearDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#getYearReturnsV1TagsYearIfV2TagDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#getYearReturnsV1TagsYearIfV2TagsYearIsEmpty,com.mpatric.mp3agic.ID3WrapperTest#setsYearOnV1TagOnly,com.mpatric.mp3agic.ID3WrapperTest#setsYearOnBothV1AndV2Tags
00547 a=com.mpatric.mp3agic.ID3v1.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setComment(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00548 a=com.mpatric.mp3agic.ID3v1.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.setGenre(I)V com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00549 a=com.mpatric.mp3agic.ID3v1.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1.toBytes()[B com.mpatric.mp3agic.ID3v1TagTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00550 a=com.mpatric.mp3agic.ID3v1.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.numericsOnly(Ljava/lang/String;)Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00551 a=com.mpatric.mp3agic.ID3v1.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.packTag([B)V com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag
00552 a=com.mpatric.mp3agic.ID3v1.toBytes()[B b=com.mpatric.mp3agic.ID3v1Tag.numericsOnly(Ljava/lang/String;)Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
00553 a=com.mpatric.mp3agic.ID3v1.toBytes()[B b=com.mpatric.mp3agic.ID3v1Tag.packTag([B)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
00554 a=com.mpatric.mp3agic.ID3v1Tag.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00555 a=com.mpatric.mp3agic.ID3v1Tag.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getGenre()I com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00556 a=com.mpatric.mp3agic.ID3v1Tag.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00557 a=com.mpatric.mp3agic.ID3v1Tag.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getTrack()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00558 a=com.mpatric.mp3agic.ID3v1Tag.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00559 a=com.mpatric.mp3agic.ID3v1Tag.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00560 a=com.mpatric.mp3agic.ID3v1Tag.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00561 a=com.mpatric.mp3agic.ID3v1Tag.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getGenre()I com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00562 a=com.mpatric.mp3agic.ID3v1Tag.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00563 a=com.mpatric.mp3agic.ID3v1Tag.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getTrack()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00564 a=com.mpatric.mp3agic.ID3v1Tag.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00565 a=com.mpatric.mp3agic.ID3v1Tag.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getGenre()I com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00566 a=com.mpatric.mp3agic.ID3v1Tag.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00567 a=com.mpatric.mp3agic.ID3v1Tag.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getTrack()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00568 a=com.mpatric.mp3agic.ID3v1Tag.getGenre()I b=com.mpatric.mp3agic.ID3v1Tag.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00569 a=com.mpatric.mp3agic.ID3v1Tag.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00570 a=com.mpatric.mp3agic.ID3v1Tag.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00571 a=com.mpatric.mp3agic.ID3v1Tag.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00572 a=com.mpatric.mp3agic.ID3v1Tag.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getGenre()I com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00573 a=com.mpatric.mp3agic.ID3v1Tag.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00574 a=com.mpatric.mp3agic.ID3v1Tag.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getTrack()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00575 a=com.mpatric.mp3agic.ID3v1Tag.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00576 a=com.mpatric.mp3agic.ID3v1Tag.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getGenre()I com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00577 a=com.mpatric.mp3agic.ID3v1Tag.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00578 a=com.mpatric.mp3agic.ID3v1Tag.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00579 a=com.mpatric.mp3agic.ID3v1Tag.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getGenre()I com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00580 a=com.mpatric.mp3agic.ID3v1Tag.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00581 a=com.mpatric.mp3agic.ID3v1Tag.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v1Tag.getTrack()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00582 a=com.mpatric.mp3agic.ID3v1Tag.packTag([B)V b=com.mpatric.mp3agic.ID3v1Tag.numericsOnly(Ljava/lang/String;)Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
00583 a=com.mpatric.mp3agic.ID3v1Tag.sanityCheckTag([B)V b=com.mpatric.mp3agic.ID3v1.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00584 a=com.mpatric.mp3agic.ID3v1Tag.sanityCheckTag([B)V b=com.mpatric.mp3agic.ID3v1.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00585 a=com.mpatric.mp3agic.ID3v1Tag.sanityCheckTag([B)V b=com.mpatric.mp3agic.ID3v1.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00586 a=com.mpatric.mp3agic.ID3v1Tag.sanityCheckTag([B)V b=com.mpatric.mp3agic.ID3v1.getGenre()I com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00587 a=com.mpatric.mp3agic.ID3v1Tag.sanityCheckTag([B)V b=com.mpatric.mp3agic.ID3v1.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00588 a=com.mpatric.mp3agic.ID3v1Tag.sanityCheckTag([B)V b=com.mpatric.mp3agic.ID3v1.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00589 a=com.mpatric.mp3agic.ID3v1Tag.sanityCheckTag([B)V b=com.mpatric.mp3agic.ID3v1.getTrack()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3,com.mpatric.mp3agic.ID3v1TagTest#shouldReturnEmptyTrackIfNotSetOn11Tag
00590 a=com.mpatric.mp3agic.ID3v1Tag.sanityCheckTag([B)V b=com.mpatric.mp3agic.ID3v1.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00591 a=com.mpatric.mp3agic.ID3v1Tag.sanityCheckTag([B)V b=com.mpatric.mp3agic.ID3v1Tag.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00592 a=com.mpatric.mp3agic.ID3v1Tag.sanityCheckTag([B)V b=com.mpatric.mp3agic.ID3v1Tag.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00593 a=com.mpatric.mp3agic.ID3v1Tag.sanityCheckTag([B)V b=com.mpatric.mp3agic.ID3v1Tag.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00594 a=com.mpatric.mp3agic.ID3v1Tag.sanityCheckTag([B)V b=com.mpatric.mp3agic.ID3v1Tag.getGenre()I com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00595 a=com.mpatric.mp3agic.ID3v1Tag.sanityCheckTag([B)V b=com.mpatric.mp3agic.ID3v1Tag.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00596 a=com.mpatric.mp3agic.ID3v1Tag.sanityCheckTag([B)V b=com.mpatric.mp3agic.ID3v1Tag.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00597 a=com.mpatric.mp3agic.ID3v1Tag.sanityCheckTag([B)V b=com.mpatric.mp3agic.ID3v1Tag.getTrack()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00598 a=com.mpatric.mp3agic.ID3v1Tag.sanityCheckTag([B)V b=com.mpatric.mp3agic.ID3v1Tag.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00599 a=com.mpatric.mp3agic.ID3v1Tag.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.numericsOnly(Ljava/lang/String;)Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00600 a=com.mpatric.mp3agic.ID3v1Tag.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.packTag([B)V com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00601 a=com.mpatric.mp3agic.ID3v1Tag.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setComment(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00602 a=com.mpatric.mp3agic.ID3v1Tag.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setGenre(I)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00603 a=com.mpatric.mp3agic.ID3v1Tag.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setTrack(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00604 a=com.mpatric.mp3agic.ID3v1Tag.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setYear(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00605 a=com.mpatric.mp3agic.ID3v1Tag.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.toBytes()[B com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00606 a=com.mpatric.mp3agic.ID3v1Tag.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.numericsOnly(Ljava/lang/String;)Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00607 a=com.mpatric.mp3agic.ID3v1Tag.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.packTag([B)V com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00608 a=com.mpatric.mp3agic.ID3v1Tag.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setAlbum(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00609 a=com.mpatric.mp3agic.ID3v1Tag.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setComment(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00610 a=com.mpatric.mp3agic.ID3v1Tag.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setGenre(I)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00611 a=com.mpatric.mp3agic.ID3v1Tag.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setTrack(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00612 a=com.mpatric.mp3agic.ID3v1Tag.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setYear(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00613 a=com.mpatric.mp3agic.ID3v1Tag.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.toBytes()[B com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00614 a=com.mpatric.mp3agic.ID3v1Tag.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.numericsOnly(Ljava/lang/String;)Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00615 a=com.mpatric.mp3agic.ID3v1Tag.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.packTag([B)V com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00616 a=com.mpatric.mp3agic.ID3v1Tag.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setGenre(I)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00617 a=com.mpatric.mp3agic.ID3v1Tag.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setTrack(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00618 a=com.mpatric.mp3agic.ID3v1Tag.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.toBytes()[B com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00619 a=com.mpatric.mp3agic.ID3v1Tag.setGenre(I)V b=com.mpatric.mp3agic.ID3v1Tag.numericsOnly(Ljava/lang/String;)Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00620 a=com.mpatric.mp3agic.ID3v1Tag.setGenre(I)V b=com.mpatric.mp3agic.ID3v1Tag.packTag([B)V com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00621 a=com.mpatric.mp3agic.ID3v1Tag.setGenre(I)V b=com.mpatric.mp3agic.ID3v1Tag.toBytes()[B com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00622 a=com.mpatric.mp3agic.ID3v1Tag.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.numericsOnly(Ljava/lang/String;)Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00623 a=com.mpatric.mp3agic.ID3v1Tag.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.packTag([B)V com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00624 a=com.mpatric.mp3agic.ID3v1Tag.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setAlbum(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00625 a=com.mpatric.mp3agic.ID3v1Tag.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setArtist(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00626 a=com.mpatric.mp3agic.ID3v1Tag.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setComment(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00627 a=com.mpatric.mp3agic.ID3v1Tag.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setGenre(I)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00628 a=com.mpatric.mp3agic.ID3v1Tag.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setTrack(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00629 a=com.mpatric.mp3agic.ID3v1Tag.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setYear(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00630 a=com.mpatric.mp3agic.ID3v1Tag.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.toBytes()[B com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00631 a=com.mpatric.mp3agic.ID3v1Tag.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.numericsOnly(Ljava/lang/String;)Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00632 a=com.mpatric.mp3agic.ID3v1Tag.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.packTag([B)V com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00633 a=com.mpatric.mp3agic.ID3v1Tag.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setGenre(I)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00634 a=com.mpatric.mp3agic.ID3v1Tag.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.toBytes()[B com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00635 a=com.mpatric.mp3agic.ID3v1Tag.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.numericsOnly(Ljava/lang/String;)Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00636 a=com.mpatric.mp3agic.ID3v1Tag.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.packTag([B)V com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00637 a=com.mpatric.mp3agic.ID3v1Tag.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setComment(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00638 a=com.mpatric.mp3agic.ID3v1Tag.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setGenre(I)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00639 a=com.mpatric.mp3agic.ID3v1Tag.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.setTrack(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00640 a=com.mpatric.mp3agic.ID3v1Tag.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v1Tag.toBytes()[B com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00641 a=com.mpatric.mp3agic.ID3v1Tag.toBytes()[B b=com.mpatric.mp3agic.ID3v1Tag.numericsOnly(Ljava/lang/String;)Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00642 a=com.mpatric.mp3agic.ID3v1Tag.toBytes()[B b=com.mpatric.mp3agic.ID3v1Tag.packTag([B)V com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer,com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber
00643 a=com.mpatric.mp3agic.ID3v1Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v1.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00644 a=com.mpatric.mp3agic.ID3v1Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v1.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00645 a=com.mpatric.mp3agic.ID3v1Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v1.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00646 a=com.mpatric.mp3agic.ID3v1Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v1.getGenre()I com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00647 a=com.mpatric.mp3agic.ID3v1Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v1.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00648 a=com.mpatric.mp3agic.ID3v1Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v1.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00649 a=com.mpatric.mp3agic.ID3v1Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v1.getTrack()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3,com.mpatric.mp3agic.ID3v1TagTest#shouldReturnEmptyTrackIfNotSetOn11Tag
00650 a=com.mpatric.mp3agic.ID3v1Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v1.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3
00651 a=com.mpatric.mp3agic.ID3v1Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v1Tag.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00652 a=com.mpatric.mp3agic.ID3v1Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v1Tag.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00653 a=com.mpatric.mp3agic.ID3v1Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v1Tag.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00654 a=com.mpatric.mp3agic.ID3v1Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v1Tag.getGenre()I com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00655 a=com.mpatric.mp3agic.ID3v1Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v1Tag.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00656 a=com.mpatric.mp3agic.ID3v1Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v1Tag.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00657 a=com.mpatric.mp3agic.ID3v1Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v1Tag.getTrack()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00658 a=com.mpatric.mp3agic.ID3v1Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v1Tag.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace
00659 a=com.mpatric.mp3agic.ID3v1Tag.unpackTag([B)V b=com.mpatric.mp3agic.ID3v1Tag.sanityCheckTag([B)V com.mpatric.mp3agic.ID3v1TagTest,all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace,com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace,com.mpatric.mp3agic.ID3v1TagTest#shouldThrowExceptionForTagBufferTooLong,com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3,com.mpatric.mp3agic.ID3v1TagTest#shouldReturnEmptyTrackIfNotSetOn11Tag,com.mpatric.mp3agic.ID3v1TagTest#shouldThrowExceptionForTagBufferTooShort,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
00660 a=com.mpatric.mp3agic.ID3v2.clearAlbumImage()V b=com.mpatric.mp3agic.AbstractID3v2Tag.clearFrameSet(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00661 a=com.mpatric.mp3agic.ID3v2.clearAlbumImage()V b=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
00662 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00663 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00664 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00665 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00666 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00667 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00668 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00669 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00670 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00671 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00672 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00673 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00674 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00675 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00676 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00677 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00678 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00679 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00680 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00681 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00682 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00683 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00684 a=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00685 a=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest,com.mpatric.mp3agic.ID3WrapperTest#getAlbumImageReturnsV2TagsAlbumImage,com.mpatric.mp3agic.ID3WrapperTest#setsAlbumImageOnV2Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00686 a=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.createPictureFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2PictureFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00687 a=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00688 a=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00689 a=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00690 a=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00691 a=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00692 a=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00693 a=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00694 a=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00695 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00696 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00697 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00698 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00699 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00700 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00701 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00702 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00703 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00704 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00705 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00706 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00707 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00708 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00709 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00710 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00711 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00712 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00713 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00714 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00715 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00716 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00717 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00718 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00719 a=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00720 a=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00721 a=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00722 a=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00723 a=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00724 a=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00725 a=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00726 a=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00727 a=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00728 a=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00729 a=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00730 a=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00731 a=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00732 a=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00733 a=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00734 a=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00735 a=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00736 a=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00737 a=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00738 a=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00739 a=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00740 a=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00741 a=com.mpatric.mp3agic.ID3v2.getBPM()I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter
00742 a=com.mpatric.mp3agic.ID3v2.getBPM()I b=com.mpatric.mp3agic.AbstractID3v2Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter
00743 a=com.mpatric.mp3agic.ID3v2.getChapterTOC()Ljava/util/ArrayList; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractChapterTOCFrameData(Ljava/lang/String;)Ljava/util/ArrayList; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
00744 a=com.mpatric.mp3agic.ID3v2.getChapterTOC()Ljava/util/ArrayList; b=com.mpatric.mp3agic.AbstractID3v2Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
00745 a=com.mpatric.mp3agic.ID3v2.getChapters()Ljava/util/ArrayList; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractChapterFrameData(Ljava/lang/String;)Ljava/util/ArrayList; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
00746 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00747 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00748 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00749 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00750 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00751 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00752 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00753 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00754 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00755 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00756 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00757 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00758 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00759 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getItunesComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment
00760 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00761 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00762 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00763 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00764 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00765 a=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00766 a=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00767 a=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00768 a=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00769 a=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00770 a=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00771 a=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00772 a=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00773 a=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00774 a=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00775 a=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00776 a=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00777 a=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00778 a=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00779 a=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00780 a=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00781 a=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00782 a=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00783 a=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00784 a=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00785 a=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00786 a=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00787 a=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00788 a=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00789 a=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00790 a=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00791 a=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00792 a=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00793 a=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00794 a=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00795 a=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00796 a=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00797 a=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00798 a=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00799 a=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00800 a=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00801 a=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00802 a=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00803 a=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00804 a=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00805 a=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00806 a=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00807 a=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00808 a=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00809 a=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00810 a=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00811 a=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00812 a=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00813 a=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00814 a=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00815 a=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00816 a=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00817 a=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00818 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00819 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00820 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00821 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00822 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00823 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00824 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00825 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00826 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00827 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00828 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00829 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00830 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00831 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00832 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00833 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00834 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
00835 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00836 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00837 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00838 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00839 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00840 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00841 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00842 a=com.mpatric.mp3agic.ID3v2.getGenre()I b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00843 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00844 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00845 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00846 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00847 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00848 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00849 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00850 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00851 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00852 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00853 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00854 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00855 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00856 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00857 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00858 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00859 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
00860 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
00861 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00862 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00863 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00864 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00865 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00866 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00867 a=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00868 a=com.mpatric.mp3agic.ID3v2.getLength()I b=com.mpatric.mp3agic.AbstractID3v2Tag.getDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3WithObselete32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter
00869 a=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00870 a=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00871 a=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00872 a=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00873 a=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00874 a=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00875 a=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00876 a=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00877 a=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00878 a=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00879 a=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00880 a=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00881 a=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00882 a=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00883 a=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00884 a=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00885 a=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00886 a=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00887 a=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00888 a=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00889 a=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00890 a=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00891 a=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00892 a=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00893 a=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00894 a=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00895 a=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00896 a=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00897 a=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00898 a=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00899 a=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00900 a=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00901 a=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00902 a=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00903 a=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00904 a=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00905 a=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00906 a=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00907 a=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00908 a=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00909 a=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00910 a=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00911 a=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00912 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00913 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00914 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00915 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00916 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00917 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00918 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00919 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00920 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00921 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00922 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00923 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00924 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
00925 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00926 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00927 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00928 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00929 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00930 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00931 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00932 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00933 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00934 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00935 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00936 a=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00937 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.createPictureFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2PictureFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
00938 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00939 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00940 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00941 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00942 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00943 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00944 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00945 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00946 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00947 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00948 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00949 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00950 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00951 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00952 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00953 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00954 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00955 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00956 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
00957 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00958 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00959 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00960 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00961 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00962 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00963 a=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00964 a=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00965 a=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00966 a=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00967 a=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00968 a=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00969 a=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00970 a=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00971 a=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00972 a=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
00973 a=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00974 a=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00975 a=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00976 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00977 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00978 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00979 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.getDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3WithObselete32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter
00980 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00981 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00982 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00983 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00984 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtistUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00985 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudioSourceUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00986 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAudiofileUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00987 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00988 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCommercialUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00989 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00990 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00991 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyrightUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00992 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00993 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00994 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00995 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3WithObselete32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter
00996 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00997 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00998 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPaymentUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
00999 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getPublisherUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
01000 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getRadiostationUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
01001 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
01002 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
01003 a=com.mpatric.mp3agic.ID3v2.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
01004 a=com.mpatric.mp3agic.ID3v2.getWmpRating()I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractPopmFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2PopmFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating
01005 a=com.mpatric.mp3agic.ID3v2.getWmpRating()I b=com.mpatric.mp3agic.AbstractID3v2Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating
01006 a=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.createPictureFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2PictureFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
01007 a=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
01008 a=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
01009 a=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractUrlFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2UrlFrameData; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
01010 a=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
01011 a=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
01012 a=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
01013 a=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
01014 a=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
01015 a=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
01016 a=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
01017 a=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
01018 a=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
01019 a=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
01020 a=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag
01021 a=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
01022 a=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
01023 a=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag
01024 a=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
01025 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01026 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01027 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01028 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01029 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01030 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01031 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01032 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01033 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01034 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getAlbum()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest#getAlbumReturnsV1TagsAlbumIfV2TagsAlbumDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#setsAlbumOnBothV1AndV2Tags,com.mpatric.mp3agic.ID3WrapperTest#setsAlbumOnV2TagOnly
01035 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01036 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01037 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01038 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01039 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly
01040 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01041 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01042 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01043 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01044 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01045 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01046 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01047 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01048 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01049 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01050 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01051 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01052 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01053 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01054 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01055 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01056 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01057 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01058 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01059 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01060 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01061 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01062 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01063 a=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01064 a=com.mpatric.mp3agic.ID3v2.setAlbumArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getAlbumArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest,all-tests,com.mpatric.mp3agic.ID3WrapperTest#getAlbumArtistReturnsV2TagsAlbumArtist,com.mpatric.mp3agic.ID3WrapperTest#setsAlbumArtistOnV2Tag
01065 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01066 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01067 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01068 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01069 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01070 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01071 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01072 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01073 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01074 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getAlbumImage()[B com.mpatric.mp3agic.ID3WrapperTest,com.mpatric.mp3agic.ID3WrapperTest#getAlbumImageReturnsV2TagsAlbumImage,com.mpatric.mp3agic.ID3WrapperTest#setsAlbumImageOnV2Tag
01075 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getAlbumImageMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest,com.mpatric.mp3agic.ID3WrapperTest#getAlbumImageReturnsV2TagsAlbumImage,com.mpatric.mp3agic.ID3WrapperTest#setsAlbumImageOnV2Tag
01076 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01077 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01078 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01079 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01080 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01081 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01082 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01083 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01084 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01085 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01086 a=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01087 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01088 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01089 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01090 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01091 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01092 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01093 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01094 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01095 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01096 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest#getArtistReturnsV1TagsArtistIfV2TagsArtistDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#setsArtistOnBothV1AndV2Tags,com.mpatric.mp3agic.ID3WrapperTest#setsArtistOnV2TagOnly
01097 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01098 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01099 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01100 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01101 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01102 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly
01103 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01104 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01105 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01106 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01107 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01108 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01109 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01110 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01111 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01112 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01113 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01114 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01115 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01116 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01117 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01118 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01119 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01120 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01121 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01122 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01123 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01124 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01125 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01126 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01127 a=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01128 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01129 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01130 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01131 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01132 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01133 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01134 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01135 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01136 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01137 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01138 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01139 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01140 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01141 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01142 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01143 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01144 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01145 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01146 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01147 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01148 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01149 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01150 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01151 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01152 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01153 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01154 a=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01155 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01156 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01157 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01158 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01159 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01160 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01161 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01162 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01163 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01164 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01165 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01166 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01167 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01168 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01169 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01170 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01171 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01172 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01173 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01174 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01175 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01176 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01177 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01178 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01179 a=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01180 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01181 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01182 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01183 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01184 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01185 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01186 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01187 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01188 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01189 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01190 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01191 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01192 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01193 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01194 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01195 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01196 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01197 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01198 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01199 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01200 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01201 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01202 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01203 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01204 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01205 a=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01206 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01207 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01208 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01209 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01210 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01211 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01212 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01213 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01214 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01215 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getComment()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest#getCommentReturnsV1TagsCommentIfV2TagsCommentDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#setsCommentOnBothV1AndV2Tags,com.mpatric.mp3agic.ID3WrapperTest#setsCommentOnV2TagOnly
01216 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01217 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01218 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01219 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01220 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly
01221 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01222 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01223 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01224 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01225 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01226 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01227 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01228 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01229 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01230 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01231 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01232 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01233 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01234 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01235 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01236 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01237 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01238 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01239 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01240 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01241 a=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01242 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01243 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01244 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01245 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01246 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01247 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01248 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01249 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01250 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01251 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01252 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01253 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01254 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01255 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01256 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01257 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01258 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01259 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01260 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01261 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01262 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01263 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01264 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01265 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01266 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01267 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01268 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01269 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01270 a=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01271 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01272 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01273 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01274 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01275 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01276 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01277 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01278 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01279 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01280 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getComposer()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest,com.mpatric.mp3agic.ID3WrapperTest#getComposerReturnsV2TagsComposer,com.mpatric.mp3agic.ID3WrapperTest#setsComposerOnV2Tag
01281 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01282 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01283 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01284 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01285 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly
01286 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01287 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01288 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01289 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01290 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01291 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01292 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01293 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01294 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01295 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01296 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01297 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01298 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01299 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01300 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01301 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01302 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01303 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01304 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01305 a=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01306 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01307 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01308 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01309 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01310 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01311 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01312 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01313 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01314 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01315 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getCopyright()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest,com.mpatric.mp3agic.ID3WrapperTest#getCopyrightReturnsV2TagsCopyright,com.mpatric.mp3agic.ID3WrapperTest#setsCopyrightOnV2Tag
01316 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01317 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01318 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01319 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01320 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly
01321 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01322 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01323 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01324 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01325 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01326 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01327 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01328 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01329 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01330 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01331 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01332 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01333 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01334 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01335 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01336 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01337 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01338 a=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01339 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01340 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01341 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01342 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01343 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01344 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01345 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01346 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01347 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01348 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01349 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01350 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01351 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01352 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01353 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01354 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01355 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01356 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01357 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01358 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01359 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01360 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01361 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01362 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01363 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01364 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01365 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01366 a=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01367 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01368 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01369 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01370 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01371 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01372 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01373 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01374 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01375 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01376 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getEncoder()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest,com.mpatric.mp3agic.ID3WrapperTest#getEncoderReturnsV2TagsEncoder,com.mpatric.mp3agic.ID3WrapperTest#setsEncoderOnV2Tag
01377 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01378 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01379 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01380 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01381 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly
01382 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01383 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01384 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01385 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01386 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01387 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01388 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01389 a=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01390 a=com.mpatric.mp3agic.ID3v2.setFooter(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01391 a=com.mpatric.mp3agic.ID3v2.setFooter(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01392 a=com.mpatric.mp3agic.ID3v2.setFooter(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01393 a=com.mpatric.mp3agic.ID3v2.setFooter(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01394 a=com.mpatric.mp3agic.ID3v2.setFooter(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01395 a=com.mpatric.mp3agic.ID3v2.setFooter(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01396 a=com.mpatric.mp3agic.ID3v2.setFooter(Z)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01397 a=com.mpatric.mp3agic.ID3v2.setFooter(Z)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01398 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01399 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01400 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01401 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01402 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01403 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01404 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01405 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01406 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01407 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01408 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3WrapperTest#getGenreReturnsV1TagsGenreIfV2TagsGenreIsNegativeOne,com.mpatric.mp3agic.ID3WrapperTest#setsGenreOnBothV1AndV2Tags,com.mpatric.mp3agic.ID3WrapperTest#setsGenreOnV2TagOnly,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01409 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01410 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01411 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01412 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01413 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01414 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01415 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01416 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01417 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01418 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01419 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01420 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01421 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01422 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01423 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01424 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01425 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01426 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01427 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01428 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01429 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01430 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01431 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01432 a=com.mpatric.mp3agic.ID3v2.setGenre(I)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01433 a=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01434 a=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01435 a=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01436 a=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest,com.mpatric.mp3agic.ID3WrapperTest#getGenreDescriptionReturnsV2TagsGenreDescriptionBeforeV1TagsGenreDescription,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01437 a=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01438 a=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01439 a=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01440 a=com.mpatric.mp3agic.ID3v2.setLyrics(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getLyrics()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest,com.mpatric.mp3agic.ID3WrapperTest#getLyricsReturnsV2TagsLyrics,com.mpatric.mp3agic.ID3WrapperTest#setsLyricsOnV2Tag
01441 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01442 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01443 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01444 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01445 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01446 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01447 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01448 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01449 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01450 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01451 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01452 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01453 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getOriginalArtist()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest,com.mpatric.mp3agic.ID3WrapperTest#getOriginalArtistReturnsV2TagsOriginalArtist,com.mpatric.mp3agic.ID3WrapperTest#setsOriginalArtistOnV2Tag
01454 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01455 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly
01456 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01457 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01458 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01459 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01460 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01461 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01462 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01463 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01464 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01465 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01466 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01467 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01468 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01469 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01470 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01471 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01472 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01473 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01474 a=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01475 a=com.mpatric.mp3agic.ID3v2.setPadding(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01476 a=com.mpatric.mp3agic.ID3v2.setPadding(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01477 a=com.mpatric.mp3agic.ID3v2.setPadding(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag
01478 a=com.mpatric.mp3agic.ID3v2.setPadding(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01479 a=com.mpatric.mp3agic.ID3v2.setPadding(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01480 a=com.mpatric.mp3agic.ID3v2.setPadding(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01481 a=com.mpatric.mp3agic.ID3v2.setPadding(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01482 a=com.mpatric.mp3agic.ID3v2.setPadding(Z)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01483 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01484 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01485 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01486 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01487 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01488 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01489 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01490 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01491 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01492 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01493 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01494 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01495 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01496 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01497 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01498 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01499 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01500 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01501 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01502 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01503 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01504 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01505 a=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01506 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01507 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01508 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01509 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01510 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01511 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01512 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01513 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01514 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01515 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01516 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01517 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01518 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01519 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01520 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01521 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01522 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01523 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01524 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01525 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01526 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01527 a=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01528 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01529 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01530 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01531 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01532 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01533 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01534 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01535 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01536 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01537 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01538 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01539 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01540 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01541 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01542 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01543 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01544 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01545 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01546 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01547 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01548 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01549 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01550 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01551 a=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01552 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01553 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01554 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01555 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01556 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01557 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01558 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01559 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01560 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01561 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01562 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01563 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01564 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getTitle()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest#getTitleReturnsV1TagsTitleIfV2TagsTitleDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#setsTitleOnBothV1AndV2Tags,com.mpatric.mp3agic.ID3WrapperTest#setsTitleOnV2TagOnly
01565 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01566 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01567 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly
01568 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01569 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01570 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01571 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01572 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01573 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01574 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01575 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01576 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01577 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01578 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01579 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01580 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01581 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01582 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01583 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01584 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01585 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01586 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01587 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01588 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01589 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01590 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01591 a=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01592 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01593 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01594 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01595 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01596 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01597 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01598 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01599 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01600 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01601 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01602 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01603 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01604 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getTrack()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest#getTrackReturnsV1TagsTrackIfV2TagsTrackDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#setsTrackOnBothV1AndV2Tags,com.mpatric.mp3agic.ID3WrapperTest#setsTrackOnV2TagOnly
01605 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbum(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01606 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01607 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setArtist(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01608 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01609 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01610 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01611 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01612 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01613 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01614 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01615 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01616 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01617 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01618 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01619 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01620 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01621 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01622 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01623 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01624 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01625 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setTitle(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01626 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01627 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01628 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01629 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01630 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01631 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01632 a=com.mpatric.mp3agic.ID3v2.setTrack(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01633 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01634 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01635 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01636 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01637 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01638 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01639 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01640 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01641 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01642 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01643 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01644 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01645 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest,com.mpatric.mp3agic.ID3WrapperTest#getUrlReturnsV2TagsUrl,com.mpatric.mp3agic.ID3WrapperTest#setsUrlOnV2Tag
01646 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01647 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly
01648 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01649 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01650 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01651 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01652 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01653 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01654 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01655 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01656 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01657 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01658 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01659 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01660 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01661 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01662 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01663 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01664 a=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01665 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01666 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01667 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag
01668 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01669 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01670 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01671 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01672 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setAlbumImage([BLjava/lang/String;BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01673 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag
01674 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01675 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01676 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01677 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.getYear()Ljava/lang/String; com.mpatric.mp3agic.ID3WrapperTest#getYearReturnsV1TagsYearIfV2TagsYearDoesNotExist,com.mpatric.mp3agic.ID3WrapperTest#setsYearOnV2TagOnly,com.mpatric.mp3agic.ID3WrapperTest#setsYearOnBothV1AndV2Tags
01678 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAlbumImage([BLjava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01679 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setArtistUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01680 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudioSourceUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01681 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setAudiofileUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01682 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setComment(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01683 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCommercialUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01684 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setComposer(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01685 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCopyright(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01686 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setCopyrightUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01687 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setEncoder(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01688 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setFooter(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01689 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenre(I)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01690 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setGenreDescription(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01691 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setOriginalArtist(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01692 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPadding(Z)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01693 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPaymentUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01694 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setPublisherUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01695 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setRadiostationUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01696 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setUrl(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01697 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.setWmpRating(I)V com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
01698 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2.toBytes()[B com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01699 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01700 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01701 a=com.mpatric.mp3agic.ID3v2.setYear(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01702 a=com.mpatric.mp3agic.ID3v2.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01703 a=com.mpatric.mp3agic.ID3v2.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
01704 a=com.mpatric.mp3agic.ID3v2.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
01705 a=com.mpatric.mp3agic.ID3v2.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2Tag.packFooter([BI)I com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter
01706 a=com.mpatric.mp3agic.ID3v2.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
01707 a=com.mpatric.mp3agic.ID3v2.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
01708 a=com.mpatric.mp3agic.ID3v2.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
01709 a=com.mpatric.mp3agic.ID3v22Tag.getAlbumArtist()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist
01710 a=com.mpatric.mp3agic.ID3v22Tag.getBPM()I b=com.mpatric.mp3agic.AbstractID3v2Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM
01711 a=com.mpatric.mp3agic.ID3v22Tag.getDate()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate
01712 a=com.mpatric.mp3agic.ID3v22Tag.getGrouping()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping
01713 a=com.mpatric.mp3agic.ID3v22Tag.getItunesComment()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractCommentFrameData(Ljava/lang/String;Z)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment
01714 a=com.mpatric.mp3agic.ID3v22Tag.getKey()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey
01715 a=com.mpatric.mp3agic.ID3v22Tag.getLyrics()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractLyricsFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2CommentFrameData; com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
01716 a=com.mpatric.mp3agic.ID3v22Tag.getPartOfSet()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet
01717 a=com.mpatric.mp3agic.ID3v22Tag.getPublisher()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher
01718 a=com.mpatric.mp3agic.ID3v22Tag.isCompilation()Z b=com.mpatric.mp3agic.AbstractID3v2Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation
01719 a=com.mpatric.mp3agic.ID3v22Tag.setAlbumArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist
01720 a=com.mpatric.mp3agic.ID3v22Tag.setAlbumArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist
01721 a=com.mpatric.mp3agic.ID3v22Tag.setAlbumArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist
01722 a=com.mpatric.mp3agic.ID3v22Tag.setAlbumArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist
01723 a=com.mpatric.mp3agic.ID3v22Tag.setAlbumArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist
01724 a=com.mpatric.mp3agic.ID3v22Tag.setAlbumArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist
01725 a=com.mpatric.mp3agic.ID3v22Tag.setAlbumArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist
01726 a=com.mpatric.mp3agic.ID3v22Tag.setAlbumArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist
01727 a=com.mpatric.mp3agic.ID3v22Tag.setAlbumArtist(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v22Tag.toBytes()[B com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist
01728 a=com.mpatric.mp3agic.ID3v22Tag.setBPM(I)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM
01729 a=com.mpatric.mp3agic.ID3v22Tag.setBPM(I)V b=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM
01730 a=com.mpatric.mp3agic.ID3v22Tag.setBPM(I)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM
01731 a=com.mpatric.mp3agic.ID3v22Tag.setBPM(I)V b=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM
01732 a=com.mpatric.mp3agic.ID3v22Tag.setBPM(I)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM
01733 a=com.mpatric.mp3agic.ID3v22Tag.setBPM(I)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM
01734 a=com.mpatric.mp3agic.ID3v22Tag.setBPM(I)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM
01735 a=com.mpatric.mp3agic.ID3v22Tag.setBPM(I)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM
01736 a=com.mpatric.mp3agic.ID3v22Tag.setBPM(I)V b=com.mpatric.mp3agic.ID3v22Tag.toBytes()[B com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM
01737 a=com.mpatric.mp3agic.ID3v22Tag.setCompilation(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation
01738 a=com.mpatric.mp3agic.ID3v22Tag.setCompilation(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation
01739 a=com.mpatric.mp3agic.ID3v22Tag.setCompilation(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation
01740 a=com.mpatric.mp3agic.ID3v22Tag.setCompilation(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation
01741 a=com.mpatric.mp3agic.ID3v22Tag.setCompilation(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation
01742 a=com.mpatric.mp3agic.ID3v22Tag.setCompilation(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation
01743 a=com.mpatric.mp3agic.ID3v22Tag.setCompilation(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation
01744 a=com.mpatric.mp3agic.ID3v22Tag.setCompilation(Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation
01745 a=com.mpatric.mp3agic.ID3v22Tag.setCompilation(Z)V b=com.mpatric.mp3agic.ID3v22Tag.toBytes()[B com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation
01746 a=com.mpatric.mp3agic.ID3v22Tag.setDate(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate
01747 a=com.mpatric.mp3agic.ID3v22Tag.setDate(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate
01748 a=com.mpatric.mp3agic.ID3v22Tag.setDate(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate
01749 a=com.mpatric.mp3agic.ID3v22Tag.setDate(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate
01750 a=com.mpatric.mp3agic.ID3v22Tag.setDate(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate
01751 a=com.mpatric.mp3agic.ID3v22Tag.setDate(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate
01752 a=com.mpatric.mp3agic.ID3v22Tag.setDate(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate
01753 a=com.mpatric.mp3agic.ID3v22Tag.setDate(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate
01754 a=com.mpatric.mp3agic.ID3v22Tag.setDate(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v22Tag.toBytes()[B com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate
01755 a=com.mpatric.mp3agic.ID3v22Tag.setGrouping(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping
01756 a=com.mpatric.mp3agic.ID3v22Tag.setGrouping(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping
01757 a=com.mpatric.mp3agic.ID3v22Tag.setGrouping(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping
01758 a=com.mpatric.mp3agic.ID3v22Tag.setGrouping(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping
01759 a=com.mpatric.mp3agic.ID3v22Tag.setGrouping(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping
01760 a=com.mpatric.mp3agic.ID3v22Tag.setGrouping(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping
01761 a=com.mpatric.mp3agic.ID3v22Tag.setGrouping(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping
01762 a=com.mpatric.mp3agic.ID3v22Tag.setGrouping(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping
01763 a=com.mpatric.mp3agic.ID3v22Tag.setGrouping(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v22Tag.toBytes()[B com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping
01764 a=com.mpatric.mp3agic.ID3v22Tag.setItunesComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment
01765 a=com.mpatric.mp3agic.ID3v22Tag.setItunesComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment
01766 a=com.mpatric.mp3agic.ID3v22Tag.setItunesComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment
01767 a=com.mpatric.mp3agic.ID3v22Tag.setItunesComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment
01768 a=com.mpatric.mp3agic.ID3v22Tag.setItunesComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment
01769 a=com.mpatric.mp3agic.ID3v22Tag.setItunesComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment
01770 a=com.mpatric.mp3agic.ID3v22Tag.setItunesComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment
01771 a=com.mpatric.mp3agic.ID3v22Tag.setItunesComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment
01772 a=com.mpatric.mp3agic.ID3v22Tag.setItunesComment(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v22Tag.toBytes()[B com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment
01773 a=com.mpatric.mp3agic.ID3v22Tag.setKey(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey
01774 a=com.mpatric.mp3agic.ID3v22Tag.setKey(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey
01775 a=com.mpatric.mp3agic.ID3v22Tag.setKey(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey
01776 a=com.mpatric.mp3agic.ID3v22Tag.setKey(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey
01777 a=com.mpatric.mp3agic.ID3v22Tag.setKey(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey
01778 a=com.mpatric.mp3agic.ID3v22Tag.setKey(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey
01779 a=com.mpatric.mp3agic.ID3v22Tag.setKey(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey
01780 a=com.mpatric.mp3agic.ID3v22Tag.setKey(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey
01781 a=com.mpatric.mp3agic.ID3v22Tag.setKey(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v22Tag.toBytes()[B com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey
01782 a=com.mpatric.mp3agic.ID3v22Tag.setLyrics(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
01783 a=com.mpatric.mp3agic.ID3v22Tag.setLyrics(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
01784 a=com.mpatric.mp3agic.ID3v22Tag.setLyrics(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
01785 a=com.mpatric.mp3agic.ID3v22Tag.setLyrics(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
01786 a=com.mpatric.mp3agic.ID3v22Tag.setLyrics(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
01787 a=com.mpatric.mp3agic.ID3v22Tag.setLyrics(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
01788 a=com.mpatric.mp3agic.ID3v22Tag.setLyrics(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
01789 a=com.mpatric.mp3agic.ID3v22Tag.setLyrics(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
01790 a=com.mpatric.mp3agic.ID3v22Tag.setLyrics(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v22Tag.toBytes()[B com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
01791 a=com.mpatric.mp3agic.ID3v22Tag.setPartOfSet(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet
01792 a=com.mpatric.mp3agic.ID3v22Tag.setPartOfSet(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet
01793 a=com.mpatric.mp3agic.ID3v22Tag.setPartOfSet(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet
01794 a=com.mpatric.mp3agic.ID3v22Tag.setPartOfSet(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet
01795 a=com.mpatric.mp3agic.ID3v22Tag.setPartOfSet(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet
01796 a=com.mpatric.mp3agic.ID3v22Tag.setPartOfSet(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet
01797 a=com.mpatric.mp3agic.ID3v22Tag.setPartOfSet(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet
01798 a=com.mpatric.mp3agic.ID3v22Tag.setPartOfSet(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet
01799 a=com.mpatric.mp3agic.ID3v22Tag.setPartOfSet(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v22Tag.toBytes()[B com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet
01800 a=com.mpatric.mp3agic.ID3v22Tag.setPublisher(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher
01801 a=com.mpatric.mp3agic.ID3v22Tag.setPublisher(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher
01802 a=com.mpatric.mp3agic.ID3v22Tag.setPublisher(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher
01803 a=com.mpatric.mp3agic.ID3v22Tag.setPublisher(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.invalidateDataLength()V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher
01804 a=com.mpatric.mp3agic.ID3v22Tag.setPublisher(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher
01805 a=com.mpatric.mp3agic.ID3v22Tag.setPublisher(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher
01806 a=com.mpatric.mp3agic.ID3v22Tag.setPublisher(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher
01807 a=com.mpatric.mp3agic.ID3v22Tag.setPublisher(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher
01808 a=com.mpatric.mp3agic.ID3v22Tag.setPublisher(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v22Tag.toBytes()[B com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher
01809 a=com.mpatric.mp3agic.ID3v22Tag.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
01810 a=com.mpatric.mp3agic.ID3v22Tag.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
01811 a=com.mpatric.mp3agic.ID3v22Tag.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
01812 a=com.mpatric.mp3agic.ID3v22Tag.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
01813 a=com.mpatric.mp3agic.ID3v22Tag.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
01814 a=com.mpatric.mp3agic.ID3v22Tag.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics
01815 a=com.mpatric.mp3agic.ID3v22Tag.unpackFlags([B)V b=com.mpatric.mp3agic.ID3v22Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v22TagTest,all-tests,com.mpatric.mp3agic.ID3v22TagTest#shouldUnpackAndPackOffUnsynchronizationBit,com.mpatric.mp3agic.ID3v22TagTest#shouldUnpackAndPackOffCompressionBit,com.mpatric.mp3agic.ID3v22TagTest#shouldUnpackAndPackOnUnsynchronizationBit,com.mpatric.mp3agic.ID3v22TagTest#shouldUnpackAndPackOnCompressionBit
01816 a=com.mpatric.mp3agic.ID3v24Tag.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01817 a=com.mpatric.mp3agic.ID3v24Tag.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01818 a=com.mpatric.mp3agic.ID3v24Tag.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01819 a=com.mpatric.mp3agic.ID3v24Tag.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01820 a=com.mpatric.mp3agic.ID3v24Tag.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01821 a=com.mpatric.mp3agic.ID3v24Tag.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;Z)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01822 a=com.mpatric.mp3agic.ID3v24Tag.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;Z)V b=com.mpatric.mp3agic.ID3v24Tag.toBytes()[B com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01823 a=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01824 a=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01825 a=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01826 a=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01827 a=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01828 a=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01829 a=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01830 a=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01831 a=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01832 a=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.ID3v24Tag.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;Z)V com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01833 a=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.ID3v24Tag.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
01834 a=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; b=com.mpatric.mp3agic.ID3v24Tag.toBytes()[B com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01835 a=com.mpatric.mp3agic.ID3v24Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; b=com.mpatric.mp3agic.AbstractID3v2Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01836 a=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01837 a=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01838 a=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01839 a=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01840 a=com.mpatric.mp3agic.ID3v24Tag.getRecordingTime()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01841 a=com.mpatric.mp3agic.ID3v24Tag.getRecordingTime()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v24Tag.extractTextFrameData(Ljava/lang/String;)Lcom/mpatric/mp3agic/ID3v2TextFrameData; com.mpatric.mp3agic.ID3v24TagTest,all-tests,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01842 a=com.mpatric.mp3agic.ID3v24Tag.invalidateDataLength()V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01843 a=com.mpatric.mp3agic.ID3v24Tag.invalidateDataLength()V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01844 a=com.mpatric.mp3agic.ID3v24Tag.invalidateDataLength()V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01845 a=com.mpatric.mp3agic.ID3v24Tag.invalidateDataLength()V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01846 a=com.mpatric.mp3agic.ID3v24Tag.invalidateDataLength()V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01847 a=com.mpatric.mp3agic.ID3v24Tag.invalidateDataLength()V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01848 a=com.mpatric.mp3agic.ID3v24Tag.invalidateDataLength()V b=com.mpatric.mp3agic.ID3v24Tag.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;Z)V com.mpatric.mp3agic.ID3v24TagTest,all-tests,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01849 a=com.mpatric.mp3agic.ID3v24Tag.invalidateDataLength()V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01850 a=com.mpatric.mp3agic.ID3v24Tag.invalidateDataLength()V b=com.mpatric.mp3agic.ID3v24Tag.toBytes()[B com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01851 a=com.mpatric.mp3agic.ID3v24Tag.invalidateDataLength()V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01852 a=com.mpatric.mp3agic.ID3v24Tag.setGenreDescription(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
01853 a=com.mpatric.mp3agic.ID3v24Tag.setGenreDescription(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
01854 a=com.mpatric.mp3agic.ID3v24Tag.setGenreDescription(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
01855 a=com.mpatric.mp3agic.ID3v24Tag.setGenreDescription(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
01856 a=com.mpatric.mp3agic.ID3v24Tag.setGenreDescription(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
01857 a=com.mpatric.mp3agic.ID3v24Tag.setGenreDescription(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
01858 a=com.mpatric.mp3agic.ID3v24Tag.setGenreDescription(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
01859 a=com.mpatric.mp3agic.ID3v24Tag.setGenreDescription(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest,all-tests,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
01860 a=com.mpatric.mp3agic.ID3v24Tag.setGenreDescription(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.toBytes()[B com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
01861 a=com.mpatric.mp3agic.ID3v24Tag.setGenreDescription(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
01862 a=com.mpatric.mp3agic.ID3v24Tag.setRecordingTime(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01863 a=com.mpatric.mp3agic.ID3v24Tag.setRecordingTime(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01864 a=com.mpatric.mp3agic.ID3v24Tag.setRecordingTime(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01865 a=com.mpatric.mp3agic.ID3v24Tag.setRecordingTime(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01866 a=com.mpatric.mp3agic.ID3v24Tag.setRecordingTime(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01867 a=com.mpatric.mp3agic.ID3v24Tag.setRecordingTime(Ljava/lang/String;)V b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01868 a=com.mpatric.mp3agic.ID3v24Tag.setRecordingTime(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;Z)V com.mpatric.mp3agic.ID3v24TagTest,all-tests,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01869 a=com.mpatric.mp3agic.ID3v24Tag.setRecordingTime(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01870 a=com.mpatric.mp3agic.ID3v24Tag.setRecordingTime(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.invalidateDataLength()V com.mpatric.mp3agic.ID3v24TagTest,all-tests,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01871 a=com.mpatric.mp3agic.ID3v24Tag.setRecordingTime(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.toBytes()[B com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01872 a=com.mpatric.mp3agic.ID3v24Tag.setRecordingTime(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01873 a=com.mpatric.mp3agic.ID3v24Tag.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01874 a=com.mpatric.mp3agic.ID3v24Tag.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01875 a=com.mpatric.mp3agic.ID3v24Tag.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01876 a=com.mpatric.mp3agic.ID3v24Tag.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01877 a=com.mpatric.mp3agic.ID3v24Tag.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01878 a=com.mpatric.mp3agic.ID3v24Tag.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01879 a=com.mpatric.mp3agic.ID3v24Tag.toBytes()[B b=com.mpatric.mp3agic.ID3v24Tag.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
01880 a=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z b=com.mpatric.mp3agic.AbstractID3v2Tag.calculateDataLength()I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01881 a=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z b=com.mpatric.mp3agic.AbstractID3v2Tag.getLength()I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01882 a=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z b=com.mpatric.mp3agic.AbstractID3v2Tag.packFlags([BI)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01883 a=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z b=com.mpatric.mp3agic.AbstractID3v2Tag.packFrames([BI)I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01884 a=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z b=com.mpatric.mp3agic.AbstractID3v2Tag.packHeader([BI)I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01885 a=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z b=com.mpatric.mp3agic.AbstractID3v2Tag.packTag([B)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01886 a=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z b=com.mpatric.mp3agic.ID3v2.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01887 a=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z b=com.mpatric.mp3agic.ID3v2.getGenre()I com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01888 a=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z b=com.mpatric.mp3agic.ID3v2.getGenreDescription()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01889 a=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z b=com.mpatric.mp3agic.ID3v24Tag.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;Z)V com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01890 a=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z b=com.mpatric.mp3agic.ID3v24Tag.createFrame(Ljava/lang/String;[B)Lcom/mpatric/mp3agic/ID3v2Frame; com.mpatric.mp3agic.ID3v24TagTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01891 a=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z b=com.mpatric.mp3agic.ID3v24Tag.getFrameSets()Ljava/util/Map; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01892 a=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z b=com.mpatric.mp3agic.ID3v24Tag.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription
01893 a=com.mpatric.mp3agic.ID3v24Tag.useFrameUnsynchronisation()Z b=com.mpatric.mp3agic.ID3v24Tag.toBytes()[B com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime
01894 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.addSubframe(Ljava/lang/String;Lcom/mpatric/mp3agic/AbstractID3v2FrameData;)V b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getLength()I com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject
01895 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.addSubframe(Ljava/lang/String;Lcom/mpatric/mp3agic/AbstractID3v2FrameData;)V b=com.mpatric.mp3agic.ID3v2ChapterFrameData.toBytes()[B com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject
01896 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.getEndOffset()I b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getSubframes()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01897 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.getEndTime()I b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getEndOffset()I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01898 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.getEndTime()I b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getStartOffset()I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01899 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.getEndTime()I b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getSubframes()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01900 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.getId()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getEndOffset()I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01901 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.getId()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getEndTime()I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01902 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.getId()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getStartOffset()I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01903 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.getId()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getStartTime()I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01904 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.getId()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getSubframes()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01905 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.getStartOffset()I b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getEndOffset()I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01906 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.getStartOffset()I b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getSubframes()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01907 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.getStartTime()I b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getEndOffset()I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01908 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.getStartTime()I b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getEndTime()I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01909 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.getStartTime()I b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getStartOffset()I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01910 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.getStartTime()I b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getSubframes()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01911 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.setEndOffset(I)V b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getEndOffset()I com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#getsAndSetsEndOffset
01912 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.setEndTime(I)V b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getEndTime()I com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#getsAndSetsEndTime
01913 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.setId(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getId()Ljava/lang/String; com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#getsAndSetsId
01914 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.setStartOffset(I)V b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getStartOffset()I com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#getsAndSetsStartOffset
01915 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.setStartTime(I)V b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getStartTime()I com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#getsAndSetsStartTime
01916 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.setSubframes(Ljava/util/ArrayList;)V b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getSubframes()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#getsAndSetsSubframes
01917 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject
01918 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getEndOffset()I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01919 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getEndTime()I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01920 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getId()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01921 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getStartOffset()I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01922 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getStartTime()I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01923 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getSubframes()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
01924 a=com.mpatric.mp3agic.ID3v2ChapterFrameData.toBytes()[B b=com.mpatric.mp3agic.ID3v2ChapterFrameData.getLength()I com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,all-tests,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject
01925 a=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.addSubframe(Ljava/lang/String;Lcom/mpatric/mp3agic/AbstractID3v2FrameData;)V b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getFlags()B com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject
01926 a=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.addSubframe(Ljava/lang/String;Lcom/mpatric/mp3agic/AbstractID3v2FrameData;)V b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getLength()I com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject
01927 a=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.addSubframe(Ljava/lang/String;Lcom/mpatric/mp3agic/AbstractID3v2FrameData;)V b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.toBytes()[B com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject
01928 a=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getChildren()[Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getSubframes()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
01929 a=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getId()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getChildren()[Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
01930 a=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getId()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getSubframes()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
01931 a=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getLength()I b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getFlags()B com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,all-tests,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject
01932 a=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.setChildren([Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getChildren()[Ljava/lang/String; com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#getsAndSetsChildren
01933 a=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.setId(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getId()Ljava/lang/String; com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#getsAndSetsId
01934 a=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.setOrdered(Z)V b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.isOrdered()Z com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,all-tests,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#getsAndSetsIsOrdered
01935 a=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.setRoot(Z)V b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.isRoot()Z com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,all-tests,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#getsAndSetsIsRoot
01936 a=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.setSubframes(Ljava/util/ArrayList;)V b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getSubframes()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#getsAndSetsSubframes
01937 a=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
01938 a=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getChildren()[Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
01939 a=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getId()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
01940 a=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getSubframes()Ljava/util/ArrayList; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3
01941 a=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.toBytes()[B b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getFlags()B com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,all-tests,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject
01942 a=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.toBytes()[B b=com.mpatric.mp3agic.ID3v2ChapterTOCFrameData.getLength()I com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,all-tests,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject
01943 a=com.mpatric.mp3agic.ID3v2CommentFrameData.getComment()Lcom/mpatric/mp3agic/EncodedText; b=com.mpatric.mp3agic.AbstractID3v2FrameData.packAndUnsynchroniseFrameData()[B com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01944 a=com.mpatric.mp3agic.ID3v2CommentFrameData.getComment()Lcom/mpatric/mp3agic/EncodedText; b=com.mpatric.mp3agic.AbstractID3v2FrameData.packFrameData()[B com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01945 a=com.mpatric.mp3agic.ID3v2CommentFrameData.getComment()Lcom/mpatric/mp3agic/EncodedText; b=com.mpatric.mp3agic.ID3v2CommentFrameData.getLength()I com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01946 a=com.mpatric.mp3agic.ID3v2CommentFrameData.getComment()Lcom/mpatric/mp3agic/EncodedText; b=com.mpatric.mp3agic.ID3v2CommentFrameData.toBytes()[B com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01947 a=com.mpatric.mp3agic.ID3v2CommentFrameData.getDescription()Lcom/mpatric/mp3agic/EncodedText; b=com.mpatric.mp3agic.AbstractID3v2FrameData.packAndUnsynchroniseFrameData()[B com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01948 a=com.mpatric.mp3agic.ID3v2CommentFrameData.getDescription()Lcom/mpatric/mp3agic/EncodedText; b=com.mpatric.mp3agic.AbstractID3v2FrameData.packFrameData()[B com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01949 a=com.mpatric.mp3agic.ID3v2CommentFrameData.getDescription()Lcom/mpatric/mp3agic/EncodedText; b=com.mpatric.mp3agic.ID3v2CommentFrameData.getComment()Lcom/mpatric/mp3agic/EncodedText; com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsEmptyFrameDataToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoCommentToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionAndCommentIsUnicodeToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoLanguageToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01950 a=com.mpatric.mp3agic.ID3v2CommentFrameData.getDescription()Lcom/mpatric/mp3agic/EncodedText; b=com.mpatric.mp3agic.ID3v2CommentFrameData.getLength()I com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01951 a=com.mpatric.mp3agic.ID3v2CommentFrameData.getDescription()Lcom/mpatric/mp3agic/EncodedText; b=com.mpatric.mp3agic.ID3v2CommentFrameData.toBytes()[B com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01952 a=com.mpatric.mp3agic.ID3v2CommentFrameData.getLanguage()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2FrameData.packAndUnsynchroniseFrameData()[B com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01953 a=com.mpatric.mp3agic.ID3v2CommentFrameData.getLanguage()Ljava/lang/String; b=com.mpatric.mp3agic.AbstractID3v2FrameData.packFrameData()[B com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01954 a=com.mpatric.mp3agic.ID3v2CommentFrameData.getLanguage()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2CommentFrameData.getComment()Lcom/mpatric/mp3agic/EncodedText; com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsEmptyFrameDataToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoCommentToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionAndCommentIsUnicodeToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoLanguageToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01955 a=com.mpatric.mp3agic.ID3v2CommentFrameData.getLanguage()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2CommentFrameData.getDescription()Lcom/mpatric/mp3agic/EncodedText; com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsEmptyFrameDataToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoCommentToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionAndCommentIsUnicodeToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoLanguageToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01956 a=com.mpatric.mp3agic.ID3v2CommentFrameData.getLanguage()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2CommentFrameData.getLength()I com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01957 a=com.mpatric.mp3agic.ID3v2CommentFrameData.getLanguage()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2CommentFrameData.toBytes()[B com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01958 a=com.mpatric.mp3agic.ID3v2CommentFrameData.setComment(Lcom/mpatric/mp3agic/EncodedText;)V b=com.mpatric.mp3agic.ID3v2CommentFrameData.getComment()Lcom/mpatric/mp3agic/EncodedText; com.mpatric.mp3agic.ID3v2CommentFrameDataTest#getsAndSetsComment
01959 a=com.mpatric.mp3agic.ID3v2CommentFrameData.setDescription(Lcom/mpatric/mp3agic/EncodedText;)V b=com.mpatric.mp3agic.ID3v2CommentFrameData.getDescription()Lcom/mpatric/mp3agic/EncodedText; com.mpatric.mp3agic.ID3v2CommentFrameDataTest#getsAndSetsDescription
01960 a=com.mpatric.mp3agic.ID3v2CommentFrameData.setLanguage(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2CommentFrameData.getLanguage()Ljava/lang/String; com.mpatric.mp3agic.ID3v2CommentFrameDataTest#getsAndSetsLanguage
01961 a=com.mpatric.mp3agic.ID3v2CommentFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.AbstractID3v2FrameData.packAndUnsynchroniseFrameData()[B com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01962 a=com.mpatric.mp3agic.ID3v2CommentFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.AbstractID3v2FrameData.packFrameData()[B com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01963 a=com.mpatric.mp3agic.ID3v2CommentFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V com.mpatric.mp3agic.ID3v2CommentFrameDataTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsEmptyFrameDataToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoCommentToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionAndCommentIsUnicodeToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoLanguageToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithUnicodeToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment
01964 a=com.mpatric.mp3agic.ID3v2CommentFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2CommentFrameData.getComment()Lcom/mpatric/mp3agic/EncodedText; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsEmptyFrameDataToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoCommentToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionAndCommentIsUnicodeToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoLanguageToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01965 a=com.mpatric.mp3agic.ID3v2CommentFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2CommentFrameData.getDescription()Lcom/mpatric/mp3agic/EncodedText; com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsEmptyFrameDataToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoCommentToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionAndCommentIsUnicodeToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoLanguageToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01966 a=com.mpatric.mp3agic.ID3v2CommentFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2CommentFrameData.getLanguage()Ljava/lang/String; com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsEmptyFrameDataToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoCommentToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionAndCommentIsUnicodeToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoLanguageToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01967 a=com.mpatric.mp3agic.ID3v2CommentFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2CommentFrameData.getLength()I com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01968 a=com.mpatric.mp3agic.ID3v2CommentFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2CommentFrameData.toBytes()[B com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject
01969 a=com.mpatric.mp3agic.ID3v2CommentFrameData.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2FrameData.packAndUnsynchroniseFrameData()[B com.mpatric.mp3agic.ID3v2CommentFrameDataTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsEmptyFrameDataToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoCommentToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionAndCommentIsUnicodeToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoLanguageToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithUnicodeToBytesAndBackToEquivalentObject
01970 a=com.mpatric.mp3agic.ID3v2CommentFrameData.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2FrameData.packFrameData()[B com.mpatric.mp3agic.ID3v2CommentFrameDataTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsEmptyFrameDataToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoCommentToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionAndCommentIsUnicodeToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoLanguageToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithUnicodeToBytesAndBackToEquivalentObject
01971 a=com.mpatric.mp3agic.ID3v2CommentFrameData.toBytes()[B b=com.mpatric.mp3agic.ID3v2CommentFrameData.getLength()I com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2CommentFrameDataTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsEmptyFrameDataToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoCommentToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionAndCommentIsUnicodeToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoLanguageToBytesAndBack,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithUnicodeToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
01972 a=com.mpatric.mp3agic.ID3v2Frame.getDataLength()I b=com.mpatric.mp3agic.ID3v2Frame.packDataLength()[B com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
01973 a=com.mpatric.mp3agic.ID3v2Frame.getDataLength()I b=com.mpatric.mp3agic.ID3v2Frame.packFlags()[B com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
01974 a=com.mpatric.mp3agic.ID3v2Frame.getDataLength()I b=com.mpatric.mp3agic.ID3v2Frame.packFrame([BI)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
01975 a=com.mpatric.mp3agic.ID3v2Frame.getDataLength()I b=com.mpatric.mp3agic.ID3v2Frame.packHeader([BI)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
01976 a=com.mpatric.mp3agic.ID3v2Frame.getDataLength()I b=com.mpatric.mp3agic.ID3v2Frame.toBytes()[B com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
01977 a=com.mpatric.mp3agic.ID3v2Frame.getId()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2Frame.getData()[B com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame
01978 a=com.mpatric.mp3agic.ID3v2Frame.getLength()I b=com.mpatric.mp3agic.ID3v2Frame.getData()[B com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
01979 a=com.mpatric.mp3agic.ID3v2Frame.getLength()I b=com.mpatric.mp3agic.ID3v2Frame.getId()Ljava/lang/String; com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame
01980 a=com.mpatric.mp3agic.ID3v2Frame.getLength()I b=com.mpatric.mp3agic.ID3v2Frame.packDataLength()[B com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject
01981 a=com.mpatric.mp3agic.ID3v2Frame.getLength()I b=com.mpatric.mp3agic.ID3v2Frame.packFlags()[B com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject
01982 a=com.mpatric.mp3agic.ID3v2Frame.getLength()I b=com.mpatric.mp3agic.ID3v2Frame.packFrame([BI)V com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject
01983 a=com.mpatric.mp3agic.ID3v2Frame.getLength()I b=com.mpatric.mp3agic.ID3v2Frame.packHeader([BI)V com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject
01984 a=com.mpatric.mp3agic.ID3v2Frame.hasCompression()Z b=com.mpatric.mp3agic.ID3v2Frame.hasEncryption()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
01985 a=com.mpatric.mp3agic.ID3v2Frame.hasCompression()Z b=com.mpatric.mp3agic.ID3v2Frame.hasGroup()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
01986 a=com.mpatric.mp3agic.ID3v2Frame.hasCompression()Z b=com.mpatric.mp3agic.ID3v2Frame.hasPreserveFile()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
01987 a=com.mpatric.mp3agic.ID3v2Frame.hasCompression()Z b=com.mpatric.mp3agic.ID3v2Frame.hasPreserveTag()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
01988 a=com.mpatric.mp3agic.ID3v2Frame.hasCompression()Z b=com.mpatric.mp3agic.ID3v2Frame.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
01989 a=com.mpatric.mp3agic.ID3v2Frame.hasCompression()Z b=com.mpatric.mp3agic.ID3v2Frame.isReadOnly()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
01990 a=com.mpatric.mp3agic.ID3v2Frame.hasDataLengthIndicator()Z b=com.mpatric.mp3agic.ID3v2Frame.hasCompression()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
01991 a=com.mpatric.mp3agic.ID3v2Frame.hasDataLengthIndicator()Z b=com.mpatric.mp3agic.ID3v2Frame.hasEncryption()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
01992 a=com.mpatric.mp3agic.ID3v2Frame.hasDataLengthIndicator()Z b=com.mpatric.mp3agic.ID3v2Frame.hasGroup()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
01993 a=com.mpatric.mp3agic.ID3v2Frame.hasDataLengthIndicator()Z b=com.mpatric.mp3agic.ID3v2Frame.hasPreserveFile()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
01994 a=com.mpatric.mp3agic.ID3v2Frame.hasDataLengthIndicator()Z b=com.mpatric.mp3agic.ID3v2Frame.hasPreserveTag()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
01995 a=com.mpatric.mp3agic.ID3v2Frame.hasDataLengthIndicator()Z b=com.mpatric.mp3agic.ID3v2Frame.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
01996 a=com.mpatric.mp3agic.ID3v2Frame.hasDataLengthIndicator()Z b=com.mpatric.mp3agic.ID3v2Frame.isReadOnly()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
01997 a=com.mpatric.mp3agic.ID3v2Frame.hasEncryption()Z b=com.mpatric.mp3agic.ID3v2Frame.hasGroup()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
01998 a=com.mpatric.mp3agic.ID3v2Frame.hasEncryption()Z b=com.mpatric.mp3agic.ID3v2Frame.hasPreserveFile()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
01999 a=com.mpatric.mp3agic.ID3v2Frame.hasEncryption()Z b=com.mpatric.mp3agic.ID3v2Frame.hasPreserveTag()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02000 a=com.mpatric.mp3agic.ID3v2Frame.hasEncryption()Z b=com.mpatric.mp3agic.ID3v2Frame.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02001 a=com.mpatric.mp3agic.ID3v2Frame.hasEncryption()Z b=com.mpatric.mp3agic.ID3v2Frame.isReadOnly()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02002 a=com.mpatric.mp3agic.ID3v2Frame.hasGroup()Z b=com.mpatric.mp3agic.ID3v2Frame.hasPreserveFile()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02003 a=com.mpatric.mp3agic.ID3v2Frame.hasGroup()Z b=com.mpatric.mp3agic.ID3v2Frame.hasPreserveTag()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02004 a=com.mpatric.mp3agic.ID3v2Frame.hasGroup()Z b=com.mpatric.mp3agic.ID3v2Frame.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02005 a=com.mpatric.mp3agic.ID3v2Frame.hasGroup()Z b=com.mpatric.mp3agic.ID3v2Frame.isReadOnly()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02006 a=com.mpatric.mp3agic.ID3v2Frame.hasPreserveFile()Z b=com.mpatric.mp3agic.ID3v2Frame.hasPreserveTag()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02007 a=com.mpatric.mp3agic.ID3v2Frame.hasPreserveFile()Z b=com.mpatric.mp3agic.ID3v2Frame.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02008 a=com.mpatric.mp3agic.ID3v2Frame.hasPreserveFile()Z b=com.mpatric.mp3agic.ID3v2Frame.isReadOnly()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02009 a=com.mpatric.mp3agic.ID3v2Frame.hasPreserveTag()Z b=com.mpatric.mp3agic.ID3v2Frame.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02010 a=com.mpatric.mp3agic.ID3v2Frame.hasPreserveTag()Z b=com.mpatric.mp3agic.ID3v2Frame.isReadOnly()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02011 a=com.mpatric.mp3agic.ID3v2Frame.isReadOnly()Z b=com.mpatric.mp3agic.ID3v2Frame.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02012 a=com.mpatric.mp3agic.ID3v2Frame.packDataLength()[B b=com.mpatric.mp3agic.ID3v2Frame.packFlags()[B com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02013 a=com.mpatric.mp3agic.ID3v2Frame.packFrame([BI)V b=com.mpatric.mp3agic.ID3v2Frame.packDataLength()[B com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02014 a=com.mpatric.mp3agic.ID3v2Frame.packFrame([BI)V b=com.mpatric.mp3agic.ID3v2Frame.packFlags()[B com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02015 a=com.mpatric.mp3agic.ID3v2Frame.packFrame([BI)V b=com.mpatric.mp3agic.ID3v2Frame.packHeader([BI)V com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02016 a=com.mpatric.mp3agic.ID3v2Frame.packHeader([BI)V b=com.mpatric.mp3agic.ID3v2Frame.packDataLength()[B com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02017 a=com.mpatric.mp3agic.ID3v2Frame.packHeader([BI)V b=com.mpatric.mp3agic.ID3v2Frame.packFlags()[B com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02018 a=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V b=com.mpatric.mp3agic.ID3v2Frame.getData()[B com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData
02019 a=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V b=com.mpatric.mp3agic.ID3v2Frame.getId()Ljava/lang/String; com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame
02020 a=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V b=com.mpatric.mp3agic.ID3v2Frame.getLength()I com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating
02021 a=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V b=com.mpatric.mp3agic.ID3v2Frame.hasCompression()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02022 a=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V b=com.mpatric.mp3agic.ID3v2Frame.hasDataLengthIndicator()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02023 a=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V b=com.mpatric.mp3agic.ID3v2Frame.hasEncryption()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02024 a=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V b=com.mpatric.mp3agic.ID3v2Frame.hasGroup()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02025 a=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V b=com.mpatric.mp3agic.ID3v2Frame.hasPreserveFile()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02026 a=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V b=com.mpatric.mp3agic.ID3v2Frame.hasPreserveTag()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02027 a=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V b=com.mpatric.mp3agic.ID3v2Frame.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02028 a=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V b=com.mpatric.mp3agic.ID3v2Frame.isReadOnly()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02029 a=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V b=com.mpatric.mp3agic.ID3v2Frame.setData([B)V com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData
02030 a=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V b=com.mpatric.mp3agic.ID3v2ObseleteFrame.getData()[B com.mpatric.mp3agic.ID3v2ObseleteFrameTest,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame
02031 a=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V b=com.mpatric.mp3agic.ID3v2ObseleteFrame.getId()Ljava/lang/String; com.mpatric.mp3agic.ID3v2ObseleteFrameTest,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame
02032 a=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V b=com.mpatric.mp3agic.ID3v2ObseleteFrame.getLength()I com.mpatric.mp3agic.ID3v2ObseleteFrameTest,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame
02033 a=com.mpatric.mp3agic.ID3v2Frame.setData([B)V b=com.mpatric.mp3agic.ID3v2Frame.getData()[B com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData
02034 a=com.mpatric.mp3agic.ID3v2Frame.toBytes()[B b=com.mpatric.mp3agic.ID3v2Frame.getLength()I com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject
02035 a=com.mpatric.mp3agic.ID3v2Frame.toBytes()[B b=com.mpatric.mp3agic.ID3v2Frame.packDataLength()[B com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02036 a=com.mpatric.mp3agic.ID3v2Frame.toBytes()[B b=com.mpatric.mp3agic.ID3v2Frame.packFlags()[B com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02037 a=com.mpatric.mp3agic.ID3v2Frame.toBytes()[B b=com.mpatric.mp3agic.ID3v2Frame.packFrame([BI)V com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02038 a=com.mpatric.mp3agic.ID3v2Frame.toBytes()[B b=com.mpatric.mp3agic.ID3v2Frame.packHeader([BI)V com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02039 a=com.mpatric.mp3agic.ID3v2Frame.unpackDataLength([BI)V b=com.mpatric.mp3agic.ID3v2Frame.getData()[B com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData
02040 a=com.mpatric.mp3agic.ID3v2Frame.unpackDataLength([BI)V b=com.mpatric.mp3agic.ID3v2Frame.getId()Ljava/lang/String; com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame
02041 a=com.mpatric.mp3agic.ID3v2Frame.unpackDataLength([BI)V b=com.mpatric.mp3agic.ID3v2Frame.getLength()I com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating
02042 a=com.mpatric.mp3agic.ID3v2Frame.unpackDataLength([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasCompression()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02043 a=com.mpatric.mp3agic.ID3v2Frame.unpackDataLength([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasDataLengthIndicator()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02044 a=com.mpatric.mp3agic.ID3v2Frame.unpackDataLength([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasEncryption()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02045 a=com.mpatric.mp3agic.ID3v2Frame.unpackDataLength([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasGroup()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02046 a=com.mpatric.mp3agic.ID3v2Frame.unpackDataLength([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasPreserveFile()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02047 a=com.mpatric.mp3agic.ID3v2Frame.unpackDataLength([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasPreserveTag()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02048 a=com.mpatric.mp3agic.ID3v2Frame.unpackDataLength([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02049 a=com.mpatric.mp3agic.ID3v2Frame.unpackDataLength([BI)V b=com.mpatric.mp3agic.ID3v2Frame.isReadOnly()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02050 a=com.mpatric.mp3agic.ID3v2Frame.unpackDataLength([BI)V b=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02051 a=com.mpatric.mp3agic.ID3v2Frame.unpackDataLength([BI)V b=com.mpatric.mp3agic.ID3v2Frame.setData([B)V com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData
02052 a=com.mpatric.mp3agic.ID3v2Frame.unpackDataLength([BI)V b=com.mpatric.mp3agic.ID3v2Frame.unpackFlags([BI)V com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3WithObselete32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02053 a=com.mpatric.mp3agic.ID3v2Frame.unpackFlags([BI)V b=com.mpatric.mp3agic.ID3v2Frame.getData()[B com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData
02054 a=com.mpatric.mp3agic.ID3v2Frame.unpackFlags([BI)V b=com.mpatric.mp3agic.ID3v2Frame.getId()Ljava/lang/String; com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame
02055 a=com.mpatric.mp3agic.ID3v2Frame.unpackFlags([BI)V b=com.mpatric.mp3agic.ID3v2Frame.getLength()I com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating
02056 a=com.mpatric.mp3agic.ID3v2Frame.unpackFlags([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasCompression()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02057 a=com.mpatric.mp3agic.ID3v2Frame.unpackFlags([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasDataLengthIndicator()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02058 a=com.mpatric.mp3agic.ID3v2Frame.unpackFlags([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasEncryption()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02059 a=com.mpatric.mp3agic.ID3v2Frame.unpackFlags([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasGroup()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02060 a=com.mpatric.mp3agic.ID3v2Frame.unpackFlags([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasPreserveFile()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02061 a=com.mpatric.mp3agic.ID3v2Frame.unpackFlags([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasPreserveTag()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02062 a=com.mpatric.mp3agic.ID3v2Frame.unpackFlags([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02063 a=com.mpatric.mp3agic.ID3v2Frame.unpackFlags([BI)V b=com.mpatric.mp3agic.ID3v2Frame.isReadOnly()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02064 a=com.mpatric.mp3agic.ID3v2Frame.unpackFlags([BI)V b=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02065 a=com.mpatric.mp3agic.ID3v2Frame.unpackFlags([BI)V b=com.mpatric.mp3agic.ID3v2Frame.setData([B)V com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData
02066 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2Frame.getData()[B com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData
02067 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2Frame.getId()Ljava/lang/String; com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame
02068 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2Frame.getLength()I com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating
02069 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasCompression()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02070 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasDataLengthIndicator()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02071 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasEncryption()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02072 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasGroup()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02073 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasPreserveFile()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02074 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasPreserveTag()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02075 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2Frame.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02076 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2Frame.isReadOnly()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02077 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ObseleteFrameTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3WithObselete32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02078 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2Frame.setData([B)V com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData
02079 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2Frame.unpackDataLength([BI)V com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02080 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2Frame.unpackFlags([BI)V com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02081 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ObseleteFrameTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3WithObselete32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02082 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2ObseleteFrame.getData()[B com.mpatric.mp3agic.ID3v2ObseleteFrameTest,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame
02083 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2ObseleteFrame.getId()Ljava/lang/String; com.mpatric.mp3agic.ID3v2ObseleteFrameTest,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame
02084 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2ObseleteFrame.getLength()I com.mpatric.mp3agic.ID3v2ObseleteFrameTest,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame
02085 a=com.mpatric.mp3agic.ID3v2Frame.unpackFrame([BI)V b=com.mpatric.mp3agic.ID3v2ObseleteFrame.unpackDataLength([BI)V com.mpatric.mp3agic.ID3v2ObseleteFrameTest,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame
02086 a=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I b=com.mpatric.mp3agic.ID3v2Frame.getData()[B com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData
02087 a=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I b=com.mpatric.mp3agic.ID3v2Frame.getId()Ljava/lang/String; com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame
02088 a=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I b=com.mpatric.mp3agic.ID3v2Frame.getLength()I com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating
02089 a=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I b=com.mpatric.mp3agic.ID3v2Frame.hasCompression()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02090 a=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I b=com.mpatric.mp3agic.ID3v2Frame.hasDataLengthIndicator()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02091 a=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I b=com.mpatric.mp3agic.ID3v2Frame.hasEncryption()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02092 a=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I b=com.mpatric.mp3agic.ID3v2Frame.hasGroup()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02093 a=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I b=com.mpatric.mp3agic.ID3v2Frame.hasPreserveFile()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02094 a=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I b=com.mpatric.mp3agic.ID3v2Frame.hasPreserveTag()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02095 a=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I b=com.mpatric.mp3agic.ID3v2Frame.hasUnsynchronisation()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02096 a=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I b=com.mpatric.mp3agic.ID3v2Frame.isReadOnly()Z com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader
02097 a=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I b=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ObseleteFrameTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3WithObselete32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02098 a=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I b=com.mpatric.mp3agic.ID3v2Frame.setData([B)V com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData
02099 a=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I b=com.mpatric.mp3agic.ID3v2Frame.unpackDataLength([BI)V com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02100 a=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I b=com.mpatric.mp3agic.ID3v2Frame.unpackFlags([BI)V com.mpatric.mp3agic.ID3v2ChapterFrameDataTest,com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest,com.mpatric.mp3agic.ID3v2FrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader,com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame,com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame,com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02101 a=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I b=com.mpatric.mp3agic.ID3v2ObseleteFrame.getData()[B com.mpatric.mp3agic.ID3v2ObseleteFrameTest,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame
02102 a=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I b=com.mpatric.mp3agic.ID3v2ObseleteFrame.getId()Ljava/lang/String; com.mpatric.mp3agic.ID3v2ObseleteFrameTest,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame
02103 a=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I b=com.mpatric.mp3agic.ID3v2ObseleteFrame.getLength()I com.mpatric.mp3agic.ID3v2ObseleteFrameTest,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame
02104 a=com.mpatric.mp3agic.ID3v2Frame.unpackHeader([BI)I b=com.mpatric.mp3agic.ID3v2ObseleteFrame.unpackDataLength([BI)V com.mpatric.mp3agic.ID3v2ObseleteFrameTest,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame
02105 a=com.mpatric.mp3agic.ID3v2FrameSet.addFrame(Lcom/mpatric/mp3agic/ID3v2Frame;)V b=com.mpatric.mp3agic.ID3v2FrameSet.getFrames()Ljava/util/List; com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3
02106 a=com.mpatric.mp3agic.ID3v2ObseleteFrame.getId()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2ObseleteFrame.getData()[B com.mpatric.mp3agic.ID3v2ObseleteFrameTest,all-tests,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame
02107 a=com.mpatric.mp3agic.ID3v2ObseleteFrame.getLength()I b=com.mpatric.mp3agic.ID3v2ObseleteFrame.getData()[B com.mpatric.mp3agic.ID3v2ObseleteFrameTest,all-tests,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame
02108 a=com.mpatric.mp3agic.ID3v2ObseleteFrame.getLength()I b=com.mpatric.mp3agic.ID3v2ObseleteFrame.getId()Ljava/lang/String; com.mpatric.mp3agic.ID3v2ObseleteFrameTest,all-tests,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame
02109 a=com.mpatric.mp3agic.ID3v2ObseleteFrame.unpackDataLength([BI)V b=com.mpatric.mp3agic.ID3v2Frame.sanityCheckUnpackedHeader()V com.mpatric.mp3agic.ID3v2ObseleteFrameTest,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame
02110 a=com.mpatric.mp3agic.ID3v2ObseleteFrame.unpackDataLength([BI)V b=com.mpatric.mp3agic.ID3v2ObseleteFrame.getData()[B com.mpatric.mp3agic.ID3v2ObseleteFrameTest,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame
02111 a=com.mpatric.mp3agic.ID3v2ObseleteFrame.unpackDataLength([BI)V b=com.mpatric.mp3agic.ID3v2ObseleteFrame.getId()Ljava/lang/String; com.mpatric.mp3agic.ID3v2ObseleteFrameTest,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame
02112 a=com.mpatric.mp3agic.ID3v2ObseleteFrame.unpackDataLength([BI)V b=com.mpatric.mp3agic.ID3v2ObseleteFrame.getLength()I com.mpatric.mp3agic.ID3v2ObseleteFrameTest,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame,com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame
02113 a=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getDescription()Lcom/mpatric/mp3agic/EncodedText; b=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getImageData()[B all-tests,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameDataWithUnicodeDescription,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameData
02114 a=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getMimeType()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getDescription()Lcom/mpatric/mp3agic/EncodedText; all-tests,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameDataWithUnicodeDescription,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameData
02115 a=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getMimeType()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getImageData()[B all-tests,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameDataWithUnicodeDescription,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameData
02116 a=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getMimeType()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getPictureType()B all-tests,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameDataWithUnicodeDescription,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameData
02117 a=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getPictureType()B b=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getDescription()Lcom/mpatric/mp3agic/EncodedText; all-tests,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameDataWithUnicodeDescription,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameData
02118 a=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getPictureType()B b=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getImageData()[B all-tests,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameDataWithUnicodeDescription,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameData
02119 a=com.mpatric.mp3agic.ID3v2PictureFrameData.getImageData()[B b=com.mpatric.mp3agic.AbstractID3v2FrameData.packAndUnsynchroniseFrameData()[B com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking
02120 a=com.mpatric.mp3agic.ID3v2PictureFrameData.getImageData()[B b=com.mpatric.mp3agic.AbstractID3v2FrameData.packFrameData()[B com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking
02121 a=com.mpatric.mp3agic.ID3v2PictureFrameData.getImageData()[B b=com.mpatric.mp3agic.ID3v2PictureFrameData.getLength()I com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking
02122 a=com.mpatric.mp3agic.ID3v2PictureFrameData.getImageData()[B b=com.mpatric.mp3agic.ID3v2PictureFrameData.toBytes()[B com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking
02123 a=com.mpatric.mp3agic.ID3v2PictureFrameData.setDescription(Lcom/mpatric/mp3agic/EncodedText;)V b=com.mpatric.mp3agic.ID3v2PictureFrameData.getDescription()Lcom/mpatric/mp3agic/EncodedText; all-tests,com.mpatric.mp3agic.ID3v2PictureFrameDataTest,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#getsAndSetsDescription
02124 a=com.mpatric.mp3agic.ID3v2PictureFrameData.setImageData([B)V b=com.mpatric.mp3agic.ID3v2PictureFrameData.getImageData()[B com.mpatric.mp3agic.ID3v2PictureFrameDataTest#getsAndSetsImageData
02125 a=com.mpatric.mp3agic.ID3v2PictureFrameData.setMimeType(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2PictureFrameData.getMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2PictureFrameDataTest,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#getsAndSetsMimeType
02126 a=com.mpatric.mp3agic.ID3v2PictureFrameData.setPictureType(B)V b=com.mpatric.mp3agic.ID3v2PictureFrameData.getPictureType()B all-tests,com.mpatric.mp3agic.ID3v2PictureFrameDataTest,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#getsAndSetsPictureType
02127 a=com.mpatric.mp3agic.ID3v2PictureFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.AbstractID3v2FrameData.packAndUnsynchroniseFrameData()[B com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking
02128 a=com.mpatric.mp3agic.ID3v2PictureFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.AbstractID3v2FrameData.packFrameData()[B com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking
02129 a=com.mpatric.mp3agic.ID3v2PictureFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest,com.mpatric.mp3agic.ID3v2PictureFrameDataTest,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameDataWithUnicodeDescription,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameData,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldConvertFrameDataWithUnicodeDescriptionToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
02130 a=com.mpatric.mp3agic.ID3v2PictureFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getDescription()Lcom/mpatric/mp3agic/EncodedText; com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameDataWithUnicodeDescription,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameData
02131 a=com.mpatric.mp3agic.ID3v2PictureFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getImageData()[B com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameDataWithUnicodeDescription,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameData
02132 a=com.mpatric.mp3agic.ID3v2PictureFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getMimeType()Ljava/lang/String; com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameDataWithUnicodeDescription,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameData
02133 a=com.mpatric.mp3agic.ID3v2PictureFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2ObseletePictureFrameData.getPictureType()B com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameDataWithUnicodeDescription,com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameData
02134 a=com.mpatric.mp3agic.ID3v2PictureFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2PictureFrameData.getImageData()[B com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking,com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame
02135 a=com.mpatric.mp3agic.ID3v2PictureFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2PictureFrameData.getLength()I com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking
02136 a=com.mpatric.mp3agic.ID3v2PictureFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2PictureFrameData.toBytes()[B com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking
02137 a=com.mpatric.mp3agic.ID3v2PictureFrameData.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2FrameData.packAndUnsynchroniseFrameData()[B com.mpatric.mp3agic.ID3v2PictureFrameDataTest,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldConvertFrameDataWithUnicodeDescriptionToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking
02138 a=com.mpatric.mp3agic.ID3v2PictureFrameData.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2FrameData.packFrameData()[B com.mpatric.mp3agic.ID3v2PictureFrameDataTest,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldConvertFrameDataWithUnicodeDescriptionToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking
02139 a=com.mpatric.mp3agic.ID3v2PictureFrameData.toBytes()[B b=com.mpatric.mp3agic.ID3v2PictureFrameData.getLength()I all-tests,com.mpatric.mp3agic.ID3v2PictureFrameDataTest,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldConvertFrameDataWithUnicodeDescriptionToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
02140 a=com.mpatric.mp3agic.ID3v2PopmFrameData.getAddress()Ljava/lang/String; b=com.mpatric.mp3agic.ID3v2PopmFrameData.getRating()I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
02141 a=com.mpatric.mp3agic.ID3v2PopmFrameData.setAddress(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2PopmFrameData.getAddress()Ljava/lang/String; com.mpatric.mp3agic.ID3v2PopmFrameDataTest#canSetAndGetAddress
02142 a=com.mpatric.mp3agic.ID3v2PopmFrameData.setAddress(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2PopmFrameData.getLength()I com.mpatric.mp3agic.ID3v2PopmFrameDataTest#canGetLength
02143 a=com.mpatric.mp3agic.ID3v2PopmFrameData.setRating(I)V b=com.mpatric.mp3agic.ID3v2PopmFrameData.getRating()I com.mpatric.mp3agic.ID3v2PopmFrameDataTest#canSetAndGetRating
02144 a=com.mpatric.mp3agic.ID3v2PopmFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V com.mpatric.mp3agic.ID3v2PopmFrameDataTest,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#canSetAndGetAddress,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#canSetAndGetRating,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn2StarRating,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn1StarRating,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn3StarRating,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn4StarRating,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturnAddress,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn5StarRating,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturnMinus1ForInvalidRating,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
02145 a=com.mpatric.mp3agic.ID3v2PopmFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2PopmFrameData.getAddress()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#canSetAndGetAddress,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturnAddress,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
02146 a=com.mpatric.mp3agic.ID3v2PopmFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2PopmFrameData.getRating()I com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#canSetAndGetRating,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn2StarRating,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn1StarRating,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn3StarRating,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn4StarRating,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn5StarRating,com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturnMinus1ForInvalidRating,com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating
02147 a=com.mpatric.mp3agic.ID3v2PopmFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2PopmFrameData.setAddress(Ljava/lang/String;)V com.mpatric.mp3agic.ID3v2PopmFrameDataTest#canSetAndGetAddress
02148 a=com.mpatric.mp3agic.ID3v2PopmFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2PopmFrameData.setRating(I)V com.mpatric.mp3agic.ID3v2PopmFrameDataTest#canSetAndGetRating
02149 a=com.mpatric.mp3agic.ID3v2TextFrameData.setText(Lcom/mpatric/mp3agic/EncodedText;)V b=com.mpatric.mp3agic.ID3v2TextFrameData.getText()Lcom/mpatric/mp3agic/EncodedText; com.mpatric.mp3agic.ID3v2TextFrameDataTest,com.mpatric.mp3agic.ID3v2TextFrameDataTest#getsAndSetsDescription
02150 a=com.mpatric.mp3agic.ID3v2TextFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v2TextFrameDataTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM,com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TextFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2TextFrameDataTest#shouldConvertFrameDataWithUnicodeToBytesAndBackToEquivalentObject
02151 a=com.mpatric.mp3agic.ID3v2TextFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2TextFrameData.getText()Lcom/mpatric/mp3agic/EncodedText; com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3
02152 a=com.mpatric.mp3agic.ID3v2TextFrameData.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2FrameData.packAndUnsynchroniseFrameData()[B com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v2TextFrameDataTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TextFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2TextFrameDataTest#shouldConvertFrameDataWithUnicodeToBytesAndBackToEquivalentObject
02153 a=com.mpatric.mp3agic.ID3v2TextFrameData.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2FrameData.packFrameData()[B com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v2TextFrameDataTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TextFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2TextFrameDataTest#shouldConvertFrameDataWithUnicodeToBytesAndBackToEquivalentObject
02154 a=com.mpatric.mp3agic.ID3v2TextFrameData.toBytes()[B b=com.mpatric.mp3agic.ID3v2TextFrameData.getLength()I com.mpatric.mp3agic.ID3v24TagTest,com.mpatric.mp3agic.ID3v22TagTest,com.mpatric.mp3agic.ID3v2TextFrameDataTest,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet,com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher,com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription,com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TextFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2TextFrameDataTest#shouldConvertFrameDataWithUnicodeToBytesAndBackToEquivalentObject
02155 a=com.mpatric.mp3agic.ID3v2UrlFrameData.setDescription(Lcom/mpatric/mp3agic/EncodedText;)V b=com.mpatric.mp3agic.ID3v2UrlFrameData.getDescription()Lcom/mpatric/mp3agic/EncodedText; all-tests,com.mpatric.mp3agic.ID3v2UrlFrameDataTest,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#getsAndSetsDescription
02156 a=com.mpatric.mp3agic.ID3v2UrlFrameData.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2UrlFrameData.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2UrlFrameDataTest,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#getsAndSetsUrl
02157 a=com.mpatric.mp3agic.ID3v2UrlFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.AbstractID3v2FrameData.unpackFrameData([B)V com.mpatric.mp3agic.ID3v2UrlFrameDataTest,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataWithNoDescriptionToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataWithUnicodeDescriptionToBytesAndBackToEquivalentObject
02158 a=com.mpatric.mp3agic.ID3v2UrlFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2UrlFrameData.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding
02159 a=com.mpatric.mp3agic.ID3v2UrlFrameData.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2FrameData.packAndUnsynchroniseFrameData()[B com.mpatric.mp3agic.ID3v2UrlFrameDataTest,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataWithNoDescriptionToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataWithUnicodeDescriptionToBytesAndBackToEquivalentObject
02160 a=com.mpatric.mp3agic.ID3v2UrlFrameData.toBytes()[B b=com.mpatric.mp3agic.AbstractID3v2FrameData.packFrameData()[B com.mpatric.mp3agic.ID3v2UrlFrameDataTest,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataWithNoDescriptionToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataWithUnicodeDescriptionToBytesAndBackToEquivalentObject
02161 a=com.mpatric.mp3agic.ID3v2UrlFrameData.toBytes()[B b=com.mpatric.mp3agic.ID3v2UrlFrameData.getLength()I all-tests,com.mpatric.mp3agic.ID3v2UrlFrameDataTest,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataWithNoDescriptionToBytesAndBackToEquivalentObject,com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataWithUnicodeDescriptionToBytesAndBackToEquivalentObject
02162 a=com.mpatric.mp3agic.ID3v2WWWFrameData.setUrl(Ljava/lang/String;)V b=com.mpatric.mp3agic.ID3v2WWWFrameData.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2WWWFrameDataTest,com.mpatric.mp3agic.ID3v2WWWFrameDataTest#getsAndSetsId
02163 a=com.mpatric.mp3agic.ID3v2WWWFrameData.synchroniseAndUnpackFrameData([B)V b=com.mpatric.mp3agic.ID3v2WWWFrameData.getUrl()Ljava/lang/String; com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag
02164 a=com.mpatric.mp3agic.ID3v2WWWFrameData.toBytes()[B b=com.mpatric.mp3agic.ID3v2WWWFrameData.getLength()I all-tests,com.mpatric.mp3agic.ID3v2TagTest,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag,com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite,com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag,com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter,com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre,com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag,com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre
02165 a=com.mpatric.mp3agic.InvalidDataException.getMessage()Ljava/lang/String; b=com.mpatric.mp3agic.InvalidDataException.getCause()Ljava/lang/Throwable; com.mpatric.mp3agic.InvalidDataExceptionTest,com.mpatric.mp3agic.InvalidDataExceptionTest#constructorWithMessage,com.mpatric.mp3agic.InvalidDataExceptionTest#constructorWithMessageAndCause,com.mpatric.mp3agic.InvalidDataExceptionTest#defaultConstructor
02166 a=com.mpatric.mp3agic.Mp3File.addBitrate(I)V b=com.mpatric.mp3agic.Mp3File.hasId3v1Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02167 a=com.mpatric.mp3agic.Mp3File.addBitrate(I)V b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02168 a=com.mpatric.mp3agic.Mp3File.addBitrate(I)V b=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02169 a=com.mpatric.mp3agic.Mp3File.addBitrate(I)V b=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02170 a=com.mpatric.mp3agic.Mp3File.getBitrate()I b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02171 a=com.mpatric.mp3agic.Mp3File.getBitrate()I b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02172 a=com.mpatric.mp3agic.Mp3File.getBitrate()I b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02173 a=com.mpatric.mp3agic.Mp3File.getBitrate()I b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02174 a=com.mpatric.mp3agic.Mp3File.getBitrate()I b=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02175 a=com.mpatric.mp3agic.Mp3File.getBitrate()I b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02176 a=com.mpatric.mp3agic.Mp3File.getBitrate()I b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02177 a=com.mpatric.mp3agic.Mp3File.getBitrate()I b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02178 a=com.mpatric.mp3agic.Mp3File.getBitrate()I b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02179 a=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getBitrate()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02180 a=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02181 a=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02182 a=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02183 a=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02184 a=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02185 a=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02186 a=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02187 a=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getXingBitrate()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02188 a=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02189 a=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02190 a=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02191 a=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.isCopyright()Z all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02192 a=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.isOriginal()Z all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02193 a=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getBitrate()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02194 a=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02195 a=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02196 a=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02197 a=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02198 a=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02199 a=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02200 a=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getXingBitrate()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02201 a=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02202 a=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02203 a=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02204 a=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.isCopyright()Z all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02205 a=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.isOriginal()Z all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02206 a=com.mpatric.mp3agic.Mp3File.getEndOffset()I b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02207 a=com.mpatric.mp3agic.Mp3File.getEndOffset()I b=com.mpatric.mp3agic.Mp3File.getFrameCount()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor
02208 a=com.mpatric.mp3agic.Mp3File.getEndOffset()I b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02209 a=com.mpatric.mp3agic.Mp3File.getEndOffset()I b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02210 a=com.mpatric.mp3agic.Mp3File.getEndOffset()I b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02211 a=com.mpatric.mp3agic.Mp3File.getEndOffset()I b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02212 a=com.mpatric.mp3agic.Mp3File.getFilename()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.removeCustomTag()V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor
02213 a=com.mpatric.mp3agic.Mp3File.getFilename()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.removeId3v1Tag()V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor
02214 a=com.mpatric.mp3agic.Mp3File.getFilename()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.removeId3v2Tag()V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02215 a=com.mpatric.mp3agic.Mp3File.getFilename()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.save(Ljava/lang/String;)V all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02216 a=com.mpatric.mp3agic.Mp3File.getFilename()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.saveMpegFrames(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02217 a=com.mpatric.mp3agic.Mp3File.getFrameCount()I b=com.mpatric.mp3agic.Mp3File.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02218 a=com.mpatric.mp3agic.Mp3File.getFrameCount()I b=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02219 a=com.mpatric.mp3agic.Mp3File.getFrameCount()I b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02220 a=com.mpatric.mp3agic.Mp3File.getFrameCount()I b=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02221 a=com.mpatric.mp3agic.Mp3File.getFrameCount()I b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02222 a=com.mpatric.mp3agic.Mp3File.getFrameCount()I b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02223 a=com.mpatric.mp3agic.Mp3File.getFrameCount()I b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02224 a=com.mpatric.mp3agic.Mp3File.getFrameCount()I b=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02225 a=com.mpatric.mp3agic.Mp3File.getFrameCount()I b=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02226 a=com.mpatric.mp3agic.Mp3File.getFrameCount()I b=com.mpatric.mp3agic.Mp3File.getSampleRate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02227 a=com.mpatric.mp3agic.Mp3File.getFrameCount()I b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02228 a=com.mpatric.mp3agic.Mp3File.getFrameCount()I b=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02229 a=com.mpatric.mp3agic.Mp3File.getFrameCount()I b=com.mpatric.mp3agic.Mp3File.getXingBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02230 a=com.mpatric.mp3agic.Mp3File.getFrameCount()I b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02231 a=com.mpatric.mp3agic.Mp3File.getFrameCount()I b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02232 a=com.mpatric.mp3agic.Mp3File.getFrameCount()I b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02233 a=com.mpatric.mp3agic.Mp3File.getFrameCount()I b=com.mpatric.mp3agic.Mp3File.isCopyright()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02234 a=com.mpatric.mp3agic.Mp3File.getFrameCount()I b=com.mpatric.mp3agic.Mp3File.isOriginal()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02235 a=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02236 a=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02237 a=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02238 a=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getBitrate()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02239 a=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02240 a=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02241 a=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02242 a=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02243 a=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02244 a=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02245 a=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02246 a=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getSampleRate()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02247 a=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02248 a=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getXingBitrate()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02249 a=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02250 a=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02251 a=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02252 a=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.isCopyright()Z all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02253 a=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.isOriginal()Z all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02254 a=com.mpatric.mp3agic.Mp3File.getLength()J b=com.mpatric.mp3agic.Mp3File.addBitrate(I)V com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02255 a=com.mpatric.mp3agic.Mp3File.getLength()J b=com.mpatric.mp3agic.Mp3File.hasId3v1Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02256 a=com.mpatric.mp3agic.Mp3File.getLength()J b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02257 a=com.mpatric.mp3agic.Mp3File.getLength()J b=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02258 a=com.mpatric.mp3agic.Mp3File.getLength()J b=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02259 a=com.mpatric.mp3agic.Mp3File.getLength()J b=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02260 a=com.mpatric.mp3agic.Mp3File.getLength()J b=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02261 a=com.mpatric.mp3agic.Mp3File.getLength()J b=com.mpatric.mp3agic.Mp3File.scanBlock([BIII)I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02262 a=com.mpatric.mp3agic.Mp3File.getLength()J b=com.mpatric.mp3agic.Mp3File.scanBlockForStart([BIII)I com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02263 a=com.mpatric.mp3agic.Mp3File.getLength()J b=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02264 a=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02265 a=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02266 a=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02267 a=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02268 a=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02269 a=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02270 a=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02271 a=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02272 a=com.mpatric.mp3agic.Mp3File.getSampleRate()I b=com.mpatric.mp3agic.Mp3File.getBitrate()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02273 a=com.mpatric.mp3agic.Mp3File.getSampleRate()I b=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02274 a=com.mpatric.mp3agic.Mp3File.getSampleRate()I b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02275 a=com.mpatric.mp3agic.Mp3File.getSampleRate()I b=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02276 a=com.mpatric.mp3agic.Mp3File.getSampleRate()I b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02277 a=com.mpatric.mp3agic.Mp3File.getSampleRate()I b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02278 a=com.mpatric.mp3agic.Mp3File.getSampleRate()I b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02279 a=com.mpatric.mp3agic.Mp3File.getSampleRate()I b=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02280 a=com.mpatric.mp3agic.Mp3File.getSampleRate()I b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02281 a=com.mpatric.mp3agic.Mp3File.getSampleRate()I b=com.mpatric.mp3agic.Mp3File.getXingBitrate()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02282 a=com.mpatric.mp3agic.Mp3File.getSampleRate()I b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02283 a=com.mpatric.mp3agic.Mp3File.getSampleRate()I b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02284 a=com.mpatric.mp3agic.Mp3File.getSampleRate()I b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02285 a=com.mpatric.mp3agic.Mp3File.getSampleRate()I b=com.mpatric.mp3agic.Mp3File.isCopyright()Z all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02286 a=com.mpatric.mp3agic.Mp3File.getSampleRate()I b=com.mpatric.mp3agic.Mp3File.isOriginal()Z all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02287 a=com.mpatric.mp3agic.Mp3File.getStartOffset()I b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02288 a=com.mpatric.mp3agic.Mp3File.getStartOffset()I b=com.mpatric.mp3agic.Mp3File.getEndOffset()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02289 a=com.mpatric.mp3agic.Mp3File.getStartOffset()I b=com.mpatric.mp3agic.Mp3File.getFrameCount()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor
02290 a=com.mpatric.mp3agic.Mp3File.getStartOffset()I b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02291 a=com.mpatric.mp3agic.Mp3File.getStartOffset()I b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02292 a=com.mpatric.mp3agic.Mp3File.getStartOffset()I b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02293 a=com.mpatric.mp3agic.Mp3File.getStartOffset()I b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02294 a=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getBitrate()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02295 a=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02296 a=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02297 a=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02298 a=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02299 a=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02300 a=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02301 a=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02302 a=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02303 a=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getSampleRate()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02304 a=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02305 a=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getXingBitrate()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02306 a=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02307 a=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02308 a=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02309 a=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.isCopyright()Z all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02310 a=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.Mp3File.isOriginal()Z all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02311 a=com.mpatric.mp3agic.Mp3File.getXingBitrate()I b=com.mpatric.mp3agic.Mp3File.getBitrate()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02312 a=com.mpatric.mp3agic.Mp3File.getXingBitrate()I b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02313 a=com.mpatric.mp3agic.Mp3File.getXingBitrate()I b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02314 a=com.mpatric.mp3agic.Mp3File.getXingBitrate()I b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02315 a=com.mpatric.mp3agic.Mp3File.getXingBitrate()I b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02316 a=com.mpatric.mp3agic.Mp3File.getXingBitrate()I b=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02317 a=com.mpatric.mp3agic.Mp3File.getXingBitrate()I b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02318 a=com.mpatric.mp3agic.Mp3File.getXingBitrate()I b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02319 a=com.mpatric.mp3agic.Mp3File.getXingBitrate()I b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02320 a=com.mpatric.mp3agic.Mp3File.getXingBitrate()I b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02321 a=com.mpatric.mp3agic.Mp3File.getXingOffset()I b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02322 a=com.mpatric.mp3agic.Mp3File.getXingOffset()I b=com.mpatric.mp3agic.Mp3File.getEndOffset()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02323 a=com.mpatric.mp3agic.Mp3File.getXingOffset()I b=com.mpatric.mp3agic.Mp3File.getFrameCount()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor
02324 a=com.mpatric.mp3agic.Mp3File.getXingOffset()I b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02325 a=com.mpatric.mp3agic.Mp3File.getXingOffset()I b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02326 a=com.mpatric.mp3agic.Mp3File.getXingOffset()I b=com.mpatric.mp3agic.Mp3File.getStartOffset()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02327 a=com.mpatric.mp3agic.Mp3File.getXingOffset()I b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02328 a=com.mpatric.mp3agic.Mp3File.getXingOffset()I b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02329 a=com.mpatric.mp3agic.Mp3File.hasId3v1Tag()Z b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02330 a=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z b=com.mpatric.mp3agic.Mp3File.getFrameCount()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor
02331 a=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02332 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02333 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02334 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02335 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02336 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.getFilename()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02337 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.getFrameCount()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02338 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02339 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02340 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.getSampleRate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02341 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02342 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02343 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.getXingBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02344 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02345 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor
02346 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.hasId3v1Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02347 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor
02348 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02349 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.isCopyright()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02350 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.isOriginal()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02351 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.removeCustomTag()V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor
02352 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.removeId3v1Tag()V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor
02353 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.removeId3v2Tag()V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02354 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.save(Ljava/lang/String;)V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02355 a=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z b=com.mpatric.mp3agic.Mp3File.saveMpegFrames(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02356 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.addBitrate(I)V com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02357 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02358 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02359 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02360 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02361 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02362 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.getFilename()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02363 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.getFrameCount()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02364 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02365 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02366 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02367 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.getLength()J com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02368 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02369 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.getSampleRate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02370 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02371 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02372 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.getXingBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02373 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02374 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02375 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.hasId3v1Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02376 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02377 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02378 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02379 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02380 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02381 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.isCopyright()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02382 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.isOriginal()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02383 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02384 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02385 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.save(Ljava/lang/String;)V com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02386 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.scanBlock([BIII)I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02387 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.scanBlockForStart([BIII)I com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02388 a=com.mpatric.mp3agic.Mp3File.init(IZ)V b=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02389 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02390 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02391 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02392 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02393 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02394 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getFilename()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02395 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getFrameCount()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02396 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02397 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02398 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02399 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02400 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getSampleRate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02401 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02402 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02403 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getXingBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02404 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02405 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02406 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02407 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02408 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.isCopyright()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02409 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.isOriginal()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02410 a=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.save(Ljava/lang/String;)V com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02411 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.addBitrate(I)V com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02412 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02413 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02414 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02415 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02416 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02417 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getFilename()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02418 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getFrameCount()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02419 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02420 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02421 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02422 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getLength()J com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02423 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02424 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getSampleRate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02425 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02426 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02427 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getXingBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02428 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02429 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02430 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.hasId3v1Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02431 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02432 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02433 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02434 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02435 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.isCopyright()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02436 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.isOriginal()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02437 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02438 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02439 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.save(Ljava/lang/String;)V com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02440 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.scanBlock([BIII)I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02441 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.scanBlockForStart([BIII)I com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02442 a=com.mpatric.mp3agic.Mp3File.initId3v1Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02443 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02444 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02445 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02446 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02447 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02448 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getFilename()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02449 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getFrameCount()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02450 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02451 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02452 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02453 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02454 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getSampleRate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02455 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02456 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02457 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getXingBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02458 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02459 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02460 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.hasId3v1Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02461 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02462 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02463 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02464 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.isCopyright()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02465 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.isOriginal()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02466 a=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.save(Ljava/lang/String;)V com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02467 a=com.mpatric.mp3agic.Mp3File.isCopyright()Z b=com.mpatric.mp3agic.Mp3File.getBitrate()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02468 a=com.mpatric.mp3agic.Mp3File.isCopyright()Z b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02469 a=com.mpatric.mp3agic.Mp3File.isCopyright()Z b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02470 a=com.mpatric.mp3agic.Mp3File.isCopyright()Z b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02471 a=com.mpatric.mp3agic.Mp3File.isCopyright()Z b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02472 a=com.mpatric.mp3agic.Mp3File.isCopyright()Z b=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02473 a=com.mpatric.mp3agic.Mp3File.isCopyright()Z b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02474 a=com.mpatric.mp3agic.Mp3File.isCopyright()Z b=com.mpatric.mp3agic.Mp3File.getXingBitrate()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02475 a=com.mpatric.mp3agic.Mp3File.isCopyright()Z b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02476 a=com.mpatric.mp3agic.Mp3File.isCopyright()Z b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02477 a=com.mpatric.mp3agic.Mp3File.isCopyright()Z b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02478 a=com.mpatric.mp3agic.Mp3File.isOriginal()Z b=com.mpatric.mp3agic.Mp3File.getBitrate()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02479 a=com.mpatric.mp3agic.Mp3File.isOriginal()Z b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02480 a=com.mpatric.mp3agic.Mp3File.isOriginal()Z b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02481 a=com.mpatric.mp3agic.Mp3File.isOriginal()Z b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02482 a=com.mpatric.mp3agic.Mp3File.isOriginal()Z b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02483 a=com.mpatric.mp3agic.Mp3File.isOriginal()Z b=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02484 a=com.mpatric.mp3agic.Mp3File.isOriginal()Z b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02485 a=com.mpatric.mp3agic.Mp3File.isOriginal()Z b=com.mpatric.mp3agic.Mp3File.getXingBitrate()I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02486 a=com.mpatric.mp3agic.Mp3File.isOriginal()Z b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02487 a=com.mpatric.mp3agic.Mp3File.isOriginal()Z b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02488 a=com.mpatric.mp3agic.Mp3File.isOriginal()Z b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags
02489 a=com.mpatric.mp3agic.Mp3File.isOriginal()Z b=com.mpatric.mp3agic.Mp3File.isCopyright()Z all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02490 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.addBitrate(I)V com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02491 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02492 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02493 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02494 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02495 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02496 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.getFilename()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02497 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.getFrameCount()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02498 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02499 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02500 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02501 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02502 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.getSampleRate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02503 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02504 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02505 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.getXingBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02506 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02507 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02508 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.hasId3v1Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02509 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02510 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02511 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02512 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02513 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.isCopyright()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02514 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.isOriginal()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02515 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.save(Ljava/lang/String;)V com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02516 a=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z b=com.mpatric.mp3agic.Mp3File.scanBlock([BIII)I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02517 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.addBitrate(I)V com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02518 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02519 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02520 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02521 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02522 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02523 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.getFilename()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02524 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.getFrameCount()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02525 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02526 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02527 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02528 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02529 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.getSampleRate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02530 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02531 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02532 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.getXingBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02533 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02534 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02535 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.hasId3v1Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02536 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02537 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02538 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02539 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02540 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.isCopyright()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02541 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.isOriginal()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02542 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02543 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.save(Ljava/lang/String;)V com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02544 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.scanBlock([BIII)I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02545 a=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I b=com.mpatric.mp3agic.Mp3File.scanBlockForStart([BIII)I com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02546 a=com.mpatric.mp3agic.Mp3File.removeCustomTag()V b=com.mpatric.mp3agic.Mp3File.save(Ljava/lang/String;)V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor
02547 a=com.mpatric.mp3agic.Mp3File.removeCustomTag()V b=com.mpatric.mp3agic.Mp3File.saveMpegFrames(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor
02548 a=com.mpatric.mp3agic.Mp3File.removeId3v1Tag()V b=com.mpatric.mp3agic.Mp3File.removeCustomTag()V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor
02549 a=com.mpatric.mp3agic.Mp3File.removeId3v1Tag()V b=com.mpatric.mp3agic.Mp3File.removeId3v2Tag()V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor
02550 a=com.mpatric.mp3agic.Mp3File.removeId3v1Tag()V b=com.mpatric.mp3agic.Mp3File.save(Ljava/lang/String;)V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor
02551 a=com.mpatric.mp3agic.Mp3File.removeId3v1Tag()V b=com.mpatric.mp3agic.Mp3File.saveMpegFrames(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor
02552 a=com.mpatric.mp3agic.Mp3File.removeId3v2Tag()V b=com.mpatric.mp3agic.Mp3File.removeCustomTag()V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor
02553 a=com.mpatric.mp3agic.Mp3File.removeId3v2Tag()V b=com.mpatric.mp3agic.Mp3File.save(Ljava/lang/String;)V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02554 a=com.mpatric.mp3agic.Mp3File.removeId3v2Tag()V b=com.mpatric.mp3agic.Mp3File.saveMpegFrames(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02555 a=com.mpatric.mp3agic.Mp3File.save(Ljava/lang/String;)V b=com.mpatric.mp3agic.Mp3File.saveMpegFrames(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02556 a=com.mpatric.mp3agic.Mp3File.scanBlock([BIII)I b=com.mpatric.mp3agic.Mp3File.addBitrate(I)V com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02557 a=com.mpatric.mp3agic.Mp3File.scanBlock([BIII)I b=com.mpatric.mp3agic.Mp3File.getFilename()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02558 a=com.mpatric.mp3agic.Mp3File.scanBlock([BIII)I b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02559 a=com.mpatric.mp3agic.Mp3File.scanBlock([BIII)I b=com.mpatric.mp3agic.Mp3File.hasId3v1Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02560 a=com.mpatric.mp3agic.Mp3File.scanBlock([BIII)I b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02561 a=com.mpatric.mp3agic.Mp3File.scanBlock([BIII)I b=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02562 a=com.mpatric.mp3agic.Mp3File.scanBlock([BIII)I b=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02563 a=com.mpatric.mp3agic.Mp3File.scanBlock([BIII)I b=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02564 a=com.mpatric.mp3agic.Mp3File.scanBlock([BIII)I b=com.mpatric.mp3agic.Mp3File.save(Ljava/lang/String;)V com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02565 a=com.mpatric.mp3agic.Mp3File.scanBlockForStart([BIII)I b=com.mpatric.mp3agic.Mp3File.getFilename()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02566 a=com.mpatric.mp3agic.Mp3File.scanBlockForStart([BIII)I b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02567 a=com.mpatric.mp3agic.Mp3File.scanBlockForStart([BIII)I b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02568 a=com.mpatric.mp3agic.Mp3File.scanBlockForStart([BIII)I b=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02569 a=com.mpatric.mp3agic.Mp3File.scanBlockForStart([BIII)I b=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02570 a=com.mpatric.mp3agic.Mp3File.scanBlockForStart([BIII)I b=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02571 a=com.mpatric.mp3agic.Mp3File.scanBlockForStart([BIII)I b=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02572 a=com.mpatric.mp3agic.Mp3File.scanBlockForStart([BIII)I b=com.mpatric.mp3agic.Mp3File.save(Ljava/lang/String;)V com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02573 a=com.mpatric.mp3agic.Mp3File.scanBlockForStart([BIII)I b=com.mpatric.mp3agic.Mp3File.scanBlock([BIII)I com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02574 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.addBitrate(I)V com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02575 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02576 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getChannelMode()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02577 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getCustomTag()[B com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02578 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getEmphasis()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02579 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getEndOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02580 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getFilename()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02581 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getFrameCount()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02582 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getId3v1Tag()Lcom/mpatric/mp3agic/ID3v1; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal
02583 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getId3v2Tag()Lcom/mpatric/mp3agic/ID3v2; com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02584 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getLayer()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02585 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getLengthInMilliseconds()J com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02586 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getSampleRate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02587 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getStartOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02588 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getVersion()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02589 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getXingBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02590 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.getXingOffset()I com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02591 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.hasCustomTag()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02592 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.hasId3v1Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02593 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.hasId3v2Tag()Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor
02594 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.hasXingFrame()Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02595 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.initCustomTag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02596 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.initId3v2Tag(Ljava/nio/channels/SeekableByteChannel;)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02597 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.isCopyright()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02598 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.isOriginal()Z com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02599 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.isXingFrame([BI)Z com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02600 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.preScanFile(Ljava/nio/channels/SeekableByteChannel;)I all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02601 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.save(Ljava/lang/String;)V com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02602 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.scanBlock([BIII)I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02603 a=com.mpatric.mp3agic.Mp3File.scanFile(Ljava/nio/channels/SeekableByteChannel;)V b=com.mpatric.mp3agic.Mp3File.scanBlockForStart([BIII)I com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor
02604 a=com.mpatric.mp3agic.MpegFrame.getBitrate()I b=com.mpatric.mp3agic.MpegFrame.getLengthInBytes()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02605 a=com.mpatric.mp3agic.MpegFrame.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.getEmphasis()Ljava/lang/String; all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02606 a=com.mpatric.mp3agic.MpegFrame.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.getLayer()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02607 a=com.mpatric.mp3agic.MpegFrame.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.getModeExtension()Ljava/lang/String; all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02608 a=com.mpatric.mp3agic.MpegFrame.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.getSampleRate()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02609 a=com.mpatric.mp3agic.MpegFrame.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.getVersion()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02610 a=com.mpatric.mp3agic.MpegFrame.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.isCopyright()Z all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02611 a=com.mpatric.mp3agic.MpegFrame.getChannelMode()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.isOriginal()Z all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02612 a=com.mpatric.mp3agic.MpegFrame.getEmphasis()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.getLayer()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02613 a=com.mpatric.mp3agic.MpegFrame.getEmphasis()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.getModeExtension()Ljava/lang/String; all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02614 a=com.mpatric.mp3agic.MpegFrame.getEmphasis()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.getSampleRate()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02615 a=com.mpatric.mp3agic.MpegFrame.getEmphasis()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.getVersion()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02616 a=com.mpatric.mp3agic.MpegFrame.getEmphasis()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.isCopyright()Z all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02617 a=com.mpatric.mp3agic.MpegFrame.getEmphasis()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.isOriginal()Z all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02618 a=com.mpatric.mp3agic.MpegFrame.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.getModeExtension()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02619 a=com.mpatric.mp3agic.MpegFrame.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.getSampleRate()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02620 a=com.mpatric.mp3agic.MpegFrame.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.getVersion()Ljava/lang/String; all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02621 a=com.mpatric.mp3agic.MpegFrame.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.isCopyright()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02622 a=com.mpatric.mp3agic.MpegFrame.getLayer()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.isOriginal()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02623 a=com.mpatric.mp3agic.MpegFrame.getModeExtension()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.getSampleRate()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02624 a=com.mpatric.mp3agic.MpegFrame.getModeExtension()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.getVersion()Ljava/lang/String; com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02625 a=com.mpatric.mp3agic.MpegFrame.getModeExtension()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.isCopyright()Z all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02626 a=com.mpatric.mp3agic.MpegFrame.getModeExtension()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.isOriginal()Z all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02627 a=com.mpatric.mp3agic.MpegFrame.getSampleRate()I b=com.mpatric.mp3agic.MpegFrame.getVersion()Ljava/lang/String; all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02628 a=com.mpatric.mp3agic.MpegFrame.getSampleRate()I b=com.mpatric.mp3agic.MpegFrame.isCopyright()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02629 a=com.mpatric.mp3agic.MpegFrame.getSampleRate()I b=com.mpatric.mp3agic.MpegFrame.isOriginal()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02630 a=com.mpatric.mp3agic.MpegFrame.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.isCopyright()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02631 a=com.mpatric.mp3agic.MpegFrame.getVersion()Ljava/lang/String; b=com.mpatric.mp3agic.MpegFrame.isOriginal()Z com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02632 a=com.mpatric.mp3agic.MpegFrame.isCopyright()Z b=com.mpatric.mp3agic.MpegFrame.isOriginal()Z all-tests,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02633 a=com.mpatric.mp3agic.MpegFrame.setBitRate(I)V b=com.mpatric.mp3agic.MpegFrame.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02634 a=com.mpatric.mp3agic.MpegFrame.setBitRate(I)V b=com.mpatric.mp3agic.MpegFrame.getLengthInBytes()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02635 a=com.mpatric.mp3agic.MpegFrame.setBitRate(I)V b=com.mpatric.mp3agic.MpegFrame.setChannelMode(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02636 a=com.mpatric.mp3agic.MpegFrame.setBitRate(I)V b=com.mpatric.mp3agic.MpegFrame.setCopyright(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02637 a=com.mpatric.mp3agic.MpegFrame.setBitRate(I)V b=com.mpatric.mp3agic.MpegFrame.setEmphasis(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02638 a=com.mpatric.mp3agic.MpegFrame.setBitRate(I)V b=com.mpatric.mp3agic.MpegFrame.setModeExtension(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02639 a=com.mpatric.mp3agic.MpegFrame.setBitRate(I)V b=com.mpatric.mp3agic.MpegFrame.setOriginal(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02640 a=com.mpatric.mp3agic.MpegFrame.setBitRate(I)V b=com.mpatric.mp3agic.MpegFrame.setPadding(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02641 a=com.mpatric.mp3agic.MpegFrame.setBitRate(I)V b=com.mpatric.mp3agic.MpegFrame.setPrivate(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02642 a=com.mpatric.mp3agic.MpegFrame.setBitRate(I)V b=com.mpatric.mp3agic.MpegFrame.setSampleRate(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidSampleRate
02643 a=com.mpatric.mp3agic.MpegFrame.setChannelMode(I)V b=com.mpatric.mp3agic.MpegFrame.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02644 a=com.mpatric.mp3agic.MpegFrame.setChannelMode(I)V b=com.mpatric.mp3agic.MpegFrame.getLengthInBytes()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02645 a=com.mpatric.mp3agic.MpegFrame.setChannelMode(I)V b=com.mpatric.mp3agic.MpegFrame.setCopyright(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02646 a=com.mpatric.mp3agic.MpegFrame.setChannelMode(I)V b=com.mpatric.mp3agic.MpegFrame.setEmphasis(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02647 a=com.mpatric.mp3agic.MpegFrame.setChannelMode(I)V b=com.mpatric.mp3agic.MpegFrame.setModeExtension(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02648 a=com.mpatric.mp3agic.MpegFrame.setChannelMode(I)V b=com.mpatric.mp3agic.MpegFrame.setOriginal(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02649 a=com.mpatric.mp3agic.MpegFrame.setCopyright(I)V b=com.mpatric.mp3agic.MpegFrame.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02650 a=com.mpatric.mp3agic.MpegFrame.setCopyright(I)V b=com.mpatric.mp3agic.MpegFrame.getLengthInBytes()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02651 a=com.mpatric.mp3agic.MpegFrame.setCopyright(I)V b=com.mpatric.mp3agic.MpegFrame.setEmphasis(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02652 a=com.mpatric.mp3agic.MpegFrame.setCopyright(I)V b=com.mpatric.mp3agic.MpegFrame.setOriginal(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02653 a=com.mpatric.mp3agic.MpegFrame.setEmphasis(I)V b=com.mpatric.mp3agic.MpegFrame.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02654 a=com.mpatric.mp3agic.MpegFrame.setEmphasis(I)V b=com.mpatric.mp3agic.MpegFrame.getLengthInBytes()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02655 a=com.mpatric.mp3agic.MpegFrame.setFields(J)V b=com.mpatric.mp3agic.MpegFrame.extractField(JJ)I com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidFrameSync
02656 a=com.mpatric.mp3agic.MpegFrame.setFields(J)V b=com.mpatric.mp3agic.MpegFrame.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal
02657 a=com.mpatric.mp3agic.MpegFrame.setFields(J)V b=com.mpatric.mp3agic.MpegFrame.getLengthInBytes()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02658 a=com.mpatric.mp3agic.MpegFrame.setFields(J)V b=com.mpatric.mp3agic.MpegFrame.setBitRate(I)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForFreeBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidSampleRate
02659 a=com.mpatric.mp3agic.MpegFrame.setFields(J)V b=com.mpatric.mp3agic.MpegFrame.setChannelMode(I)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02660 a=com.mpatric.mp3agic.MpegFrame.setFields(J)V b=com.mpatric.mp3agic.MpegFrame.setCopyright(I)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02661 a=com.mpatric.mp3agic.MpegFrame.setFields(J)V b=com.mpatric.mp3agic.MpegFrame.setEmphasis(I)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02662 a=com.mpatric.mp3agic.MpegFrame.setFields(J)V b=com.mpatric.mp3agic.MpegFrame.setLayer(I)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForFreeBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidMpegLayer,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidSampleRate
02663 a=com.mpatric.mp3agic.MpegFrame.setFields(J)V b=com.mpatric.mp3agic.MpegFrame.setModeExtension(I)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02664 a=com.mpatric.mp3agic.MpegFrame.setFields(J)V b=com.mpatric.mp3agic.MpegFrame.setOriginal(I)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02665 a=com.mpatric.mp3agic.MpegFrame.setFields(J)V b=com.mpatric.mp3agic.MpegFrame.setPadding(I)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02666 a=com.mpatric.mp3agic.MpegFrame.setFields(J)V b=com.mpatric.mp3agic.MpegFrame.setPrivate(I)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02667 a=com.mpatric.mp3agic.MpegFrame.setFields(J)V b=com.mpatric.mp3agic.MpegFrame.setProtection(I)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForFreeBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidSampleRate
02668 a=com.mpatric.mp3agic.MpegFrame.setFields(J)V b=com.mpatric.mp3agic.MpegFrame.setSampleRate(I)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidSampleRate
02669 a=com.mpatric.mp3agic.MpegFrame.setFields(J)V b=com.mpatric.mp3agic.MpegFrame.setVersion(I)V com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForFreeBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidMpegLayer,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidMpegVersion,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidSampleRate
02670 a=com.mpatric.mp3agic.MpegFrame.setLayer(I)V b=com.mpatric.mp3agic.MpegFrame.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02671 a=com.mpatric.mp3agic.MpegFrame.setLayer(I)V b=com.mpatric.mp3agic.MpegFrame.getLengthInBytes()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02672 a=com.mpatric.mp3agic.MpegFrame.setLayer(I)V b=com.mpatric.mp3agic.MpegFrame.setBitRate(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForFreeBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidSampleRate
02673 a=com.mpatric.mp3agic.MpegFrame.setLayer(I)V b=com.mpatric.mp3agic.MpegFrame.setChannelMode(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02674 a=com.mpatric.mp3agic.MpegFrame.setLayer(I)V b=com.mpatric.mp3agic.MpegFrame.setCopyright(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02675 a=com.mpatric.mp3agic.MpegFrame.setLayer(I)V b=com.mpatric.mp3agic.MpegFrame.setEmphasis(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02676 a=com.mpatric.mp3agic.MpegFrame.setLayer(I)V b=com.mpatric.mp3agic.MpegFrame.setModeExtension(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02677 a=com.mpatric.mp3agic.MpegFrame.setLayer(I)V b=com.mpatric.mp3agic.MpegFrame.setOriginal(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02678 a=com.mpatric.mp3agic.MpegFrame.setLayer(I)V b=com.mpatric.mp3agic.MpegFrame.setPadding(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02679 a=com.mpatric.mp3agic.MpegFrame.setLayer(I)V b=com.mpatric.mp3agic.MpegFrame.setPrivate(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02680 a=com.mpatric.mp3agic.MpegFrame.setLayer(I)V b=com.mpatric.mp3agic.MpegFrame.setProtection(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForFreeBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidSampleRate
02681 a=com.mpatric.mp3agic.MpegFrame.setLayer(I)V b=com.mpatric.mp3agic.MpegFrame.setSampleRate(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidSampleRate
02682 a=com.mpatric.mp3agic.MpegFrame.setModeExtension(I)V b=com.mpatric.mp3agic.MpegFrame.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02683 a=com.mpatric.mp3agic.MpegFrame.setModeExtension(I)V b=com.mpatric.mp3agic.MpegFrame.getLengthInBytes()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02684 a=com.mpatric.mp3agic.MpegFrame.setModeExtension(I)V b=com.mpatric.mp3agic.MpegFrame.setCopyright(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02685 a=com.mpatric.mp3agic.MpegFrame.setModeExtension(I)V b=com.mpatric.mp3agic.MpegFrame.setEmphasis(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02686 a=com.mpatric.mp3agic.MpegFrame.setModeExtension(I)V b=com.mpatric.mp3agic.MpegFrame.setOriginal(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02687 a=com.mpatric.mp3agic.MpegFrame.setOriginal(I)V b=com.mpatric.mp3agic.MpegFrame.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02688 a=com.mpatric.mp3agic.MpegFrame.setOriginal(I)V b=com.mpatric.mp3agic.MpegFrame.getLengthInBytes()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02689 a=com.mpatric.mp3agic.MpegFrame.setOriginal(I)V b=com.mpatric.mp3agic.MpegFrame.setEmphasis(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02690 a=com.mpatric.mp3agic.MpegFrame.setPadding(I)V b=com.mpatric.mp3agic.MpegFrame.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02691 a=com.mpatric.mp3agic.MpegFrame.setPadding(I)V b=com.mpatric.mp3agic.MpegFrame.getLengthInBytes()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02692 a=com.mpatric.mp3agic.MpegFrame.setPadding(I)V b=com.mpatric.mp3agic.MpegFrame.setChannelMode(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02693 a=com.mpatric.mp3agic.MpegFrame.setPadding(I)V b=com.mpatric.mp3agic.MpegFrame.setCopyright(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02694 a=com.mpatric.mp3agic.MpegFrame.setPadding(I)V b=com.mpatric.mp3agic.MpegFrame.setEmphasis(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02695 a=com.mpatric.mp3agic.MpegFrame.setPadding(I)V b=com.mpatric.mp3agic.MpegFrame.setModeExtension(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02696 a=com.mpatric.mp3agic.MpegFrame.setPadding(I)V b=com.mpatric.mp3agic.MpegFrame.setOriginal(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02697 a=com.mpatric.mp3agic.MpegFrame.setPadding(I)V b=com.mpatric.mp3agic.MpegFrame.setPrivate(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02698 a=com.mpatric.mp3agic.MpegFrame.setPrivate(I)V b=com.mpatric.mp3agic.MpegFrame.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02699 a=com.mpatric.mp3agic.MpegFrame.setPrivate(I)V b=com.mpatric.mp3agic.MpegFrame.getLengthInBytes()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02700 a=com.mpatric.mp3agic.MpegFrame.setPrivate(I)V b=com.mpatric.mp3agic.MpegFrame.setChannelMode(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02701 a=com.mpatric.mp3agic.MpegFrame.setPrivate(I)V b=com.mpatric.mp3agic.MpegFrame.setCopyright(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02702 a=com.mpatric.mp3agic.MpegFrame.setPrivate(I)V b=com.mpatric.mp3agic.MpegFrame.setEmphasis(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02703 a=com.mpatric.mp3agic.MpegFrame.setPrivate(I)V b=com.mpatric.mp3agic.MpegFrame.setModeExtension(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02704 a=com.mpatric.mp3agic.MpegFrame.setPrivate(I)V b=com.mpatric.mp3agic.MpegFrame.setOriginal(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02705 a=com.mpatric.mp3agic.MpegFrame.setProtection(I)V b=com.mpatric.mp3agic.MpegFrame.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02706 a=com.mpatric.mp3agic.MpegFrame.setProtection(I)V b=com.mpatric.mp3agic.MpegFrame.getLengthInBytes()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02707 a=com.mpatric.mp3agic.MpegFrame.setProtection(I)V b=com.mpatric.mp3agic.MpegFrame.setBitRate(I)V all-tests,com.mpatric.mp3agic.MpegFrameTest,com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForFreeBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidSampleRate
02708 a=com.mpatric.mp3agic.MpegFrame.setProtection(I)V b=com.mpatric.mp3agic.MpegFrame.setChannelMode(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02709 a=com.mpatric.mp3agic.MpegFrame.setProtection(I)V b=com.mpatric.mp3agic.MpegFrame.setCopyright(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02710 a=com.mpatric.mp3agic.MpegFrame.setProtection(I)V b=com.mpatric.mp3agic.MpegFrame.setEmphasis(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02711 a=com.mpatric.mp3agic.MpegFrame.setProtection(I)V b=com.mpatric.mp3agic.MpegFrame.setModeExtension(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02712 a=com.mpatric.mp3agic.MpegFrame.setProtection(I)V b=com.mpatric.mp3agic.MpegFrame.setOriginal(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02713 a=com.mpatric.mp3agic.MpegFrame.setProtection(I)V b=com.mpatric.mp3agic.MpegFrame.setPadding(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02714 a=com.mpatric.mp3agic.MpegFrame.setProtection(I)V b=com.mpatric.mp3agic.MpegFrame.setPrivate(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02715 a=com.mpatric.mp3agic.MpegFrame.setProtection(I)V b=com.mpatric.mp3agic.MpegFrame.setSampleRate(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidSampleRate
02716 a=com.mpatric.mp3agic.MpegFrame.setSampleRate(I)V b=com.mpatric.mp3agic.MpegFrame.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02717 a=com.mpatric.mp3agic.MpegFrame.setSampleRate(I)V b=com.mpatric.mp3agic.MpegFrame.getLengthInBytes()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02718 a=com.mpatric.mp3agic.MpegFrame.setSampleRate(I)V b=com.mpatric.mp3agic.MpegFrame.setChannelMode(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02719 a=com.mpatric.mp3agic.MpegFrame.setSampleRate(I)V b=com.mpatric.mp3agic.MpegFrame.setCopyright(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02720 a=com.mpatric.mp3agic.MpegFrame.setSampleRate(I)V b=com.mpatric.mp3agic.MpegFrame.setEmphasis(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02721 a=com.mpatric.mp3agic.MpegFrame.setSampleRate(I)V b=com.mpatric.mp3agic.MpegFrame.setModeExtension(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02722 a=com.mpatric.mp3agic.MpegFrame.setSampleRate(I)V b=com.mpatric.mp3agic.MpegFrame.setOriginal(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02723 a=com.mpatric.mp3agic.MpegFrame.setSampleRate(I)V b=com.mpatric.mp3agic.MpegFrame.setPadding(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02724 a=com.mpatric.mp3agic.MpegFrame.setSampleRate(I)V b=com.mpatric.mp3agic.MpegFrame.setPrivate(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02725 a=com.mpatric.mp3agic.MpegFrame.setVersion(I)V b=com.mpatric.mp3agic.MpegFrame.getBitrate()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor
02726 a=com.mpatric.mp3agic.MpegFrame.setVersion(I)V b=com.mpatric.mp3agic.MpegFrame.getLengthInBytes()I com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor
02727 a=com.mpatric.mp3agic.MpegFrame.setVersion(I)V b=com.mpatric.mp3agic.MpegFrame.setBitRate(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForFreeBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidSampleRate
02728 a=com.mpatric.mp3agic.MpegFrame.setVersion(I)V b=com.mpatric.mp3agic.MpegFrame.setChannelMode(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02729 a=com.mpatric.mp3agic.MpegFrame.setVersion(I)V b=com.mpatric.mp3agic.MpegFrame.setCopyright(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02730 a=com.mpatric.mp3agic.MpegFrame.setVersion(I)V b=com.mpatric.mp3agic.MpegFrame.setEmphasis(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02731 a=com.mpatric.mp3agic.MpegFrame.setVersion(I)V b=com.mpatric.mp3agic.MpegFrame.setLayer(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForFreeBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidMpegLayer,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidSampleRate
02732 a=com.mpatric.mp3agic.MpegFrame.setVersion(I)V b=com.mpatric.mp3agic.MpegFrame.setModeExtension(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02733 a=com.mpatric.mp3agic.MpegFrame.setVersion(I)V b=com.mpatric.mp3agic.MpegFrame.setOriginal(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02734 a=com.mpatric.mp3agic.MpegFrame.setVersion(I)V b=com.mpatric.mp3agic.MpegFrame.setPadding(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02735 a=com.mpatric.mp3agic.MpegFrame.setVersion(I)V b=com.mpatric.mp3agic.MpegFrame.setPrivate(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header
02736 a=com.mpatric.mp3agic.MpegFrame.setVersion(I)V b=com.mpatric.mp3agic.MpegFrame.setProtection(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForFreeBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidBitrate,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidSampleRate
02737 a=com.mpatric.mp3agic.MpegFrame.setVersion(I)V b=com.mpatric.mp3agic.MpegFrame.setSampleRate(I)V com.mpatric.mp3agic.Mp3FileTest,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile,com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames,com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag,com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile,com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor,com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header,com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header,com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidSampleRate
02738 a=com.mpatric.mp3agic.MutableInteger.increment()V b=com.mpatric.mp3agic.MutableInteger.getValue()I com.mpatric.mp3agic.MutableIntegerTest#incrementsValue
02739 a=com.mpatric.mp3agic.MutableInteger.setValue(I)V b=com.mpatric.mp3agic.MutableInteger.getValue()I com.mpatric.mp3agic.MutableIntegerTest#setsValue
02740 a=com.mpatric.mp3agic.NotSupportedException.getMessage()Ljava/lang/String; b=com.mpatric.mp3agic.NotSupportedException.getCause()Ljava/lang/Throwable; all-tests,com.mpatric.mp3agic.NotSupportedExceptionTest,com.mpatric.mp3agic.NotSupportedExceptionTest#constructorWithMessage,com.mpatric.mp3agic.NotSupportedExceptionTest#constructorWithMessageAndCause,com.mpatric.mp3agic.NotSupportedExceptionTest#defaultConstructor
02741 a=com.mpatric.mp3agic.UnsupportedTagException.getMessage()Ljava/lang/String; b=com.mpatric.mp3agic.UnsupportedTagException.getCause()Ljava/lang/Throwable; all-tests,com.mpatric.mp3agic.UnsupportedTagExceptionTest,com.mpatric.mp3agic.UnsupportedTagExceptionTest#constructorWithMessage,com.mpatric.mp3agic.UnsupportedTagExceptionTest#constructorWithMessageAndCause,com.mpatric.mp3agic.UnsupportedTagExceptionTest#defaultConstructor
