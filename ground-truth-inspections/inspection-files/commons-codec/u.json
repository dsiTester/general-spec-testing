[
    {
        "iid": 1,
        "inspection-start-time": "2022-01-10-10-54",
        "project": "commons-codec",
        "spec-id": "00001",
        "method-a": "org.apache.commons.codec.DecoderException.getMessage()Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.DecoderException.getCause()Ljava/lang/Throwable;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.Throwable",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00001.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.DecoderExceptionTest#testConstructorString",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DecoderExceptionTest.java:45",
                        "method-b-site": "DecoderExceptionTest.java:46",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Most likely replaced with empty string, while the test expected the value \"TEST\".",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.DecoderExceptionTest#testConstructorString with DecoderExceptionTest.java:45 and DecoderExceptionTest.java:46 swapped.",
        "notes": "Couldn't reach method-b because the assertion failed before we got to the point of executing method-b due to DSI's replacement value. The Throwable class (which DecoderException extends) defines method-a as a 1-line naive getter to the field variable Throwable.detailMessage (ONE_STATELESS_METHOD), and method-b as a getter with some computation (based on whether Throwable.cause is equal to itself). Since the field variables in the Throwable class that method-a and method-b use do not intersect, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-11-11",
        "inspection-time-in-minutes": 17
    },
    {
        "iid": 2,
        "inspection-start-time": "2022-01-10-11-12",
        "project": "commons-codec",
        "spec-id": "00002",
        "method-a": "org.apache.commons.codec.EncoderException.getMessage()Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.EncoderException.getCause()Ljava/lang/Throwable;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.Throwable",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00002.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.EncoderExceptionTest#testConstructorStringThrowable",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "EncoderExceptionTest.java:52",
                        "method-b-site": "EncoderExceptionTest.java:53",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Most likely replaced with empty string, while the test expected the value \"TEST\".",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.DecoderExceptionTest#testConstructorString with EncoderExceptionTest.java:52 and EncoderExceptionTest.java:53 swapped.",
        "notes": "Couldn't reach method-b because assertion failed before we got to the point of executing method-b. The Throwable class (which EncoderException extends) defines method-a as a 1-line naive getter to the field variable Throwable.detailMessage (ONE_STATELESS_METHOD), and method-b as a getter with some computation (based on whether Throwable.cause is equal to itself). Since the field variables in the Throwable class that method-a and method-b use do not intersect, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-11-19",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 3,
        "inspection-start-time": "2022-01-10-11-19",
        "project": "commons-codec",
        "spec-id": "00003",
        "method-a": "org.apache.commons.codec.StringEncoder.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.DoubleMetaphone.cleanInput(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00003.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.DoubleMetaphoneTest#testEncodeNull",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "StringEncoderAbstractTest.java:65",
                        "method-b-site": "DoubleMetaphone.java:85",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED.",
                "notes": "WEAK_ORACLE + IMPLICITLY_EXPECTED_EXCEPTION: the test catches an expected exception, but doesn't fail if the exception is not thrown. Hence, not calling the code that **should have** thrown the exception (method-a) didn't make the test fail. So, we are dealing with a weak oracle here."
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "Note that there's some DYNAMIC_DISPATCH involved; the only context in which this spec would be a no-break-pass (as it is in this test) is because the StringEncoder object (as referred to in method-a) is actually a DoubleMetaphone object.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-11-35",
        "inspection-time-in-minutes": 16
    },
    {
        "iid": 4,
        "inspection-start-time": "2022-01-10-11-35",
        "project": "commons-codec",
        "spec-id": "00004",
        "method-a": "org.apache.commons.codec.StringEncoder.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00004.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.DoubleMetaphoneTest#testEncodeNull",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "StringEncoderAbstractTest.java:65",
                        "method-b-site": "DoubleMetaphone.java:215",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED.",
                "notes": "IMPLICITLY_EXPECTED_EXCEPTION: the test catches an expected exception, but doesn't fail if the exception is not thrown. Hence, not calling the code that **should have** thrown the exception (method-a) didn't make the test fail. So, we are dealing with a weak oracle here."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "Note that there's some DYNAMIC_DISPATCH involved; the only context in which this spec would be a no-break-pass (as it is in this test) is because the StringEncoder object (as referred to in method-a) is actually a DoubleMetaphone object.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-11-38",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 5,
        "inspection-start-time": "2022-01-10-11-38",
        "project": "commons-codec",
        "spec-id": "00005",
        "method-a": "org.apache.commons.codec.StringEncoder.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(Ljava/lang/String;Z)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00005.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.DoubleMetaphoneTest#testEncodeNull",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "StringEncoderAbstractTest.java:65",
                        "method-b-site": "DoubleMetaphone.java:74",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED.",
                "notes": "IMPLICITLY_EXPECTED_EXCEPTION: the test catches an expected exception, but doesn't fail if the exception is not thrown. Hence, not calling the code that **should have** thrown the exception (method-a) didn't make the test fail. So, we are dealing with a weak oracle here."
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "Note that there's some DYNAMIC_DISPATCH involved; the only context in which this spec would be a no-break-pass (as it is in this test) is because the StringEncoder object (as referred to in method-a) is actually a DoubleMetaphone object.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-11-41",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 6,
        "inspection-start-time": "2022-01-10-11-58",
        "project": "commons-codec",
        "spec-id": "00006",
        "method-a": "org.apache.commons.codec.StringEncoder.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.Metaphone.metaphone(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00006.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.MetaphoneTest#testEncodeNull",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "StringEncoderAbstractTest.java:65",
                        "method-b-site": "Metaphone.java:401",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED.",
                "notes": "IMPLICITLY_EXPECTED_EXCEPTION: the test catches an expected exception, but doesn't fail if the exception is not thrown. Hence, not calling the code that **should have** thrown the exception (method-a) didn't make the test fail. So, we are dealing with a weak oracle here."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "Note that there's some DYNAMIC_DISPATCH involved; the only context in which this spec would be a no-break-pass (as it is in this test) is because the StringEncoder object (as referred to in method-a) is actually a Metaphone object.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-12-04",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 7,
        "inspection-start-time": "2022-01-10-12-05",
        "project": "commons-codec",
        "spec-id": "00007",
        "method-a": "org.apache.commons.codec.StringEncoder.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.Nysiis.nysiis(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00007.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.NysiisTest#testEncodeNull",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "StringEncoderAbstractTest.java:65",
                        "method-b-site": "Nysiis.java:229",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED.",
                "notes": "IMPLICITLY_EXPECTED_EXCEPTION: the test catches an expected exception, but doesn't fail if the exception is not thrown. Hence, not calling the code that **should have** thrown the exception (method-a) didn't make the test fail. So, we are dealing with a weak oracle here."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "Note that there's some DYNAMIC_DISPATCH involved; the only context in which this spec would be a no-break-pass (as it is in this test) is because the StringEncoder object (as referred to in method-a) is actually a Nysiis object (StringEncoder has many subclasses within commons-codec).",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-12-10",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 8,
        "inspection-start-time": "2022-01-10-12-10",
        "project": "commons-codec",
        "spec-id": "00008",
        "method-a": "org.apache.commons.codec.StringEncoder.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.RefinedSoundex.soundex(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00008.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.RefinedSoundexTest#testEncodeNull",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "StringEncoderAbstractTest.java:65",
                        "method-b-site": "RefinedSoundex.java:161",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED.",
                "notes": "IMPLICITLY_EXPECTED_EXCEPTION: the test catches an expected exception, but doesn't fail if the exception is not thrown. Hence, not calling the code that **should have** thrown the exception (method-a) didn't make the test fail. So, we are dealing with a weak oracle here."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "Note that there's some DYNAMIC_DISPATCH involved; the only context in which this spec would be a no-break-pass (as it is in this test) is because the StringEncoder object (as referred to in method-a) is actually a RefinedSoundex object.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-12-14",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 9,
        "inspection-start-time": "2022-01-10-12-15",
        "project": "commons-codec",
        "spec-id": "00009",
        "method-a": "org.apache.commons.codec.StringEncoder.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.Soundex.soundex(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00009.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.SoundexTest#testEncodeNull",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "StringEncoderAbstractTest.java:65",
                        "method-b-site": "Soundex.java:250",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED.",
                "notes": "IMPLICITLY_EXPECTED_EXCEPTION: the test catches an expected exception, but doesn't fail if the exception is not thrown. Hence, not calling the code that **should have** thrown the exception (method-a) didn't make the test fail. So, we are dealing with a weak oracle here."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "Note that there's some DYNAMIC_DISPATCH involved; the only context in which this spec would be a no-break-pass (as it is in this test) is because the StringEncoder object (as referred to in method-a) is actually a Soundex object.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-12-19",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 10,
        "inspection-start-time": "2022-01-10-12-44",
        "project": "commons-codec",
        "spec-id": "00011",
        "method-a": "org.apache.commons.codec.binary.Base16.decode(Ljava/lang/Object;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.decode(Ljava/lang/String;)[B",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00011.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testStringToByteVariations",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:463",
                        "method-b-site": "BaseNCodec.java:461",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Replaced return value of method-a (Object) with null, which caused the resulting comparison between String objects to fail.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-12-51",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 11,
        "inspection-start-time": "2022-01-10-12-51",
        "project": "commons-codec",
        "spec-id": "00012",
        "method-a": "org.apache.commons.codec.binary.Base16.decode(Ljava/lang/Object;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.decode([B)[B",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00012.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testObjectDecodeWithValidParameter",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:244",
                        "method-b-site": "BaseNCodec.java:458",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Base16Test.java:246.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-12-55",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 12,
        "inspection-start-time": "2022-01-10-12-58",
        "project": "commons-codec",
        "spec-id": "00013",
        "method-a": "org.apache.commons.codec.binary.Base16.decode([B)[B",
        "method-b": "org.apache.commons.codec.binary.Base16.decodeOctet(B)I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00013.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testNonBase16Test",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:217",
                        "method-b-site": "Base16.java:166",
                        "invocation-count": 7
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED.",
                "notes": "EXPECTED_EXCEPTION_NOT_THROWN."
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-13-10",
        "inspection-time-in-minutes": 12
    },
    {
        "iid": 13,
        "inspection-start-time": "2022-01-10-13-10",
        "project": "commons-codec",
        "spec-id": "00014",
        "method-a": "org.apache.commons.codec.binary.Base16.decode([B)[B",
        "method-b": "org.apache.commons.codec.binary.Base16.ensureBufferSize(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00014.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testStrictDecoding",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:594",
                        "method-b-site": "Base16.java:173",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED.",
                "notes": "EXPECTED_EXCEPTION_NOT_THROWN."
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-13-19",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 14,
        "inspection-start-time": "2022-01-10-13-19",
        "project": "commons-codec",
        "spec-id": "00015",
        "method-a": "org.apache.commons.codec.binary.Base16.decode([B)[B",
        "method-b": "org.apache.commons.codec.binary.Base16.isStrictDecoding()Z",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00015.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testStrictDecoding",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:594",
                        "method-b-site": "Base16.java:263",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED.",
                "notes": "EXPECTED_EXCEPTION_NOT_THROWN."
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-13-22",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 15,
        "inspection-start-time": "2022-01-10-13-22",
        "project": "commons-codec",
        "spec-id": "00016",
        "method-a": "org.apache.commons.codec.binary.Base16.decode([B)[B",
        "method-b": "org.apache.commons.codec.binary.Base16.validateTrailingCharacter()V",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00016.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testLenientDecoding",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:604",
                        "method-b-site": "Base16.java:155",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Replacement with null caused an assertion failure.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-13-26",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 16,
        "inspection-start-time": "2022-01-10-13-35",
        "project": "commons-codec",
        "spec-id": "00017",
        "method-a": "org.apache.commons.codec.binary.Base16.decode([B)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.available(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00017.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testLenientDecoding",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:604",
                        "method-b-site": "BaseNCodec.java:715",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Replacement with null caused an assertion failure.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-13-39",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 17,
        "inspection-start-time": "2022-01-10-13-39",
        "project": "commons-codec",
        "spec-id": "00018",
        "method-a": "org.apache.commons.codec.binary.Base16.decode([B)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "void",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00018.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testNonBase16Test",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:217",
                        "method-b-site": "BaseNCodec.java:434",
                        "invocation-count": 7
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED.",
                "notes": "EXPECTED_EXCEPTION_NOT_THROWN."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-13-46",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 18,
        "inspection-start-time": "2022-01-10-13-46",
        "project": "commons-codec",
        "spec-id": "00019",
        "method-a": "org.apache.commons.codec.binary.Base16.decode([B)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize()I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00019.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testLenientDecoding",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:604",
                        "method-b-site": "BaseNCodec.java:572",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Replacement with null caused an assertion failure.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "ONE_STATELESS_METHOD - method-b returns the field variable BaseNCodec.DEFAULT_BUFFER_SIZE.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-13-53",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 19,
        "inspection-start-time": "2022-01-10-13-53",
        "project": "commons-codec",
        "spec-id": "00020",
        "method-a": "org.apache.commons.codec.binary.Base16.decode([B)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.readResults([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00020.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testLenientDecoding",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:604",
                        "method-b-site": "BaseNCodec.java:437",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Replacement with null caused an assertion failure.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-13-56",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 20,
        "inspection-start-time": "2022-01-10-13-56",
        "project": "commons-codec",
        "spec-id": "00021",
        "method-a": "org.apache.commons.codec.binary.Base16.encode(Ljava/lang/Object;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.encode([B)[B",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00021.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testObjectEncodeWithValidParameter",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:267",
                        "method-b-site": "BaseNCodec.java:535",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Base16Test.java:269.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-14-04",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 21,
        "inspection-start-time": "2022-01-10-14-05",
        "project": "commons-codec",
        "spec-id": "00022",
        "method-a": "org.apache.commons.codec.binary.Base16.encode(Ljava/lang/Object;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.encode([BII)[B",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00022.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testObjectEncodeWithValidParameter",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:267",
                        "method-b-site": "BaseNCodec.java:489",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Base16Test.java:269.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-14-08",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 22,
        "inspection-start-time": "2022-01-10-14-08",
        "project": "commons-codec",
        "spec-id": "00023",
        "method-a": "org.apache.commons.codec.binary.Base16.encode([B)[B",
        "method-b": "org.apache.commons.codec.binary.Base16.ensureBufferSize(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00023.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testKnownEncodings",
                "stage": "pre-stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:197",
                        "method-b-site": "Base16.java:232",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:199",
                        "method-b-site": "Base16.java:232",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:201",
                        "method-b-site": "Base16.java:232",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:203",
                        "method-b-site": "Base16.java:232",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:205",
                        "method-b-site": "Base16.java:232",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:206",
                        "method-b-site": "Base16.java:232",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 6,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Base16Test.java:197.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "The overall result ended up as pre-stage-0-failure because the first perturbation ended up causing a NullPointerException, preventing the other perturbations from happening in the first place.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-14-18",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 23,
        "inspection-start-time": "2022-01-10-14-18",
        "project": "commons-codec",
        "spec-id": "00024",
        "method-a": "org.apache.commons.codec.binary.Base16.encode([B)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.available(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00024.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testKnownEncodings",
                "stage": "pre-stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:197",
                        "method-b-site": "BaseNCodec.java:715",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:199",
                        "method-b-site": "BaseNCodec.java:715",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:201",
                        "method-b-site": "BaseNCodec.java:715",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:203",
                        "method-b-site": "BaseNCodec.java:715",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:205",
                        "method-b-site": "BaseNCodec.java:715",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:206",
                        "method-b-site": "BaseNCodec.java:715",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 6,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Base16Test.java:197.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "The overall result ended up as pre-stage-0-failure because the first perturbation ended up causing a NullPointerException, preventing the other perturbations from happening in the first place.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-14-23",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 24,
        "inspection-start-time": "2022-01-10-14-23",
        "project": "commons-codec",
        "spec-id": "00025",
        "method-a": "org.apache.commons.codec.binary.Base16.encode([B)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.encode([BII)[B",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 10,
        "code-snippets-file": "snippets/u/00025.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testKnownEncodings",
                "stage": "pre-stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:197",
                        "method-b-site": "BaseNCodec.java:489",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:199",
                        "method-b-site": "BaseNCodec.java:489",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:201",
                        "method-b-site": "BaseNCodec.java:489",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:203",
                        "method-b-site": "BaseNCodec.java:489",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:205",
                        "method-b-site": "BaseNCodec.java:489",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:206",
                        "method-b-site": "BaseNCodec.java:489",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 6,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Base16Test.java:197.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "The overall result ended up as pre-stage-0-failure because the first perturbation ended up causing a NullPointerException, preventing the other perturbations from happening in the first place.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-14-26",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 25,
        "inspection-start-time": "2022-01-10-14-27",
        "project": "commons-codec",
        "spec-id": "00026",
        "method-a": "org.apache.commons.codec.binary.Base16.encode([B)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize()I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00026.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testKnownEncodings",
                "stage": "pre-stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:197",
                        "method-b-site": "BaseNCodec.java:572",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:199",
                        "method-b-site": "BaseNCodec.java:572",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:201",
                        "method-b-site": "BaseNCodec.java:572",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:203",
                        "method-b-site": "BaseNCodec.java:572",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:205",
                        "method-b-site": "BaseNCodec.java:572",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:206",
                        "method-b-site": "BaseNCodec.java:572",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 6,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Base16Test.java:197.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "The overall result ended up as pre-stage-0-failure because the first perturbation ended up causing a NullPointerException, preventing the other perturbations from happening in the first place. ONE_STATELESS_METHOD: method-b is a 1-line naive getter to the field variable BaseNCodec.DEFAULT_BUFFER_SIZE.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-14-31",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 26,
        "inspection-start-time": "2022-01-10-14-31",
        "project": "commons-codec",
        "spec-id": "00027",
        "method-a": "org.apache.commons.codec.binary.Base16.encode([B)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.readResults([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00027.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testKnownEncodings",
                "stage": "pre-stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:197",
                        "method-b-site": "BaseNCodec.java:513",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:199",
                        "method-b-site": "BaseNCodec.java:513",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:201",
                        "method-b-site": "BaseNCodec.java:513",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:203",
                        "method-b-site": "BaseNCodec.java:513",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:205",
                        "method-b-site": "BaseNCodec.java:513",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "Base16Test.java:206",
                        "method-b-site": "BaseNCodec.java:513",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 6,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Base16Test.java:197.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "The overall result ended up as pre-stage-0-failure because the first perturbation ended up causing a NullPointerException, preventing the other perturbations from happening in the first place.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-14-34",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 27,
        "inspection-start-time": "2022-01-10-16-45",
        "project": "commons-codec",
        "spec-id": "00028",
        "method-a": "org.apache.commons.codec.binary.Base16.encode([BII)[B",
        "method-b": "org.apache.commons.codec.binary.Base16.ensureBufferSize(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00028.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testBase16AtBufferStart",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:92",
                        "method-b-site": "Base16.java:232",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaces the return value of method-a with the byte[] variable buffer, which is the unencoded version with endpadding - however, the assertEquals was on the encoded value.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-16-55",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 28,
        "inspection-start-time": "2022-01-10-16-55",
        "project": "commons-codec",
        "spec-id": "00029",
        "method-a": "org.apache.commons.codec.binary.Base16.encode([BII)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.available(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00029.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testBase16AtBufferStart",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:92",
                        "method-b-site": "BaseNCodec.java:715",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaces the return value of method-a with the byte[] variable buffer, which is the unencoded version with endpadding - however, the assertEquals was on the encoded value.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-16-58",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 29,
        "inspection-start-time": "2022-01-10-16-58",
        "project": "commons-codec",
        "spec-id": "00030",
        "method-a": "org.apache.commons.codec.binary.Base16.encode([BII)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "void",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00030.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#checkEncodeLengthBounds",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:486",
                        "method-b-site": "BaseNCodec.java:510",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED.",
                "notes": "EXPECTED_EXCEPTION_NOT_THROWN."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-17-06",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 30,
        "inspection-start-time": "2022-01-10-17-07",
        "project": "commons-codec",
        "spec-id": "00031",
        "method-a": "org.apache.commons.codec.binary.Base16.encode([BII)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize()I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00031.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testBase16AtBufferStart",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:92",
                        "method-b-site": "BaseNCodec.java:572",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaces the return value of method-a with the byte[] variable buffer, which is the unencoded version with endpadding - however, the assertEquals was on the encoded value.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "ONE_STATELESS_METHOD: method-b is a 1-line naive getter to the field variable BaseNCodec.DEFAULT_BUFFER_SIZE.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-17-09",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 31,
        "inspection-start-time": "2022-01-10-17-10",
        "project": "commons-codec",
        "spec-id": "00032",
        "method-a": "org.apache.commons.codec.binary.Base16.encode([BII)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.readResults([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00032.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testBase16AtBufferStart",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:92",
                        "method-b-site": "BaseNCodec.java:513",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaces the return value of method-a with the byte[] variable buffer, which is the unencoded version with endpadding - however, the assertEquals was on the encoded value.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-17-13",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 32,
        "inspection-start-time": "2022-01-10-18-24",
        "project": "commons-codec",
        "spec-id": "00036",
        "method-a": "org.apache.commons.codec.binary.Base16.ensureBufferSize(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.available(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 24,
        "code-snippets-file": "snippets/u/00036.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testBase16AtBufferStart",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16.java:232",
                        "method-b-site": "BaseNCodec.java:715",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACEMENT_VALUE_UNCLEAR: Not exactly sure what method-a got replaced with. Manual replacement with null results in a NullPointerException, and an empty byte array results in an ArrayOutOfBoundsException, both at Base16.java:239, which is before the assertion. The assertion failed because Base16.encode() (the call from the test) returned the empty string. REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "experimentation - you can call method-b before calling method-a.",
        "notes": "It seems like this test ended up on stage-0-failure because method-b was not called (this isn't a no-break-pass); that being said, I couldn't find a replacement value for which method-b would deliberately not be called. INSPECTION_TODO: come back to this one later?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-19-02",
        "inspection-time-in-minutes": 38
    },
    {
        "iid": 33,
        "inspection-start-time": "2022-01-10-20-50",
        "project": "commons-codec",
        "spec-id": "00037",
        "method-a": "org.apache.commons.codec.binary.Base16.ensureBufferSize(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize()I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 27,
        "code-snippets-file": "snippets/u/00037.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testBase16AtBufferStart",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16.java:232",
                        "method-b-site": "BaseNCodec.java:572",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Not exactly sure what method-a got replaced with - most likely not null, since that would have caused an exception to be thrown. The assertion failed because Base16.encode() (the call from the test) returned the empty string.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "ONE_STATELESS_METHOD: method-b is a 1-line naive getter to the field variable BaseNCodec.DEFAULT_BUFFER_SIZE.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-20-58",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 34,
        "inspection-start-time": "2022-01-10-20-59",
        "project": "commons-codec",
        "spec-id": "00039",
        "method-a": "org.apache.commons.codec.binary.Base16.getCodecPolicy()Lorg/apache/commons/codec/CodecPolicy;",
        "method-b": "org.apache.commons.codec.binary.Base16.decode([B)[B",
        "method-a-return-type": "org.apache.commons.codec.CodecPolicy",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00039.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testLenientDecoding",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:602",
                        "method-b-site": "Base16Test.java:604",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with null, causing the assertion to fail.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.binary.Base16Test#testLenientDecoding with Base16Test.java:602 and Base16Test.java:604 swapped.",
        "notes": "ONE_STATELESS_METHOD: method-a is a pure getter to the field variable BaseNCodec.decodingPolicy, which is not accessed/modified/affected by method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-21-05",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 35,
        "inspection-start-time": "2022-01-10-21-05",
        "project": "commons-codec",
        "spec-id": "00040",
        "method-a": "org.apache.commons.codec.binary.Base16.getCodecPolicy()Lorg/apache/commons/codec/CodecPolicy;",
        "method-b": "org.apache.commons.codec.binary.Base16.ensureBufferSize(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B",
        "method-a-return-type": "org.apache.commons.codec.CodecPolicy",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00040.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testLenientDecoding",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:602",
                        "method-b-site": "Base16.java:173",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with null, causing the assertion to fail.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.binary.Base16Test#testLenientDecoding with Base16Test.java:602 and Base16Test.java:604 swapped.",
        "notes": "ONE_STATELESS_METHOD: method-a is a pure getter to the field variable BaseNCodec.decodingPolicy, which is not accessed/modified/affected by method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-21-08",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 36,
        "inspection-start-time": "2022-01-10-21-08",
        "project": "commons-codec",
        "spec-id": "00041",
        "method-a": "org.apache.commons.codec.binary.Base16.getCodecPolicy()Lorg/apache/commons/codec/CodecPolicy;",
        "method-b": "org.apache.commons.codec.binary.Base16.isStrictDecoding()Z",
        "method-a-return-type": "org.apache.commons.codec.CodecPolicy",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00041.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testLenientDecoding",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:602",
                        "method-b-site": "Base16.java:263",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with null, causing the assertion to fail.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.binary.Base16Test#testLenientDecoding with Base16Test.java:602 and Base16Test.java:604 swapped.",
        "notes": "ONE_STATELESS_METHOD: method-a is a pure getter to the field variable BaseNCodec.decodingPolicy. method-b is a simple check on whether the field variable BaseNCodec.decodingPolicy is equal to the value CodecPolicy.STRICT.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-21-11",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 37,
        "inspection-start-time": "2022-01-10-21-12",
        "project": "commons-codec",
        "spec-id": "00042",
        "method-a": "org.apache.commons.codec.binary.Base16.getCodecPolicy()Lorg/apache/commons/codec/CodecPolicy;",
        "method-b": "org.apache.commons.codec.binary.Base16.validateTrailingCharacter()V",
        "method-a-return-type": "org.apache.commons.codec.CodecPolicy",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00042.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testLenientDecoding",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:602",
                        "method-b-site": "Base16.java:155",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with null, causing the assertion to fail.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.binary.Base16Test#testLenientDecoding with Base16Test.java:602 and Base16Test.java:604 swapped.",
        "notes": "ONE_STATELESS_METHOD: method-a is a pure getter to the field variable BaseNCodec.decodingPolicy. method-b checks whether the field variable BaseNCodec.decodingPolicy is equal to the value CodecPolicy.STRICT, and throws an exception if so.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-21-14",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 38,
        "inspection-start-time": "2022-01-10-21-14",
        "project": "commons-codec",
        "spec-id": "00043",
        "method-a": "org.apache.commons.codec.binary.Base16.getCodecPolicy()Lorg/apache/commons/codec/CodecPolicy;",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.available(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-a-return-type": "org.apache.commons.codec.CodecPolicy",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00043.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testLenientDecoding",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:602",
                        "method-b-site": "BaseNCodec.java:715",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with null, causing the assertion to fail.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.binary.Base16Test#testLenientDecoding with Base16Test.java:602 and Base16Test.java:604 swapped.",
        "notes": "ONE_STATELESS_METHOD: method-a is a pure getter to the field variable BaseNCodec.decodingPolicy. method-b is a 1-line method that returns as an int the amount of buffered data on the argument Context object using the variables Context.buffer, Context.pos, and Context.readPos. These values are not related with/do not affect the value that method-a returns, so this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-21-17",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 39,
        "inspection-start-time": "2022-01-10-21-18",
        "project": "commons-codec",
        "spec-id": "00044",
        "method-a": "org.apache.commons.codec.binary.Base16.getCodecPolicy()Lorg/apache/commons/codec/CodecPolicy;",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize()I",
        "method-a-return-type": "org.apache.commons.codec.CodecPolicy",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00044.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testLenientDecoding",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:602",
                        "method-b-site": "BaseNCodec.java:572",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with null, causing the assertion to fail.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.binary.Base16Test#testLenientDecoding with Base16Test.java:602 and Base16Test.java:604 swapped.",
        "notes": "UNRELATED_STATELESS_METHODS. Both method-a and method-b are 1-line naive getters that retrieve different values.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-21-22",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 40,
        "inspection-start-time": "2022-01-10-21-22",
        "project": "commons-codec",
        "spec-id": "00045",
        "method-a": "org.apache.commons.codec.binary.Base16.getCodecPolicy()Lorg/apache/commons/codec/CodecPolicy;",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.readResults([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-a-return-type": "org.apache.commons.codec.CodecPolicy",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00045.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testLenientDecoding",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16Test.java:602",
                        "method-b-site": "BaseNCodec.java:437",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with null, causing the assertion to fail.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.binary.Base16Test#testLenientDecoding with Base16Test.java:602 and Base16Test.java:604 swapped.",
        "notes": "ONE_STATELESS_METHOD: method-a is a pure getter to the field variable BaseNCodec.decodingPolicy, which is not accessed/modified/affected by method-b. method-b returns the command line arguments as taken from the field value CommandLine.arguments and processed.However, note that method-b can throw an exception in certain situations.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-21-24",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 41,
        "inspection-start-time": "2022-01-10-22-02",
        "project": "commons-codec",
        "spec-id": "00048",
        "method-a": "org.apache.commons.codec.binary.Base16.validateTrailingCharacter()V",
        "method-b": "org.apache.commons.codec.binary.Base16.isStrictDecoding()Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00048.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testLenientDecoding",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Base16.java:155",
                        "method-b-site": "Base16.java:263",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-22-05",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 42,
        "inspection-start-time": "2022-01-10-23-40",
        "project": "commons-codec",
        "spec-id": "00053",
        "method-a": "org.apache.commons.codec.binary.Base16InputStream.read()I",
        "method-b": "org.apache.commons.codec.binary.BaseNCodecInputStream.read([BII)I",
        "method-a-return-type": "int",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00053.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16InputStreamTest#testSkipNone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16InputStreamTest.java:390",
                        "method-b-site": "BaseNCodecInputStream.java:113",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Expected output was -1, but the default replacement value was 0.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-10-23-43",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 43,
        "inspection-start-time": "2022-01-11-00-00",
        "project": "commons-codec",
        "spec-id": "00055",
        "method-a": "org.apache.commons.codec.binary.Base16InputStream.read([BII)I",
        "method-b": "org.apache.commons.codec.binary.Base16InputStream.read()I",
        "method-a-return-type": "int",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00055.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16InputStreamTest#testSkipNone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16InputStreamTest.java:387",
                        "method-b-site": "Base16InputStreamTest.java:390",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED. Maybe replaced with 0?",
                "notes": "Assertion failed because method-a was not called before the assertion, and hence the variable actualBytes was simply an array of six 0s, instead of the array values that were expected. ORDER_OF_ASSERTIONS - move Base16InputStreamTest.java:389 to after Base16InputStreamTest.java:390 to prevent experiment failing in stage-0."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet shows that method-b calls method-a, so there's no real pre/postcondition relationship here",
        "notes": "While one needs to be conscious about the ordering of reads and the amount of data that is being read by calls to method-a and method-b, there is no ordering relationship between the two methods (besides that method-b calls method-a -->). NOTE: method-b \"calls\" method-a, but the miner didn't catch that because of DYNAMIC_DISPATCH - REVERSE_NBP. The method-a of this spec is in the Base16InputStreamTest class, but Base16InputStreamTest extends BaseNCodecInputStream and does not define method-a itself.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-00-09",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 44,
        "inspection-start-time": "2022-01-11-00-09",
        "project": "commons-codec",
        "spec-id": "00056",
        "method-a": "org.apache.commons.codec.binary.Base16InputStream.read([BII)I",
        "method-b": "org.apache.commons.codec.binary.BaseNCodecInputStream.read([BII)I",
        "method-a-return-type": "int",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00056.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16InputStreamTest#testSkipNone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base16InputStreamTest.java:387",
                        "method-b-site": "BaseNCodecInputStream.java:113",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED. Maybe replaced with 0?",
                "notes": "Assertion failed because method-a was not called before the assertion, and hence the variable actualBytes was simply an array of six 0s, instead of the array values that were expected. ORDER_OF_ASSERTIONS - moving Base16InputStreamTest.java:388 past Base16InputStreamTest.java:389 may prevent the DSI experiment from resulting in a stage-0-failure"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet shows that the two methods are the same",
        "notes": "DYNAMIC_DISPATCH_SAME_METHOD. Base16InputStream does not override/define BaseNCodecInputStream.read() (method-b), so method-a is effectively equal to method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-00-15",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 45,
        "inspection-start-time": "2022-01-11-00-16",
        "project": "commons-codec",
        "spec-id": "00057",
        "method-a": "org.apache.commons.codec.binary.Base16InputStream.skip(J)J",
        "method-b": "org.apache.commons.codec.binary.Base16InputStream.close()V",
        "method-a-return-type": "long",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/u/00057.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16InputStreamTest#testSkipNone",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "ASM_ERROR."
            }
        ],
        "verdict": "unknown",
        "spec-type": "NA",
        "validating-test-file": "?",
        "notes": "ASM error makes it difficult to know what DSI's verdict on this spec would have been. While the methods in the spec suggest that method-a ought to be only called before method-b is called, manual experimentation showed that calling method-b before method-a (on not just org.apache.commons.codec.binary.Base16InputStreamTest#testSkipNone but also org.apache.commons.codec.binary.Base16InputStreamTest#testSkipBig) had no bearing on the outcome of calling method-a. POTENTIAL_BIGGER_SPEC with 00169: (00057-method-a | 00169-method-a) method-b",
        "part-of-bigger-spec": "yes",
        "inspection-end-time": "2022-01-11-00-26",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 46,
        "inspection-start-time": "2022-01-11-00-26",
        "project": "commons-codec",
        "spec-id": "00058",
        "method-a": "org.apache.commons.codec.binary.Base16InputStream.skip(J)J",
        "method-b": "org.apache.commons.codec.binary.Base16InputStream.read()I",
        "method-a-return-type": "long",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00058.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16InputStreamTest#testSkipNone",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "ASM_ERROR."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "(Most likely) org.apache.commons.codec.binary.Base16InputStreamTest#testSkipNone",
        "notes": "ASM error makes it difficult to know what DSI's verdict on this spec would have been. However, the DSI experiment most likely would have resulted in an invalidated because the test is checking whether calling method-a with the argument as specified in the test would be a no-op or not. That said, there is no definite ordering relationship between method-a and method-b, as one can choose to skip parts of the stream (or not) before or after reading some data from it.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-00-31",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 47,
        "inspection-start-time": "2022-01-11-00-31",
        "project": "commons-codec",
        "spec-id": "00059",
        "method-a": "org.apache.commons.codec.binary.Base16InputStream.skip(J)J",
        "method-b": "org.apache.commons.codec.binary.Base16InputStream.read([BII)I",
        "method-a-return-type": "long",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00059.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16InputStreamTest#testSkipNone",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "ASM_ERROR."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "NA",
        "validating-test-file": "(Most likely) org.apache.commons.codec.binary.Base16InputStreamTest#testSkipNone",
        "notes": "ASM error makes it difficult to know what DSI's verdict on this spec would have been. However, the DSI experiment most likely would have resulted in an invalidated because the test is checking whether calling method-a with the argument as specified in the test would be a noop or not. That being said, there is no definite ordering relationship between method-a and method-b, as one can choose to skip parts of the stream (or not) before or after reading some data from it.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-00-34",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 48,
        "inspection-start-time": "2022-01-11-00-34",
        "project": "commons-codec",
        "spec-id": "00060",
        "method-a": "org.apache.commons.codec.binary.Base16InputStream.skip(J)J",
        "method-b": "org.apache.commons.codec.binary.BaseNCodecInputStream.read([BII)I",
        "method-a-return-type": "long",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00060.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16InputStreamTest#testSkipNone",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "ASM_ERROR."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "NA",
        "validating-test-file": "(Most likely) org.apache.commons.codec.binary.Base16InputStreamTest#testSkipNone",
        "notes": "ASM error makes it difficult to know what DSI's verdict on this spec would have been. However, the DSI experiment most likely would have resulted in an invalidated because the test is checking whether calling method-a with the argument as specified in the test would be a noop or not. That being said, there is no definite ordering relationship between method-a and method-b, as one can choose to skip parts of the stream (or not) before or after reading some data from it. Note that this method-b is equivalent to 00059's method-b, but the difference is 1) the call site and 2) dynamic dispatch as a result of the call site difference.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-00-37",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 49,
        "inspection-start-time": "2022-01-11-12-36",
        "project": "commons-codec",
        "spec-id": "00061",
        "method-a": "org.apache.commons.codec.binary.Base16OutputStream.close()V",
        "method-b": "org.apache.commons.codec.binary.BaseNCodecOutputStream.eof()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00061.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16OutputStreamTest#testWriteToNullCoverage",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Base16OutputStreamTest.java:283",
                        "method-b-site": "BaseNCodecOutputStream.java:77",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "EXPECTED_EXCEPTION, but not related to spec."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-12-41",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 50,
        "inspection-start-time": "2022-01-11-12-41",
        "project": "commons-codec",
        "spec-id": "00062",
        "method-a": "org.apache.commons.codec.binary.Base16OutputStream.close()V",
        "method-b": "org.apache.commons.codec.binary.BaseNCodecOutputStream.flush()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00062.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16OutputStreamTest#testWriteToNullCoverage",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Base16OutputStreamTest.java:283",
                        "method-b-site": "BaseNCodecOutputStream.java:78",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "EXPECTED_EXCEPTION, but not related to spec."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-12-44",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 51,
        "inspection-start-time": "2022-01-11-12-44",
        "project": "commons-codec",
        "spec-id": "00063",
        "method-a": "org.apache.commons.codec.binary.Base16OutputStream.close()V",
        "method-b": "org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(Z)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00063.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16OutputStreamTest#testWriteToNullCoverage",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Base16OutputStreamTest.java:283",
                        "method-b-site": "BaseNCodecOutputStream.java:106",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "EXPECTED_EXCEPTION, but not related to spec."
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-12-47",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 52,
        "inspection-start-time": "2022-01-11-13-42",
        "project": "commons-codec",
        "spec-id": "00069",
        "method-a": "org.apache.commons.codec.binary.Base32.containsAlphabetOrPad([B)Z",
        "method-b": "org.apache.commons.codec.binary.Base32.getEncodedLength([B)J",
        "method-a-return-type": "boolean",
        "method-b-return-type": "long",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00069.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32Test#testRandomBytesChunked",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "ASM_ERROR."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "?",
        "notes": "ASM error makes it difficult to figure out the calling context of the two methods, but manual inspection of their definitions show that the methods are UNRELATED_STATELESS_METHODS (neither of them change the state).",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-13-48",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 53,
        "inspection-start-time": "2022-01-11-14-48",
        "project": "commons-codec",
        "spec-id": "00076",
        "method-a": "org.apache.commons.codec.binary.Base32.ensureBufferSize(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.available(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00076.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32InputStreamTest#testBase32EmptyInputStreamMimeChuckSize",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Base32.java:495",
                        "method-b-site": "BaseNCodec.java:715",
                        "invocation-count": 22
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with null (no test failure even if manually replaced with null.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "",
        "notes": "method-b is not called when method-a is delayed because the call to method-b is guarded by a conditional that would return false if method-a is not called. Additionally, method-b contains a conditional expression based on context.buffer - which value is set by method-a in this execution. This seems like a CONNECTION_DOES_NOT_NECESSITATE_ORDERING case, given that method-b can be called before method-a due to its nullness check (it avoids any NullPointerExceptions on its own).",
        "findings": "a stage-0-failure case where the test passes, but it's not because of an expected exception. The reason why the DSI experiment results in a stage-0-failure is because method-b is guarded by a conditional that is dependent on the state changes made by method-a. REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B. GOOD_EXAMPLE",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-11-15-04",
        "inspection-time-in-minutes": 16
    },
    {
        "iid": 54,
        "inspection-start-time": "2022-01-11-15-04",
        "project": "commons-codec",
        "spec-id": "00077",
        "method-a": "org.apache.commons.codec.binary.Base32.ensureBufferSize(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize()I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00077.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32InputStreamTest#testBase32EmptyInputStreamMimeChuckSize",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Base32.java:495",
                        "method-b-site": "BaseNCodec.java:572",
                        "invocation-count": 22
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with null (no test failure even if manually replaced with null.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-15-08",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 55,
        "inspection-start-time": "2022-01-11-15-34",
        "project": "commons-codec",
        "spec-id": "00079",
        "method-a": "org.apache.commons.codec.binary.Base32.isInAlphabet(B)Z",
        "method-b": "org.apache.commons.codec.binary.Base32.getEncodedLength([B)J",
        "method-a-return-type": "boolean",
        "method-b-return-type": "long",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00079.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32Test#testRandomBytesChunked",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "ASM_ERROR."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "?",
        "notes": "ASM error makes it difficult to track the call sites, but this spec is an UNRELATED_STATELESS_METHODS case because while method-a and method-b both do some computation, neither of them change state, and the values that they deal with are unrelated.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-15-44",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 56,
        "inspection-start-time": "2022-01-11-20-20",
        "project": "commons-codec",
        "spec-id": "00089",
        "method-a": "org.apache.commons.codec.binary.Base32.validateCharacter(JLorg/apache/commons/codec/binary/BaseNCodec$Context;)V",
        "method-b": "org.apache.commons.codec.binary.Base32.isStrictDecoding()Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 12,
        "code-snippets-file": "snippets/u/00089.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32InputStreamTest#testAvailable",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Base32.java:437",
                        "method-b-site": "Base32.java:604",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-20-27",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 57,
        "inspection-start-time": "2022-01-11-20-48",
        "project": "commons-codec",
        "spec-id": "00093",
        "method-a": "org.apache.commons.codec.binary.Base32InputStream.read()I",
        "method-b": "org.apache.commons.codec.binary.BaseNCodecInputStream.read([BII)I",
        "method-a-return-type": "int",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00093.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32InputStreamTest#testSkipNone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base32InputStreamTest.java:490",
                        "method-b-site": "BaseNCodecInputStream.java:113",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value of method-a was expected to be equal to -1, but DSI replaced the return value with its default value, 0.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-20-53",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 58,
        "inspection-start-time": "2022-01-11-21-05",
        "project": "commons-codec",
        "spec-id": "00095",
        "method-a": "org.apache.commons.codec.binary.Base32InputStream.read([BII)I",
        "method-b": "org.apache.commons.codec.binary.Base32InputStream.read()I",
        "method-a-return-type": "int",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00095.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32InputStreamTest#testSkipNone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Base32InputStreamTest.java:487",
                        "method-b-site": "Base32InputStreamTest.java:490",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED.",
                "notes": "The assertion failed because the state changes caused by method-a did not happen in the experiment (because method-a was not called). Hence, the array actualBytes was as declared (an array full of 0s)."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "refer to notes and snippets",
        "notes": "There's no temporal relation between the two methods, because they are simply different read methods that deal with different arguments and return different data structures. In fact, method-b calls method-a. REVERSE_NBP",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-21-17",
        "inspection-time-in-minutes": 12
    },
    {
        "iid": 59,
        "inspection-start-time": "2022-01-11-21-17",
        "project": "commons-codec",
        "spec-id": "00096",
        "method-a": "org.apache.commons.codec.binary.Base32InputStream.read([BII)I",
        "method-b": "org.apache.commons.codec.binary.BaseNCodecInputStream.read([BII)I",
        "method-a-return-type": "int",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00096.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32InputStreamTest#testSkipNone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base32InputStreamTest.java:487",
                        "method-b-site": "BaseNCodecInputStream.java:113",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "The assertion failed because the state changes caused by method-a did not happen in the experiment (because method-a was not called). Hence, the array actualBytes was as declared (an array full of 0s).",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "DYNAMIC_DISPATCH_SAME_METHOD. This is the same method called from two different contexts.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-21-24",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 60,
        "inspection-start-time": "2022-01-11-23-00",
        "project": "commons-codec",
        "spec-id": "00097",
        "method-a": "org.apache.commons.codec.binary.Base32InputStream.skip(J)J",
        "method-b": "org.apache.commons.codec.binary.Base32InputStream.close()V",
        "method-a-return-type": "long",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/u/00097.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32InputStreamTest#testAvailable",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "ASM_ERROR. (verified that all tests that mined the spec resulted in ASM error)"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00097",
        "notes": "While ASM error prevents us from knowing how the DSI experiment would have gone, the validating-test-file shows that manually calling method-b before method-a has no bearing on the outcome of the test.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-23-07",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 61,
        "inspection-start-time": "2022-01-11-23-07",
        "project": "commons-codec",
        "spec-id": "00098",
        "method-a": "org.apache.commons.codec.binary.Base32InputStream.skip(J)J",
        "method-b": "org.apache.commons.codec.binary.Base32InputStream.read()I",
        "method-a-return-type": "long",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00098.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32InputStreamTest#testSkipNone",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "ASM_ERROR."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "reasoning below and snippet",
        "notes": "Upon inspection of the methods, it seems like there is no strict temporal ordering relation between the two methods, because they depend on how the user intends to read the input stream.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-23-16",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 62,
        "inspection-start-time": "2022-01-11-23-16",
        "project": "commons-codec",
        "spec-id": "00099",
        "method-a": "org.apache.commons.codec.binary.Base32InputStream.skip(J)J",
        "method-b": "org.apache.commons.codec.binary.Base32InputStream.read([BII)I",
        "method-a-return-type": "long",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00099.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32InputStreamTest#testSkipNone",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "ASM_ERROR."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "reasoning below and snippet",
        "notes": "Upon inspection of the methods, it seems like there is no strict temporal ordering relation between the two methods, because they depend on how the user intends to read the input stream.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-23-19",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 63,
        "inspection-start-time": "2022-01-11-23-19",
        "project": "commons-codec",
        "spec-id": "00100",
        "method-a": "org.apache.commons.codec.binary.Base32InputStream.skip(J)J",
        "method-b": "org.apache.commons.codec.binary.BaseNCodecInputStream.read([BII)I",
        "method-a-return-type": "long",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00100.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32InputStreamTest#testSkipNone",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "ASM_ERROR."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "NA",
        "validating-test-file": "reasoning below and snippet",
        "notes": "Upon inspection of the methods, it seems like there is no strict temporal ordering relation between the two methods, because they depend on how the user intends to read the input stream. The method-b of this spec is equivalent to that of 00099, besides the differences in class due to DYNAMIC_DISPATCH.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-23-24",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 64,
        "inspection-start-time": "2022-01-11-23-24",
        "project": "commons-codec",
        "spec-id": "00101",
        "method-a": "org.apache.commons.codec.binary.Base32OutputStream.close()V",
        "method-b": "org.apache.commons.codec.binary.BaseNCodecOutputStream.eof()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00101.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32InputStreamTest#testCodec130",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Base32InputStreamTest.java:52",
                        "method-b-site": "BaseNCodecOutputStream.java:77",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test failed because of the absence of state changes that should occur by calling method-a."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-23-30",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 65,
        "inspection-start-time": "2022-01-11-23-31",
        "project": "commons-codec",
        "spec-id": "00102",
        "method-a": "org.apache.commons.codec.binary.Base32OutputStream.close()V",
        "method-b": "org.apache.commons.codec.binary.BaseNCodecOutputStream.flush()V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00102.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32InputStreamTest#testCodec130",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "Base32InputStreamTest.java:52",
                        "method-b-site": "BaseNCodecOutputStream.java:78",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test failed because of the absence of state changes that should occur by calling method-a."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-23-33",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 66,
        "inspection-start-time": "2022-01-11-23-33",
        "project": "commons-codec",
        "spec-id": "00103",
        "method-a": "org.apache.commons.codec.binary.Base32OutputStream.close()V",
        "method-b": "org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(Z)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00103.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32OutputStreamTest#testWriteToNullCoverage",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Base32OutputStreamTest.java:333",
                        "method-b-site": "BaseNCodecOutputStream.java:106",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "EXPECTED_EXCEPTION, but method-a happens **after** the point at which the expected exception is thrown."
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-23-39",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 67,
        "inspection-start-time": "2022-01-11-23-39",
        "project": "commons-codec",
        "spec-id": "00104",
        "method-a": "org.apache.commons.codec.binary.Base32OutputStream.isStrictDecoding()Z",
        "method-b": "org.apache.commons.codec.binary.Base32OutputStream.write([B)V",
        "method-a-return-type": "boolean",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00104.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32OutputStreamTest#testStrictDecoding",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base32OutputStreamTest.java:351",
                        "method-b-site": "Base32OutputStreamTest.java:352",
                        "invocation-count": 6
                    },
                    {
                        "method-a-site": "Base32OutputStreamTest.java:359",
                        "method-b-site": "Base32OutputStreamTest.java:361",
                        "invocation-count": 6
                    }
                ],
                "perturbation-count": 2,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced both calls of method-a with the default value false - the first call to method-a was around an assertFalse, but the second call to method-a was around an assertTrue, so the test failed there before getting to the second method-b.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.binary.Base32OutputStreamTest#testStrictDecoding with manually moving the statements that call method-a to be after those that call method-b.",
        "notes": "method-b is defined in a third-party class which Base32OutputStream transitively extends...",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-11-23-48",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 68,
        "inspection-start-time": "2022-01-12-11-01",
        "project": "commons-codec",
        "spec-id": "00114",
        "method-a": "org.apache.commons.codec.binary.Base64.containsAlphabetOrPad([B)Z",
        "method-b": "org.apache.commons.codec.binary.Base64.getEncodedLength([B)J",
        "method-a-return-type": "boolean",
        "method-b-return-type": "long",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00114.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base64Codec13Test#testStaticEncode",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "ASM_ERROR (manually checked that all tests that mined the spec had ASM error)."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "? definitions in snippet",
        "notes": "UNRELATED_STATELESS_METHODS. The snippet shows that both method-a and method-b do not change state, and deal with different values.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-11-11",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 69,
        "inspection-start-time": "2022-01-12-12-36",
        "project": "commons-codec",
        "spec-id": "00122",
        "method-a": "org.apache.commons.codec.binary.Base64.decode([B)[B",
        "method-b": "org.apache.commons.codec.binary.Base64.isStrictDecoding()Z",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00122.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBase64ImpossibleSamplesDefault",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:148",
                        "method-b-site": "Base64.java:827",
                        "invocation-count": 5
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with variable data from RFC1522Codec.decodeText()",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-12-50",
        "inspection-time-in-minutes": 14
    },
    {
        "iid": 70,
        "inspection-start-time": "2022-01-12-12-50",
        "project": "commons-codec",
        "spec-id": "00123",
        "method-a": "org.apache.commons.codec.binary.Base64.decode([B)[B",
        "method-b": "org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00123.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBase64ImpossibleSamplesDefault",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:148",
                        "method-b-site": "Base64.java:683",
                        "invocation-count": 3
                    },
                    {
                        "method-a-site": "BCodec.java:148",
                        "method-b-site": "Base64.java:688",
                        "invocation-count": 2
                    }
                ],
                "perturbation-count": 2,
                "comment-on-return-values": "Most likely replaced with variable data from RFC1522Codec.decodeText()",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-12-54",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 71,
        "inspection-start-time": "2022-01-12-12-54",
        "project": "commons-codec",
        "spec-id": "00124",
        "method-a": "org.apache.commons.codec.binary.Base64.decode([B)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.available(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00124.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBase64ImpossibleSamplesDefault",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:148",
                        "method-b-site": "BaseNCodec.java:715",
                        "invocation-count": 5
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with variable data from RFC1522Codec.decodeText()",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-12-56",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 72,
        "inspection-start-time": "2022-01-12-12-57",
        "project": "commons-codec",
        "spec-id": "00125",
        "method-a": "org.apache.commons.codec.binary.Base64.decode([B)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "void",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00125.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBase64ImpossibleSamplesStrict",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:148",
                        "method-b-site": "BaseNCodec.java:434",
                        "invocation-count": 5
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with variable data from RFC1522Codec.decodeText()",
                "notes": "EXPECTED_EXCEPTION."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-13-02",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 73,
        "inspection-start-time": "2022-01-12-13-05",
        "project": "commons-codec",
        "spec-id": "00126",
        "method-a": "org.apache.commons.codec.binary.Base64.decode([B)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize()I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00126.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBase64ImpossibleSamplesDefault",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:148",
                        "method-b-site": "BaseNCodec.java:572",
                        "invocation-count": 5
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with variable data from RFC1522Codec.decodeText()",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-13-10",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 74,
        "inspection-start-time": "2022-01-12-13-11",
        "project": "commons-codec",
        "spec-id": "00127",
        "method-a": "org.apache.commons.codec.binary.Base64.decode([B)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.readResults([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00127.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBase64ImpossibleSamplesDefault",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:148",
                        "method-b-site": "BaseNCodec.java:437",
                        "invocation-count": 5
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with variable data from RFC1522Codec.decodeText()",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-13-13",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 75,
        "inspection-start-time": "2022-01-12-13-13",
        "project": "commons-codec",
        "spec-id": "00128",
        "method-a": "org.apache.commons.codec.binary.Base64.encode([B)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.available(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00128.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base64Codec13Test#testStaticEncode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base64.java:253",
                        "method-b-site": "BaseNCodec.java:715",
                        "invocation-count": 96
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI most likely replaced the return value of method-a with the byte[] object binary from the test, which is different from the value that the return value of method-a was compared against.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-13-22",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 76,
        "inspection-start-time": "2022-01-12-13-22",
        "project": "commons-codec",
        "spec-id": "00129",
        "method-a": "org.apache.commons.codec.binary.Base64.encode([B)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.encode([BII)[B",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00129.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base64Codec13Test#testStaticEncode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base64.java:253",
                        "method-b-site": "BaseNCodec.java:489",
                        "invocation-count": 96
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI most likely replaced the return value of method-a with the byte[] object binary from the test, which is different from the value that the return value of method-a was compared against.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-13-25",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 77,
        "inspection-start-time": "2022-01-12-13-25",
        "project": "commons-codec",
        "spec-id": "00130",
        "method-a": "org.apache.commons.codec.binary.Base64.encode([B)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize()I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00130.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base64Codec13Test#testStaticEncode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base64.java:253",
                        "method-b-site": "BaseNCodec.java:572",
                        "invocation-count": 96
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI most likely replaced the return value of method-a with the byte[] object binary from the test, which is different from the value that the return value of method-a was compared against.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-13-30",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 78,
        "inspection-start-time": "2022-01-12-13-30",
        "project": "commons-codec",
        "spec-id": "00131",
        "method-a": "org.apache.commons.codec.binary.Base64.encode([B)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.readResults([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00131.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base64Codec13Test#testStaticEncode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Base64.java:253",
                        "method-b-site": "BaseNCodec.java:513",
                        "invocation-count": 96
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI most likely replaced the return value of method-a with the byte[] object binary from the test, which is different from the value that the return value of method-a was compared against.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-13-33",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 79,
        "inspection-start-time": "2022-01-12-13-33",
        "project": "commons-codec",
        "spec-id": "00132",
        "method-a": "org.apache.commons.codec.binary.Base64.getEncodedLength([B)J",
        "method-b": "org.apache.commons.codec.binary.Base64.encode([B)[B",
        "method-a-return-type": "long",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00132.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base64Codec13Test#testStaticEncode",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "ASM_ERROR (manually checked that all tests that mined the spec had ASM error)."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "? - snippet",
        "notes": "The ASM error makes it difficult to figure out the exact calling context of method-a and method-b. However, upon inspection of the two methods, it's clear that method-a does not change state, and the values that it uses do not change via an invocation to method-b. ONE_STATELESS_METHOD",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-13-46",
        "inspection-time-in-minutes": 13
    },
    {
        "iid": 80,
        "inspection-start-time": "2022-01-12-14-23",
        "project": "commons-codec",
        "spec-id": "00133",
        "method-a": "org.apache.commons.codec.binary.Base64.getEncodedLength([B)J",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.available(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-a-return-type": "long",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00133.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base64Codec13Test#testStaticEncode",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "ASM_ERROR (manually checked that all tests that mined the spec had ASM error)."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "? - snippet",
        "notes": "UNRELATED_STATELESS_METHODS - refer to snippet. The ASM error makes it difficult to figure out the exact calling context of method-a and method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-14-27",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 81,
        "inspection-start-time": "2022-01-12-14-27",
        "project": "commons-codec",
        "spec-id": "00134",
        "method-a": "org.apache.commons.codec.binary.Base64.getEncodedLength([B)J",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.encode([BII)[B",
        "method-a-return-type": "long",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00134.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base64Codec13Test#testStaticEncode",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "ASM_ERROR (manually checked that all tests that mined the spec had ASM error)."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "? - snippet",
        "notes": "The ASM error makes it difficult to figure out the exact calling context of method-a and method-b. However, upon inspection of the two methods, it's clear that method-a does not change state, and the values that it uses do not change via an invocation to method-b (because the values that method-a uses are only set in the constructor BaseNCodec). ONE_STATELESS_METHOD",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-14-30",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 82,
        "inspection-start-time": "2022-01-12-14-31",
        "project": "commons-codec",
        "spec-id": "00135",
        "method-a": "org.apache.commons.codec.binary.Base64.getEncodedLength([B)J",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize()I",
        "method-a-return-type": "long",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00135.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base64Codec13Test#testStaticEncode",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "ASM_ERROR (manually checked that all tests that mined the spec had ASM error)."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "? - snippet",
        "notes": "UNRELATED_STATELESS_METHODS - refer to snippet. The ASM error makes it difficult to figure out the exact calling context of method-a and method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-14-33",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 83,
        "inspection-start-time": "2022-01-12-14-33",
        "project": "commons-codec",
        "spec-id": "00136",
        "method-a": "org.apache.commons.codec.binary.Base64.getEncodedLength([B)J",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.readResults([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-a-return-type": "long",
        "method-b-return-type": "int",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00136.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base64Codec13Test#testStaticEncode",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "ASM_ERROR (manually checked that all tests that mined the spec had ASM error)."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "? - snippet",
        "notes": "The ASM error makes it difficult to figure out the exact calling context of method-a and method-b. However, upon inspection of the two methods, it's clear that method-a does not change state, and the values that it uses do not change via an invocation to method-b (because the values that method-a uses are only set in the constructor BaseNCodec). ONE_STATELESS_METHOD",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-14-35",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 84,
        "inspection-start-time": "2022-01-12-14-52",
        "project": "commons-codec",
        "spec-id": "00139",
        "method-a": "org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V",
        "method-b": "org.apache.commons.codec.binary.Base64.isStrictDecoding()Z",
        "method-a-return-type": "void",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 8,
        "code-snippets-file": "snippets/u/00139.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base64Codec13Test#testStaticDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "Base64.java:683",
                        "method-b-site": "Base64.java:827",
                        "invocation-count": 34
                    },
                    {
                        "method-a-site": "Base64.java:683",
                        "method-b-site": "Base64.java:827",
                        "invocation-count": 30
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void",
                "notes": "method-a doesn't change the state besides to throw an exception in certain situations. For this test execution, the exception didn't need to be thrown, so the test passed."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-14-58",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 85,
        "inspection-start-time": "2022-01-12-19-32",
        "project": "commons-codec",
        "spec-id": "00145",
        "method-a": "org.apache.commons.codec.binary.BaseNCodec.decode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V",
        "method-b": "org.apache.commons.codec.binary.Base64.validateCharacter(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00145.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBase64ImpossibleSamplesStrict",
                "stage": "pre-stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BaseNCodec.java:434",
                        "method-b-site": "Base64.java:683",
                        "invocation-count": 3
                    },
                    {
                        "method-a-site": "BaseNCodec.java:434",
                        "method-b-site": "Base64.java:688",
                        "invocation-count": 2
                    }
                ],
                "perturbation-count": 2,
                "comment-on-return-values": "method-a returns void.",
                "notes": "EXPECTED_EXCEPTION_NOT_THROWN. It seems like delaying the first call to method-a caused the expected exception to not be thrown, given that method-a was supposed to throw the exception."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "The DSI experiment resulted in a pre-stage-0-failure because the first perturbation caused the test to fail, causing the second perturbation to not happen. Note that it is bizarre that the first perturbation succeeded (got to state-3-complete), because manual inspection of the methods show that the used implementation of method-a calls method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-19-39",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 86,
        "inspection-start-time": "2022-01-12-19-49",
        "project": "commons-codec",
        "spec-id": "00147",
        "method-a": "org.apache.commons.codec.binary.BaseNCodec.encode([B)[B",
        "method-b": "org.apache.commons.codec.binary.Base32.getEncodedLength([B)J",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "long",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00147.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32Test#testRandomBytesHex",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "ASM_ERROR (manually checked that all tests that mined the spec had ASM error)."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "Because of the ASM error, we don't know how the DSI experiment would have gone. However, from manual inspection, we can observe that method-b doesn't change state, and all of the values that it deals with are only set in the BaseNCodec constructor. So, this is most likely a spurious spec. ONE_STATELESS_METHOD",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-19-57",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 87,
        "inspection-start-time": "2022-01-12-19-57",
        "project": "commons-codec",
        "spec-id": "00148",
        "method-a": "org.apache.commons.codec.binary.BaseNCodec.encode([B)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.encode([BII)[B",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00148.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testObjectEncodeWithValidParameter",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "BaseNCodec.java:535",
                        "method-b-site": "BaseNCodec.java:489",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException thrown at Base16Test.java:269.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-20-03",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 88,
        "inspection-start-time": "2022-01-12-20-03",
        "project": "commons-codec",
        "spec-id": "00149",
        "method-a": "org.apache.commons.codec.binary.BaseNCodec.encode([BII)[B",
        "method-b": "org.apache.commons.codec.binary.Base16.ensureBufferSize(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/u/00149.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testByteToStringVariations",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BaseNCodec.java:489",
                        "method-b-site": "Base16.java:232",
                        "invocation-count": 2
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The assertion was expecting the encoded version of \"Hello World\", but the original bytes for \"Hello World\" were declared in variable b1, which is most likely where DSI found the replacement value for method-a from.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "Note that this is most likely only a nbp when the object that calls method-a and method-b are of class Base16.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-20-11",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 89,
        "inspection-start-time": "2022-01-12-20-11",
        "project": "commons-codec",
        "spec-id": "00150",
        "method-a": "org.apache.commons.codec.binary.BaseNCodec.encode([BII)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.available(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 12,
        "code-snippets-file": "snippets/u/00150.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testByteToStringVariations",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BaseNCodec.java:489",
                        "method-b-site": "BaseNCodec.java:715",
                        "invocation-count": 2
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The assertion was expecting the encoded version of \"Hello World\", but the original bytes for \"Hello World\" were declared in variable b1, which is most likely where DSI found the replacement value for method-a from.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-20-15",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 90,
        "inspection-start-time": "2022-01-12-20-15",
        "project": "commons-codec",
        "spec-id": "00151",
        "method-a": "org.apache.commons.codec.binary.BaseNCodec.encode([BII)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize()I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 12,
        "code-snippets-file": "snippets/u/00151.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testByteToStringVariations",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BaseNCodec.java:489",
                        "method-b-site": "BaseNCodec.java:572",
                        "invocation-count": 2
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The assertion was expecting the encoded version of \"Hello World\", but the original bytes for \"Hello World\" were declared in variable b1, which is most likely where DSI found the replacement value for method-a from.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-20-19",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 91,
        "inspection-start-time": "2022-01-12-20-19",
        "project": "commons-codec",
        "spec-id": "00152",
        "method-a": "org.apache.commons.codec.binary.BaseNCodec.encode([BII)[B",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.readResults([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 13,
        "code-snippets-file": "snippets/u/00152.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testByteToStringVariations",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BaseNCodec.java:489",
                        "method-b-site": "BaseNCodec.java:572",
                        "invocation-count": 2
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The assertion was expecting the encoded version of \"Hello World\", but the original bytes for \"Hello World\" were declared in variable b1, which is most likely where DSI found the replacement value for method-a from.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-20-23",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 92,
        "inspection-start-time": "2022-01-12-21-49",
        "project": "commons-codec",
        "spec-id": "00153",
        "method-a": "org.apache.commons.codec.binary.BaseNCodec.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V",
        "method-b": "org.apache.commons.codec.binary.Base32.ensureBufferSize(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B",
        "method-a-return-type": "void",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00153.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32OutputStreamTest#testBase32EmptyOutputStreamMimeChunkSize",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "BaseNCodecOutputStream.java:92",
                        "method-b-site": "Base32.java:495",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "Likely that this spec is a nbp only for Base32, but not sure",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-21-58",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 93,
        "inspection-start-time": "2022-01-12-22-34",
        "project": "commons-codec",
        "spec-id": "00155",
        "method-a": "org.apache.commons.codec.binary.BaseNCodec.encode([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize()I",
        "method-a-return-type": "void",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00155.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32OutputStreamTest#testBase32EmptyOutputStreamMimeChunkSize",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "BaseNCodecOutputStream.java:92",
                        "method-b-site": "BaseNCodec.java:572",
                        "invocation-count": 22
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns null.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-12-22-41",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 94,
        "inspection-start-time": "2022-01-13-00-42",
        "project": "commons-codec",
        "spec-id": "00168",
        "method-a": "org.apache.commons.codec.binary.BaseNCodec.readResults([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-b": "org.apache.commons.codec.binary.BaseNCodec.available(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I",
        "method-a-return-type": "int",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 2,
        "test-methods-mine-count": 32,
        "code-snippets-file": "snippets/u/00168.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base16Test#testBase16",
                "stage": "pre-stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BaseNCodec.java:513",
                        "method-b-site": "BaseNCodec.java:715",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "BaseNCodec.java:437",
                        "method-b-site": "BaseNCodec.java:715",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED. The test failed because the state changes that should have occurred by calling method-a did not happen.",
                "notes": "The DSI experiment resulted in pre-stage-0-failure because delaying method-a/not calling method-a in the first perturbation caused an assertion failure, so the second perturbation could not happen."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-00-49",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 95,
        "inspection-start-time": "2022-01-13-12-25",
        "project": "commons-codec",
        "spec-id": "00173",
        "method-a": "org.apache.commons.codec.binary.BaseNCodecOutputStream.flush()V",
        "method-b": "org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(Z)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00173.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.Base32OutputStreamTest#testWriteOutOfBounds",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "BaseNCodecOutputStream.java:78",
                        "method-b-site": "BaseNCodecOutputStream.java:106",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "Test passed at stage-0-failure because method-a calls method-b, and the test was not strong enough to catch that method-a (and method-b) were never called."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-12-31",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 96,
        "inspection-start-time": "2022-01-13-12-31",
        "project": "commons-codec",
        "spec-id": "00174",
        "method-a": "org.apache.commons.codec.binary.Hex.decode(Ljava/lang/Object;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.codec.binary.Hex.decode(Ljava/nio/ByteBuffer;)[B",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00174.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.HexTest#testDecodeByteBufferObjectEmpty",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "HexTest.java:276",
                        "method-b-site": "Hex.java:459",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. While the assertion is actually an assertTrue, the assertTrue is over an Array.equals() call. Most likely DSI replaced the return value of method-a with null, which does not equal the expected value.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-12-37",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 97,
        "inspection-start-time": "2022-01-13-12-38",
        "project": "commons-codec",
        "spec-id": "00175",
        "method-a": "org.apache.commons.codec.binary.Hex.decode(Ljava/lang/Object;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.codec.binary.Hex.decode([B)[B",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00175.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.HexTest#testDecodeByteArrayObjectEmpty",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "HexTest.java:247",
                        "method-b-site": "Hex.java:456",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. While the assertion is actually an assertTrue, the assertTrue is over an Array.equals() call. Most likely DSI replaced the return value of method-a with null, which does not equal the expected value.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-12-42",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 98,
        "inspection-start-time": "2022-01-13-12-42",
        "project": "commons-codec",
        "spec-id": "00176",
        "method-a": "org.apache.commons.codec.binary.Hex.decode(Ljava/lang/Object;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.codec.binary.Hex.getCharset()Ljava/nio/charset/Charset;",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "java.nio.charset.Charset",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00176.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.HexTest#testDecodeByteArrayObjectEmpty",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "HexTest.java:247",
                        "method-b-site": "Hex.java:418",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. While the assertion is actually an assertTrue, the assertTrue is over an Array.equals() call. Most likely DSI replaced the return value of method-a with null, which does not equal the expected value.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-12-45",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 99,
        "inspection-start-time": "2022-01-13-12-45",
        "project": "commons-codec",
        "spec-id": "00177",
        "method-a": "org.apache.commons.codec.binary.Hex.decode(Ljava/nio/ByteBuffer;)[B",
        "method-b": "org.apache.commons.codec.binary.Hex.getCharset()Ljava/nio/charset/Charset;",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "java.nio.charset.Charset",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 12,
        "code-snippets-file": "snippets/u/00177.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.HexTest#testDecodeByteBufferObjectEmpty",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Hex.java:459",
                        "method-b-site": "Hex.java:436",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. While the assertion is actually an assertTrue, the assertTrue is over an Array.equals() call. Most likely DSI replaced the return value of method-a with null, which does not equal the expected value.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-12-49",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 100,
        "inspection-start-time": "2022-01-13-12-49",
        "project": "commons-codec",
        "spec-id": "00178",
        "method-a": "org.apache.commons.codec.binary.Hex.decode([B)[B",
        "method-b": "org.apache.commons.codec.binary.Hex.getCharset()Ljava/nio/charset/Charset;",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "java.nio.charset.Charset",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/u/00178.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.HexTest#testDecodeByteArrayObjectEmpty",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Hex.java:456",
                        "method-b-site": "Hex.java:418",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. While the assertion is actually an assertTrue, the assertTrue is over an Array.equals() call. Most likely DSI replaced the return value of method-a with null, which does not equal the expected value.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-12-52",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 101,
        "inspection-start-time": "2022-01-13-12-53",
        "project": "commons-codec",
        "spec-id": "00179",
        "method-a": "org.apache.commons.codec.binary.Hex.encode(Ljava/lang/Object;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.codec.binary.Hex.getCharset()Ljava/nio/charset/Charset;",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "java.nio.charset.Charset",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00179.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.HexTest#testEncodeStringEmpty",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "HexTest.java:700",
                        "method-b-site": "Hex.java:525",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - while the assertion is actually an assertTrue, the assertTrue is over an Array.equals() call. Most likely replaced with null, which is not equal to the expected value.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-12-56",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 102,
        "inspection-start-time": "2022-01-13-12-57",
        "project": "commons-codec",
        "spec-id": "00180",
        "method-a": "org.apache.commons.codec.binary.Hex.encode(Ljava/nio/ByteBuffer;)[B",
        "method-b": "org.apache.commons.codec.binary.Hex.getCharset()Ljava/nio/charset/Charset;",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "java.nio.charset.Charset",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/u/00180.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.HexTest#testEncodeHexByteBufferEmpty",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "HexTest.java:508",
                        "method-b-site": "Hex.java:504",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - while the assertion is actually an assertTrue, the assertTrue is over an Array.equals() call. Most likely replaced with null, which is not equal to the expected value.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-13-00",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 103,
        "inspection-start-time": "2022-01-13-13-01",
        "project": "commons-codec",
        "spec-id": "00181",
        "method-a": "org.apache.commons.codec.binary.Hex.encode([B)[B",
        "method-b": "org.apache.commons.codec.binary.Hex.decode([B)[B",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00181.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.HexTest#testRequiredCharset",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "HexTest.java:187",
                        "method-b-site": "HexTest.java:205",
                        "invocation-count": 6
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Most likely replaced the return value of method-a with the byte[] variable sourceBytes (the pre-encoded byte[] object), but the value that the return value of method-a was compared against was expectedHexStringBytes, so the assertion failed.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "The test fails because of the replacement value of method-a. In the test, the return value of method-a is used as the call value of method-b. However, besides that particular use case, there is no need to call encode() before calling decode() (because one can simply pass method-b an encoded value without having to call encode()).",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-13-28",
        "inspection-time-in-minutes": 27
    },
    {
        "iid": 104,
        "inspection-start-time": "2022-01-13-14-54",
        "project": "commons-codec",
        "spec-id": "00182",
        "method-a": "org.apache.commons.codec.binary.Hex.encode([B)[B",
        "method-b": "org.apache.commons.codec.binary.Hex.getCharset()Ljava/nio/charset/Charset;",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "java.nio.charset.Charset",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00182.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.binary.HexTest#testEncodeHexByteArrayEmpty",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "HexTest.java:470",
                        "method-b-site": "Hex.java:484",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - while the assertion is actually an assertTrue, the assertTrue is over an Array.equals() call. Most likely replaced with null, which is not equal to the expected value.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-14-57",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 105,
        "inspection-start-time": "2022-01-13-14-57",
        "project": "commons-codec",
        "spec-id": "00183",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/io/File;)[B",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/io/InputStream;)[B",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00183.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtils.java:1683",
                        "method-b-site": "DigestUtils.java:1697",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Hex.java:169",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:330 moved after DigestUtilsTest.java:332.",
        "notes": "It seems that these two methods achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-15-06",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 106,
        "inspection-start-time": "2022-01-13-14-57",
        "project": "commons-codec",
        "spec-id": "00184",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/io/File;)[B",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/nio/ByteBuffer;)[B",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00184.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtils.java:1683",
                        "method-b-site": "DigestUtils.java:1669",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Hex.java:169",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:330 moved after DigestUtilsTest.java:336.",
        "notes": "It seems that these two methods achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-15-09",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 107,
        "inspection-start-time": "2022-01-13-15-09",
        "project": "commons-codec",
        "spec-id": "00185",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/io/File;)[B",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digest([B)[B",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00185.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtils.java:1683",
                        "method-b-site": "DigestUtils.java:1656",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Hex.java:169",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:330 moved after DigestUtilsTest.java:335.",
        "notes": "It seems that these two methods achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-15-12",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 108,
        "inspection-start-time": "2022-01-13-15-14",
        "project": "commons-codec",
        "spec-id": "00186",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/io/File;)[B",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/io/InputStream;)Ljava/lang/String;",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00186.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtils.java:1683",
                        "method-b-site": "DigestUtilsTest.java:332",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Hex.java:169",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:330 moved after DigestUtilsTest.java:332.",
        "notes": "Transitively from 00183 - it seems that the caller to method-a and method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship. So, it seems reasonable to extend that argument to method-a and method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-15-23",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 109,
        "inspection-start-time": "2022-01-13-15-23",
        "project": "commons-codec",
        "spec-id": "00187",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/io/File;)[B",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/nio/ByteBuffer;)Ljava/lang/String;",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00187.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtils.java:1683",
                        "method-b-site": "DigestUtilsTest.java:336",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Hex.java:169",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:330 moved after DigestUtilsTest.java:336.",
        "notes": "It seems that the caller to method-a and method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship. So, it seems reasonable to extend that argument to method-a and method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-15-26",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 110,
        "inspection-start-time": "2022-01-13-15-26",
        "project": "commons-codec",
        "spec-id": "00188",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/io/File;)[B",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digestAsHex([B)Ljava/lang/String;",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00188.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtils.java:1683",
                        "method-b-site": "DigestUtilsTest.java:335",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Hex.java:169",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:330 moved after DigestUtilsTest.java:335.",
        "notes": "It seems that the caller to method-a and method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship. So, it seems reasonable to extend that argument to method-a and method-b.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-15-27",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 111,
        "inspection-start-time": "2022-01-13-15-28",
        "project": "commons-codec",
        "spec-id": "00189",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/io/InputStream;)[B",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/nio/ByteBuffer;)[B",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00189.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtils.java:1697",
                        "method-b-site": "DigestUtils.java:1669",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Hex.java:169",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:332 moved after DigestUtilsTest.java:336.",
        "notes": "It seems that method-a and method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-15-31",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 112,
        "inspection-start-time": "2022-01-13-15-32",
        "project": "commons-codec",
        "spec-id": "00190",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/io/InputStream;)[B",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digest([B)[B",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00190.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtils.java:1697",
                        "method-b-site": "DigestUtils.java:1656",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Hex.java:169",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:332 moved after DigestUtilsTest.java:336.",
        "notes": "It seems that method-a and method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-15-35",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 113,
        "inspection-start-time": "2022-01-13-15-35",
        "project": "commons-codec",
        "spec-id": "00191",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/io/InputStream;)[B",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/nio/ByteBuffer;)Ljava/lang/String;",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00191.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtils.java:1697",
                        "method-b-site": "DigestUtilsTest.java:336",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Hex.java:169",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:332 moved after DigestUtilsTest.java:336.",
        "notes": "It seems that the call of method-a and method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-15-38",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 114,
        "inspection-start-time": "2022-01-13-15-38",
        "project": "commons-codec",
        "spec-id": "00192",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/io/InputStream;)[B",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digestAsHex([B)Ljava/lang/String;",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00192.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtils.java:1697",
                        "method-b-site": "DigestUtilsTest.java:335",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at Hex.java:169",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:332 moved after DigestUtilsTest.java:335.",
        "notes": "It seems that the call of method-a and method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-15-42",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 115,
        "inspection-start-time": "2022-01-13-15-58",
        "project": "commons-codec",
        "spec-id": "00193",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digest([B)[B",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/nio/ByteBuffer;)[B",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00193.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtils.java:1656",
                        "method-b-site": "DigestUtils.java:1669",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value to method-a was replaced with the variable allBytes (declared in the test), but it wasn't equal to the value that the return value was being compared against.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:335 moved after DigestUtilsTest.java:336.",
        "notes": "It seems that method-a and method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-16-04",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 116,
        "inspection-start-time": "2022-01-13-16-08",
        "project": "commons-codec",
        "spec-id": "00194",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digest([B)[B",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/nio/ByteBuffer;)Ljava/lang/String;",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00194.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtils.java:1656",
                        "method-b-site": "DigestUtils.java:336",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value to method-a was replaced with the variable allBytes (declared in the test), but it wasn't equal to the value that the return value was being compared against.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:335 moved after DigestUtilsTest.java:336.",
        "notes": "It seems that the caller of method-a and method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-16-10",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 117,
        "inspection-start-time": "2022-01-13-16-10",
        "project": "commons-codec",
        "spec-id": "00195",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/io/File;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/io/File;)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00195.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtilsTest.java:330",
                        "method-b-site": "DigestUtils.java:1683",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value of method-a was replaced with the String value algo (declared in the test), but it wasn't equal to the value that the return value was being compared against (expected).",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-16-18",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 118,
        "inspection-start-time": "2022-01-13-16-18",
        "project": "commons-codec",
        "spec-id": "00196",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/io/File;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/io/InputStream;)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00196.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtilsTest.java:330",
                        "method-b-site": "DigestUtils.java:1697",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value of method-a was replaced with the String value algo (declared in the test), but it wasn't equal to the value that the return value was being compared against (expected).",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:330 moved after DigestUtilsTest.java:332.",
        "notes": "It seems that method-a and the caller of method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-16-22",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 119,
        "inspection-start-time": "2022-01-13-16-22",
        "project": "commons-codec",
        "spec-id": "00197",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/io/File;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/nio/ByteBuffer;)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00197.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtilsTest.java:330",
                        "method-b-site": "DigestUtils.java:1669",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value of method-a was replaced with the String value algo (declared in the test), but it wasn't equal to the value that the return value was being compared against (expected).",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:330 moved after DigestUtilsTest.java:336.",
        "notes": "It seems that method-a and the caller of method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-16-24",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 120,
        "inspection-start-time": "2022-01-13-16-24",
        "project": "commons-codec",
        "spec-id": "00198",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/io/File;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digest([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00198.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtilsTest.java:330",
                        "method-b-site": "DigestUtils.java:1656",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value of method-a was replaced with the String value algo (declared in the test), but it wasn't equal to the value that the return value was being compared against (expected).",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:330 moved after DigestUtilsTest.java:335.",
        "notes": "It seems that method-a and the caller of method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-16-26",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 121,
        "inspection-start-time": "2022-01-13-16-26",
        "project": "commons-codec",
        "spec-id": "00199",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/io/File;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/io/InputStream;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00199.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtilsTest.java:330",
                        "method-b-site": "DigestUtilsTest.java:332",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value of method-a was replaced with the String value algo (declared in the test), but it wasn't equal to the value that the return value was being compared against (expected).",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:330 moved after DigestUtilsTest.java:332.",
        "notes": "It seems that method-a and method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-16-29",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 122,
        "inspection-start-time": "2022-01-13-16-29",
        "project": "commons-codec",
        "spec-id": "00200",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/io/File;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/nio/ByteBuffer;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00200.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtilsTest.java:330",
                        "method-b-site": "DigestUtilsTest.java:336",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value of method-a was replaced with the String value algo (declared in the test), but it wasn't equal to the value that the return value was being compared against (expected).",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:330 moved after DigestUtilsTest.java:336.",
        "notes": "It seems that method-a and method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-16-31",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 123,
        "inspection-start-time": "2022-01-13-16-31",
        "project": "commons-codec",
        "spec-id": "00201",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/io/File;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digestAsHex([B)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00201.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtilsTest.java:330",
                        "method-b-site": "DigestUtilsTest.java:335",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value of method-a was replaced with the String value algo (declared in the test), but it wasn't equal to the value that the return value was being compared against (expected).",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:330 moved after DigestUtilsTest.java:335.",
        "notes": "It seems that method-a and method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-16-33",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 124,
        "inspection-start-time": "2022-01-13-16-33",
        "project": "commons-codec",
        "spec-id": "00202",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/io/InputStream;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/io/InputStream;)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00202.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtilsTest.java:332",
                        "method-b-site": "DigestUtils.java:1697",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value of method-a was replaced with the String value algo (declared in the test), but it wasn't equal to the value that the return value was being compared against (expected).",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-16-35",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 125,
        "inspection-start-time": "2022-01-13-16-35",
        "project": "commons-codec",
        "spec-id": "00203",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/io/InputStream;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/nio/ByteBuffer;)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00203.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtilsTest.java:332",
                        "method-b-site": "DigestUtils.java:1669",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value of method-a was replaced with the String value algo (declared in the test), but it wasn't equal to the value that the return value was being compared against (expected).",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:332 moved after DigestUtilsTest.java:336.",
        "notes": "It seems that method-a and the caller of method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-16-38",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 126,
        "inspection-start-time": "2022-01-13-16-39",
        "project": "commons-codec",
        "spec-id": "00204",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/io/InputStream;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digest([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00204.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtilsTest.java:332",
                        "method-b-site": "DigestUtils.java:1656",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value of method-a was replaced with the String value algo (declared in the test), but it wasn't equal to the value that the return value was being compared against (expected).",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:332 moved after DigestUtilsTest.java:335.",
        "notes": "It seems that method-a and the caller of method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-16-41",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 127,
        "inspection-start-time": "2022-01-13-16-41",
        "project": "commons-codec",
        "spec-id": "00205",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/io/InputStream;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/nio/ByteBuffer;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00205.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtilsTest.java:332",
                        "method-b-site": "DigestUtilsTest.java:336",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value of method-a was replaced with the String value algo (declared in the test), but it wasn't equal to the value that the return value was being compared against (expected).",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:332 moved after DigestUtilsTest.java:336.",
        "notes": "It seems that method-a and  method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-16-43",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 128,
        "inspection-start-time": "2022-01-13-16-43",
        "project": "commons-codec",
        "spec-id": "00206",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/io/InputStream;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digestAsHex([B)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00206.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtilsTest.java:332",
                        "method-b-site": "DigestUtilsTest.java:335",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value of method-a was replaced with the String value algo (declared in the test), but it wasn't equal to the value that the return value was being compared against (expected).",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:332 moved after DigestUtilsTest.java:335.",
        "notes": "It seems that method-a and  method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-16-45",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 129,
        "inspection-start-time": "2022-01-13-16-46",
        "project": "commons-codec",
        "spec-id": "00207",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/lang/String;)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00207.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_StringAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtilsTest.java:350",
                        "method-b-site": "DigestUtils.java:1725",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "DigestUtilsTest.java:352",
                        "method-b-site": "DigestUtils.java:1725",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value to method-a seems to have been replaced with the empty string - maybe from the field value EMPTY_STRING that was used as the argument to method-a?",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-16-51",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 130,
        "inspection-start-time": "2022-01-13-16-51",
        "project": "commons-codec",
        "spec-id": "00208",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/nio/ByteBuffer;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/nio/ByteBuffer;)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00208.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtilsTest.java:336",
                        "method-b-site": "DigestUtils.java:1669",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value of method-a was replaced with the String value algo (declared in the test), but it wasn't equal to the value that the return value was being compared against (expected).",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-16-54",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 131,
        "inspection-start-time": "2022-01-13-16-54",
        "project": "commons-codec",
        "spec-id": "00209",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00209.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_PathAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtilsTest.java:343",
                        "method-b-site": "DigestUtils.java:1713",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value to method-a seems to have been replaced with the empty string - maybe from the field value EMPTY_STRING that was used as the argument to method-a?",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-16-57",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 132,
        "inspection-start-time": "2022-01-13-16-59",
        "project": "commons-codec",
        "spec-id": "00210",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digestAsHex([B)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digest(Ljava/nio/ByteBuffer;)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00210.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtilsTest.java:335",
                        "method-b-site": "DigestUtils.java:1669",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value of method-a was replaced with the String value algo (declared in the test), but it wasn't equal to the value that the return value was being compared against (expected).",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:335 moved after DigestUtilsTest.java:336.",
        "notes": "It seems that method-a and the caller of method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-17-02",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 133,
        "inspection-start-time": "2022-01-13-17-02",
        "project": "commons-codec",
        "spec-id": "00211",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digestAsHex([B)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digest([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00211.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtilsTest.java:335",
                        "method-b-site": "DigestUtils.java:1656",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value of method-a was replaced with the String value algo (declared in the test), but it wasn't equal to the value that the return value was being compared against (expected).",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-17-04",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 134,
        "inspection-start-time": "2022-01-13-17-04",
        "project": "commons-codec",
        "spec-id": "00212",
        "method-a": "org.apache.commons.codec.digest.DigestUtils.digestAsHex([B)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.DigestUtils.digestAsHex(Ljava/nio/ByteBuffer;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00212.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DigestUtilsTest.java:335",
                        "method-b-site": "DigestUtilsTest.java:336",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The return value of method-a was replaced with the String value algo (declared in the test), but it wasn't equal to the value that the return value was being compared against (expected).",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.digest.DigestUtilsTest#testSha224_FileAsHex with DigestUtilsTest.java:335 moved after DigestUtilsTest.java:336.",
        "notes": "It seems that method-a and method-b achieve a very similar functionality on different input arguments, but they themselves do not have an ordering relationship.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-17-06",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 135,
        "inspection-start-time": "2022-01-13-17-06",
        "project": "commons-codec",
        "spec-id": "00213",
        "method-a": "org.apache.commons.codec.digest.HmacUtils.hmacHex(Ljava/io/InputStream;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.HmacUtils.hmac(Ljava/io/InputStream;)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00213.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.HmacUtilsTest#testHmacSha1Hex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "HmacUtils.java:452",
                        "method-b-site": "HmacUtils.java:1051",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value was replaced with \"\" (the empty string), but I'm not really sure where DSI got that value from? Might be from one of the previous calls to hmacSha1Hex().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-17-14",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 136,
        "inspection-start-time": "2022-01-13-17-15",
        "project": "commons-codec",
        "spec-id": "00214",
        "method-a": "org.apache.commons.codec.digest.HmacUtils.hmacHex(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.digest.HmacUtils.hmac(Ljava/lang/String;)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00214.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.HmacUtilsTest#testHmacSha1Hex",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "HmacUtils.java:469",
                        "method-b-site": "HmacUtils.java:988",
                        "invocation-count": 3
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - the return value was replaced with \"The quick brown fox jumps over the lazy dog\" which most likely is from the field value HmacAlgorithmsTest.STANDARD_PHRASE_STRING.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-17-20",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 137,
        "inspection-start-time": "2022-01-13-17-20",
        "project": "commons-codec",
        "spec-id": "00215",
        "method-a": "org.apache.commons.codec.digest.PureJavaCrc32C.update([BII)V",
        "method-b": "org.apache.commons.codec.digest.PureJavaCrc32C.getValue()J",
        "method-a-return-type": "void",
        "method-b-return-type": "long",
        "same-class": "yes",
        "all-tests-mined": true,
        "test-classes-mine-count": 1,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00215.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.digest.PureJavaCrc32CTest#testOnes",
                "stage": "sanity-check-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "?",
                        "method-b-site": "?",
                        "invocation-count": 0
                    }
                ],
                "perturbation-count": 0,
                "comment-on-return-values": "",
                "notes": "ASM_ERROR (manually checked that all tests that mined the spec had ASM error)."
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "Most likely org.apache.commons.codec.digest.PureJavaCrc32CTest#testOnes if ASM error was debugged would show the connection between method-a and method-b",
        "notes": "While the ASM error prevents us from knowing how the DSI experiment would have resulted, manual experimentation shows that calling method-a after method-b causes the test to fail. Manual inspection shows that method-a changes the value crc, which impacts the return value of method-b. This seems like a CONNECTION_DOES_NOT_NECESSITATE_ORDERING case; the field variable crc is an int, and method-a and method-b are both public; method-b seems like it can be called without a call to method-a first as well.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-17-28",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 138,
        "inspection-start-time": "2022-01-13-18-15",
        "project": "commons-codec",
        "spec-id": "00217",
        "method-a": "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.append(C)V",
        "method-b": "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(C)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00217.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.DoubleMetaphoneTest#testNTilde",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DoubleMetaphone.java:150",
                        "method-b-site": "DoubleMetaphone.java:950",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "DoubleMetaphone.java:145",
                        "method-b-site": "DoubleMetaphone.java:950",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 2,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-18-19",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 139,
        "inspection-start-time": "2022-01-13-18-20",
        "project": "commons-codec",
        "spec-id": "00218",
        "method-a": "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.append(C)V",
        "method-b": "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(C)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00218.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.DoubleMetaphoneTest#testNTilde",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DoubleMetaphone.java:150",
                        "method-b-site": "DoubleMetaphone.java:949",
                        "invocation-count": 1
                    },
                    {
                        "method-a-site": "DoubleMetaphone.java:145",
                        "method-b-site": "DoubleMetaphone.java:949",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 2,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-13-18-22",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 140,
        "inspection-start-time": "2022-01-14-00-29",
        "project": "commons-codec",
        "spec-id": "00220",
        "method-a": "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.append(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00220.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.DoubleMetaphoneTest#testDoubleMetaphone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DoubleMetaphone.java:747",
                        "method-b-site": "DoubleMetaphone.java:972",
                        "invocation-count": 5
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test failed because the state changes that should have occurred by calling method-a did not happen."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-00-36",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 141,
        "inspection-start-time": "2022-01-14-00-37",
        "project": "commons-codec",
        "spec-id": "00221",
        "method-a": "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.append(Ljava/lang/String;)V",
        "method-b": "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00221.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.DoubleMetaphoneTest#testDoubleMetaphone",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DoubleMetaphone.java:747",
                        "method-b-site": "DoubleMetaphone.java:971",
                        "invocation-count": 5
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test failed because the state changes that should have occurred by calling method-a did not happen."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-00-41",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 142,
        "inspection-start-time": "2022-01-14-00-42",
        "project": "commons-codec",
        "spec-id": "00222",
        "method-a": "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.append(Ljava/lang/String;Ljava/lang/String;)V",
        "method-b": "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00222.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.DoubleMetaphoneTest#testIsDoubleMetaphoneEqualBasic",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DoubleMetaphone.java:726",
                        "method-b-site": "DoubleMetaphone.java:977",
                        "invocation-count": 12
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test fails because the state changes that were supposed to happen with a call to method-a didn't happen because method-a wasn't called."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-00-49",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 143,
        "inspection-start-time": "2022-01-14-00-49",
        "project": "commons-codec",
        "spec-id": "00223",
        "method-a": "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.append(Ljava/lang/String;Ljava/lang/String;)V",
        "method-b": "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(Ljava/lang/String;)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00223.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.DoubleMetaphoneTest#testIsDoubleMetaphoneEqualBasic",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DoubleMetaphone.java:726",
                        "method-b-site": "DoubleMetaphone.java:976",
                        "invocation-count": 12
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": "The test fails because the state changes that were supposed to happen with a call to method-a didn't happen because method-a wasn't called."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-00-51",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 144,
        "inspection-start-time": "2022-01-14-01-28",
        "project": "commons-codec",
        "spec-id": "00228",
        "method-a": "org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.DoubleMetaphone.cleanInput(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00228.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.DoubleMetaphoneTest#testEncodeNull",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DoubleMetaphone.java:215",
                        "method-b-site": "DoubleMetaphone.java:85",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED. Most likely replaced with null?",
                "notes": "IMPLICITLY_EXPECTED_EXCEPTION - the test only passed because there was no fail() for the case that method-a didn't throw an exception."
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-01-37",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 145,
        "inspection-start-time": "2022-01-14-01-39",
        "project": "commons-codec",
        "spec-id": "00229",
        "method-a": "org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(Ljava/lang/String;Z)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00229.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.DoubleMetaphoneTest#testEncodeNull",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DoubleMetaphone.java:215",
                        "method-b-site": "DoubleMetaphone.java:74",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED. Most likely replaced with null?",
                "notes": "IMPLICITLY_EXPECTED_EXCEPTION - the test only passed because there was no fail() for the case that method-a didn't throw an exception."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-01-41",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 146,
        "inspection-start-time": "2022-01-14-01-41",
        "project": "commons-codec",
        "spec-id": "00230",
        "method-a": "org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(Ljava/lang/String;Z)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.DoubleMetaphone.cleanInput(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00230.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.DoubleMetaphoneTest#testEncodeNull",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "DoubleMetaphone.java:74",
                        "method-b-site": "DoubleMetaphone.java:85",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "RETURN_VALUE_DISCARDED. Most likely replaced with null?",
                "notes": "IMPLICITLY_EXPECTED_EXCEPTION - the test only passed because there was no fail() for the case that method-a didn't throw an exception."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-01-43",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 147,
        "inspection-start-time": "2022-01-14-01-44",
        "project": "commons-codec",
        "spec-id": "00231",
        "method-a": "org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(Ljava/lang/String;Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.codec.language.DoubleMetaphone.charAt(Ljava/lang/String;I)C",
        "method-a-return-type": "boolean",
        "method-b-return-type": "char",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00231.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.DoubleMetaphoneTest#testNTilde",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DoubleMetaphoneTest.java:1216",
                        "method-b-site": "DoubleMetaphone.java:146",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Most likely DSI replaced the return value of method-a with the default value false, which caused the test to fail because the call to method-a was around an assertTrue().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-01-50",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 148,
        "inspection-start-time": "2022-01-14-01-56",
        "project": "commons-codec",
        "spec-id": "00232",
        "method-a": "org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(Ljava/lang/String;Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.codec.language.DoubleMetaphone.handleS(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I",
        "method-a-return-type": "boolean",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00232.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.DoubleMetaphoneTest#testCCedilla",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DoubleMetaphoneTest.java:1059",
                        "method-b-site": "DoubleMetaphone.java:164",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Most likely DSI replaced the return value of method-a with the default value false, which caused the test to fail because the call to method-a was around an assertTrue().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-02-01",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 149,
        "inspection-start-time": "2022-01-14-02-01",
        "project": "commons-codec",
        "spec-id": "00233",
        "method-a": "org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(Ljava/lang/String;Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(Ljava/lang/String;Ljava/lang/String;Z)Z",
        "method-a-return-type": "boolean",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00233.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.DoubleMetaphoneTest#testNTilde",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DoubleMetaphoneTest.java:1216",
                        "method-b-site": "DoubleMetaphone.java:229",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Most likely DSI replaced the return value of method-a with the default value false, which caused the test to fail because the call to method-a was around an assertTrue().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-02-03",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 150,
        "inspection-start-time": "2022-01-14-02-03",
        "project": "commons-codec",
        "spec-id": "00234",
        "method-a": "org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(Ljava/lang/String;Ljava/lang/String;Z)Z",
        "method-b": "org.apache.commons.codec.language.DoubleMetaphone.charAt(Ljava/lang/String;I)C",
        "method-a-return-type": "boolean",
        "method-b-return-type": "char",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00234.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.DoubleMetaphoneTest#testNTilde",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DoubleMetaphone.java:229",
                        "method-b-site": "DoubleMetaphone.java:146",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Most likely DSI replaced the return value of method-a with the default value false, which caused the test to fail because the call to method-a was around an assertTrue().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-02-05",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 151,
        "inspection-start-time": "2022-01-14-02-06",
        "project": "commons-codec",
        "spec-id": "00235",
        "method-a": "org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual(Ljava/lang/String;Ljava/lang/String;Z)Z",
        "method-b": "org.apache.commons.codec.language.DoubleMetaphone.handleS(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I",
        "method-a-return-type": "boolean",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00235.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.DoubleMetaphoneTest#testCCedilla",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "DoubleMetaphone.java:229",
                        "method-b-site": "DoubleMetaphone.java:164",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Most likely DSI replaced the return value of method-a with the default value false, which caused the test to fail because the call to method-a was around an assertTrue().",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-02-10",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 152,
        "inspection-start-time": "2022-01-14-12-17",
        "project": "commons-codec",
        "spec-id": "00239",
        "method-a": "org.apache.commons.codec.language.MatchRatingApproachEncoder.cleanName(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00239.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.MatchRatingApproachEncoderTest#testGetEncoding_SMITH_to_SMTH",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "MatchRatingApproachEncoder.java:132",
                        "method-b-site": "MatchRatingApproachEncoder.java:91",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with the argument variable name.",
                "notes": "Test failed because the return value of method-a was not what it was supposed to be, making the subsequent operations work on an incorrect? corrupted? input.."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-12-21",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 153,
        "inspection-start-time": "2022-01-14-15-40",
        "project": "commons-codec",
        "spec-id": "00242",
        "method-a": "org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.MatchRatingApproachEncoder.cleanName(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00242.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.MatchRatingApproachEncoderTest#testGetEncoding_HARPER_HRPR",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "MatchRatingApproachEncoderTest.java:256",
                        "method-b-site": "MatchRatingApproachEncoder.java:132",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The test result shows that method-a was replaced by the empty string, but not sure where DSI got the empty string from considering that there are no field variables in the class and there are no other declared Strings.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-15-45",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 154,
        "inspection-start-time": "2022-01-14-15-46",
        "project": "commons-codec",
        "spec-id": "00243",
        "method-a": "org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00243.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.MatchRatingApproachEncoderTest#testGetEncoding_HARPER_HRPR",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "MatchRatingApproachEncoderTest.java:256",
                        "method-b-site": "MatchRatingApproachEncoder.java:142",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The test result shows that method-a was replaced by the empty string, but not sure where DSI got the empty string from considering that there are no field variables in the class and there are no other declared Strings.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-15-48",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 155,
        "inspection-start-time": "2022-01-14-15-48",
        "project": "commons-codec",
        "spec-id": "00244",
        "method-a": "org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(Ljava/lang/String;)Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00244.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.MatchRatingApproachEncoderTest#testGetEncoding_HARPER_HRPR",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "MatchRatingApproachEncoderTest.java:256",
                        "method-b-site": "MatchRatingApproachEncoder.java:420",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The test result shows that method-a was replaced by the empty string, but not sure where DSI got the empty string from considering that there are no field variables in the class and there are no other declared Strings.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-15-50",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 156,
        "inspection-start-time": "2022-01-14-15-50",
        "project": "commons-codec",
        "spec-id": "00245",
        "method-a": "org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00245.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.MatchRatingApproachEncoderTest#testGetEncoding_HARPER_HRPR",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "MatchRatingApproachEncoderTest.java:256",
                        "method-b-site": "MatchRatingApproachEncoder.java:91",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The test result shows that method-a was replaced by the empty string, but not sure where DSI got the empty string from considering that there are no field variables in the class and there are no other declared Strings.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-15-52",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 157,
        "inspection-start-time": "2022-01-14-15-53",
        "project": "commons-codec",
        "spec-id": "00246",
        "method-a": "org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.MatchRatingApproachEncoder.removeDoubleConsonants(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00246.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.MatchRatingApproachEncoderTest#testGetEncoding_HARPER_HRPR",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "MatchRatingApproachEncoderTest.java:256",
                        "method-b-site": "MatchRatingApproachEncoder.java:139",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The test result shows that method-a was replaced by the empty string, but not sure where DSI got the empty string from considering that there are no field variables in the class and there are no other declared Strings.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-15-55",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 158,
        "inspection-start-time": "2022-01-14-15-55",
        "project": "commons-codec",
        "spec-id": "00247",
        "method-a": "org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00247.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.MatchRatingApproachEncoderTest#testGetEncoding_HARPER_HRPR",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "MatchRatingApproachEncoderTest.java:256",
                        "method-b-site": "MatchRatingApproachEncoder.java:136",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The test result shows that method-a was replaced by the empty string, but not sure where DSI got the empty string from considering that there are no field variables in the class and there are no other declared Strings.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-15-57",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 159,
        "inspection-start-time": "2022-01-14-20-24",
        "project": "commons-codec",
        "spec-id": "00249",
        "method-a": "org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(Ljava/lang/String;Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(I)I",
        "method-a-return-type": "boolean",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 36,
        "code-snippets-file": "snippets/u/00249.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.MatchRatingApproachEncoderTest#testCompare_BRIAN_BRYAN_SuccessfullyMatched",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "MatchRatingApproachEncoderTest.java:325",
                        "method-b-site": "MatchRatingApproachEncoder.java:253",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The DSI default value for booleans is false, but the call to method-a was an argument to assertTrue(). Hence, the test failed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-20-28",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 160,
        "inspection-start-time": "2022-01-14-20-28",
        "project": "commons-codec",
        "spec-id": "00250",
        "method-a": "org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(Ljava/lang/String;Ljava/lang/String;)Z",
        "method-b": "org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(Ljava/lang/String;Ljava/lang/String;)I",
        "method-a-return-type": "boolean",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 36,
        "code-snippets-file": "snippets/u/00250.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.MatchRatingApproachEncoderTest#testCompare_BRIAN_BRYAN_SuccessfullyMatched",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "MatchRatingApproachEncoderTest.java:325",
                        "method-b-site": "MatchRatingApproachEncoder.java:257",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The DSI default value for booleans is false, but the call to method-a was an argument to assertTrue(). Hence, the test failed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-20-30",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 161,
        "inspection-start-time": "2022-01-14-23-44",
        "project": "commons-codec",
        "spec-id": "00259",
        "method-a": "org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(Ljava/lang/String;)Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/u/00259.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.MatchRatingApproachEncoderTest#testGetEncoding_SMITH_to_SMTH",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "MatchRatingApproachEncoder.java:136",
                        "method-b-site": "MatchRatingApproachEncoder.java:142",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with the variable name, which is the input value to method-a.",
                "notes": "The test failed because the replacement value was not equal to what would have been the return value of method-a."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-14-23-46",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 162,
        "inspection-start-time": "2022-01-15-00-29",
        "project": "commons-codec",
        "spec-id": "00263",
        "method-a": "org.apache.commons.codec.language.Metaphone.metaphone(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.Metaphone.isNextChar(Ljava/lang/StringBuilder;IC)Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00263.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.MetaphoneTest#testPHTOF",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "MetaphoneTest.java:436",
                        "method-b-site": "Metaphone.java:271",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The exception message shows that the replacement value was \"\" (the empty string), but I'm not sure where that value came from. Possibly a field variable?",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-00-33",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 163,
        "inspection-start-time": "2022-01-15-00-33",
        "project": "commons-codec",
        "spec-id": "00264",
        "method-a": "org.apache.commons.codec.language.Metaphone.metaphone(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.Metaphone.isVowel(Ljava/lang/StringBuilder;I)Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00264.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.MetaphoneTest#testWhy",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "MetaphoneTest.java:395",
                        "method-b-site": "Metaphone.java:312",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT - got pretty lucky as the replacement value was \"\" (the empty string), but that was also the expected output.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-00-37",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 164,
        "inspection-start-time": "2022-01-15-00-37",
        "project": "commons-codec",
        "spec-id": "00265",
        "method-a": "org.apache.commons.codec.language.Metaphone.metaphone(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.Metaphone.regionMatch(Ljava/lang/StringBuilder;ILjava/lang/String;)Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00265.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.MetaphoneTest#testPHTOF",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "MetaphoneTest.java:436",
                        "method-b-site": "Metaphone.java:282",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The exception message shows that the replacement value was \"\" (the empty string), but I'm not sure where that value came from. Possibly a field variable?",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-00-40",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 165,
        "inspection-start-time": "2022-01-15-01-00",
        "project": "commons-codec",
        "spec-id": "00268",
        "method-a": "org.apache.commons.codec.language.Nysiis.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.Nysiis.isStrict()Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00268.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.NysiisTest#testTrueVariant",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "NysiisTest.java:287",
                        "method-b-site": "Nysiis.java:317",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Most likely replaced with \"\" (the empty string), which was not equal to the value that was expected.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-01-06",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 166,
        "inspection-start-time": "2022-01-15-01-07",
        "project": "commons-codec",
        "spec-id": "00269",
        "method-a": "org.apache.commons.codec.language.Nysiis.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.Nysiis.nysiis(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00269.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.NysiisTest#testTrueVariant",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "NysiisTest.java:287",
                        "method-b-site": "Nysiis.java:229",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Most likely replaced with \"\" (the empty string), which was not equal to the value that was expected.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-01-09",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 167,
        "inspection-start-time": "2022-01-15-01-09",
        "project": "commons-codec",
        "spec-id": "00270",
        "method-a": "org.apache.commons.codec.language.Nysiis.nysiis(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.Nysiis.isStrict()Z",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00270.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.NysiisTest#testTrueVariant",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Nysiis.java:229",
                        "method-b-site": "Nysiis.java:317",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Most likely replaced with \"\" (the empty string), which was not equal to the value that was expected.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-01-13",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 168,
        "inspection-start-time": "2022-01-15-01-13",
        "project": "commons-codec",
        "spec-id": "00271",
        "method-a": "org.apache.commons.codec.language.Soundex.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.Soundex.soundex(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00271.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.SoundexTest#testEncodeIgnoreTrimmable",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "SoundexTest.java:215",
                        "method-b-site": "Soundex.java:250",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Most likely replaced with \"\" (the empty string), which was not equal to the value that was expected.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-01-18",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 169,
        "inspection-start-time": "2022-01-15-12-40",
        "project": "commons-codec",
        "spec-id": "00281",
        "method-a": "org.apache.commons.codec.language.bm.Languages$LanguageSet.isSingleton()Z",
        "method-b": "org.apache.commons.codec.language.bm.Languages$LanguageSet.getAny()Ljava/lang/String;",
        "method-a-return-type": "boolean",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00281.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest#testInvalidLangIllegalArgumentException",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "Rule.java:334",
                        "method-b-site": "Rule.java:334",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with DSI default value false. However, this corrupted the state because the control flow depended on the return value of method-a, and the test execution should have caused method-a to return true. Only in the case that method-a returns true, method-b is called. REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B",
                "notes": "Assertion failed because EXPECTED_EXCEPTION_NOT_THROWN. (Expected Exception was IllegalArgumentException)"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "Refer to comment-on-return-values for why method-b was not called in this test (state corruption). As for the two methods themselves, they check for different properties about the field variable this.languages, but they are not related to each other. Therefore, this is a spurious spec. DELAY_CAUSES_OUTPUT_CORRUPTION",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-12-53",
        "inspection-time-in-minutes": 13
    },
    {
        "iid": 170,
        "inspection-start-time": "2022-01-15-14-41",
        "project": "commons-codec",
        "spec-id": "00284",
        "method-a": "org.apache.commons.codec.language.bm.PhoneticEngine.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.language.bm.PhoneticEngine.encode(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00284.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest#testOOM",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "BeiderMorseEncoder.java:98",
                        "method-b-site": "PhoneticEngine.java:381",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with the string variable phrase, which was the argument to method-a.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-14-46",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 171,
        "inspection-start-time": "2022-01-15-15-04",
        "project": "commons-codec",
        "spec-id": "00291",
        "method-a": "org.apache.commons.codec.net.BCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.BCodec.decodeText(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00291.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodecTest.java:92",
                        "method-b-site": "BCodec.java:225",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Replaced with String variable plain, which was not equal to the expected output.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-15-08",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 172,
        "inspection-start-time": "2022-01-15-15-09",
        "project": "commons-codec",
        "spec-id": "00292",
        "method-a": "org.apache.commons.codec.net.BCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doDecoding([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00292.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodecTest.java:92",
                        "method-b-site": "RFC1522Codec.java:154",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Replaced with String variable plain, which was not equal to the expected output.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-15-11",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 173,
        "inspection-start-time": "2022-01-15-15-12",
        "project": "commons-codec",
        "spec-id": "00293",
        "method-a": "org.apache.commons.codec.net.BCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.getEncoding()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00293.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testDecodeObjects",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:270",
                        "method-b-site": "RFC1522Codec.java:148",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "The assertion shows that the replacement value was an object equivalent to \"\", but I'm not exactly sure where that value came from?",
                "notes": "EXPECTED_EXCEPTION, but not related to this spec and the assertion failure."
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-15-19",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 174,
        "inspection-start-time": "2022-01-15-15-30",
        "project": "commons-codec",
        "spec-id": "00294",
        "method-a": "org.apache.commons.codec.net.BCodec.decodeText(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doDecoding([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00294.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testDecodeObjects",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:225",
                        "method-b-site": "RFC1522Codec.java:154",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The replacement value was the String variable decoded, but that was not the expected value.",
                "notes": "EXPECTED_EXCEPTION, but not related to this spec and the assertion failure."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-15-41",
        "inspection-time-in-minutes": 11
    },
    {
        "iid": 175,
        "inspection-start-time": "2022-01-15-15-41",
        "project": "commons-codec",
        "spec-id": "00295",
        "method-a": "org.apache.commons.codec.net.BCodec.decodeText(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.getEncoding()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00295.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testDecodeObjects",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:225",
                        "method-b-site": "RFC1522Codec.java:148",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. The replacement value was the String variable decoded, but that was not the expected value.",
                "notes": "EXPECTED_EXCEPTION, but not related to this spec and the assertion failure."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-15-46",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 176,
        "inspection-start-time": "2022-01-15-17-05",
        "project": "commons-codec",
        "spec-id": "00297",
        "method-a": "org.apache.commons.codec.net.BCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.BCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00297.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodecTest.java:90",
                        "method-b-site": "BCodecTest.java:92",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain (\"Hello there\"), but the assertion was checking whether the return value of method-a was the encoded version of the string. Hence, the assertion failed.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "precondition",
        "validating-test-file": "snippet and reasoning below; DSIValidationTest#testDSI00297 shows a case where method-b is called before method-a.",
        "notes": "This particular test shows a bit of an ordering relation because method-a's return value is passed into method-b, mainly as a way to check that the decoded version of the encoding is equal to the original string. However, in general, I don't think one must call encode() before decode() - One can also write a similar test where method-b's return value is passed into method-a, like DSIValidationTest#testDSI00297. DECISION see last two sentences",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-15-17-15",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 177,
        "inspection-start-time": "2022-01-15-17-15",
        "project": "commons-codec",
        "spec-id": "00298",
        "method-a": "org.apache.commons.codec.net.BCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.BCodec.decodeText(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00298.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodecTest.java:90",
                        "method-b-site": "BCodec.java:225",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain (\"Hello there\"), but the assertion was checking whether the return value of method-a was the encoded version of the string. Hence, the assertion failed.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "precondition",
        "validating-test-file": "snippet and reasoning below. DSIValidationTest#testDSI00297 shows a case where method-b is transitively called before method-a.",
        "notes": "Similar logic as 00297, transitively because the method-b of 00297 is the caller of this method-b. This particular test shows a bit of an ordering relation because method-a's return value is passed into the caller of method-b (and subsequently method-b), mainly as a way to check that the decoded version of the encoding is equal to the original string. However, in general, I don't think one must call encode() before decodeText() - One can also write a similar test where method-b's return value is passed into method-a, like DSIValidationTest#testDSI00297. DECISION see last two sentences",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-15-17-19",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 178,
        "inspection-start-time": "2022-01-15-17-20",
        "project": "commons-codec",
        "spec-id": "00299",
        "method-a": "org.apache.commons.codec.net.BCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.BCodec.encode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00299.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodecTest.java:90",
                        "method-b-site": "BCodec.java:206",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain (\"Hello there\"), but the assertion was checking whether the return value of method-a was the encoded version of the string. Hence, the assertion failed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-17-22",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 179,
        "inspection-start-time": "2022-01-15-17-22",
        "project": "commons-codec",
        "spec-id": "00300",
        "method-a": "org.apache.commons.codec.net.BCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.BCodec.encodeText(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00300.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodecTest.java:90",
                        "method-b-site": "BCodec.java:167",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain (\"Hello there\"), but the assertion was checking whether the return value of method-a was the encoded version of the string. Hence, the assertion failed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-17-24",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 180,
        "inspection-start-time": "2022-01-15-17-24",
        "project": "commons-codec",
        "spec-id": "00301",
        "method-a": "org.apache.commons.codec.net.BCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.BCodec.getCharset()Ljava/nio/charset/Charset;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.nio.charset.Charset",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00301.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodecTest.java:90",
                        "method-b-site": "BCodec.java:206",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain (\"Hello there\"), but the assertion was checking whether the return value of method-a was the encoded version of the string. Hence, the assertion failed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-17-27",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 181,
        "inspection-start-time": "2022-01-15-17-27",
        "project": "commons-codec",
        "spec-id": "00302",
        "method-a": "org.apache.commons.codec.net.BCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doDecoding([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00302.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodecTest.java:90",
                        "method-b-site": "BCodec.java:225",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain (\"Hello there\"), but the assertion was checking whether the return value of method-a was the encoded version of the string. Hence, the assertion failed.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00297 shows a case where method-b is transitively called before method-a.",
        "notes": "While one can potentially make the same argument as 00297 and 00298 that this spec is potentially a true spec because method-a can be somehow composed with method-b, here one must insert an intermediary step between passing the return value of method-a to method-b, because method-b's argument type is different from method-a's return value. So, I'm leaning towards this spec being a spurious-spec.",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-15-17-36",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 182,
        "inspection-start-time": "2022-01-15-17-36",
        "project": "commons-codec",
        "spec-id": "00303",
        "method-a": "org.apache.commons.codec.net.BCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doEncoding([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00303.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodecTest.java:90",
                        "method-b-site": "RFC1522Codec.java:79",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain (\"Hello there\"), but the assertion was checking whether the return value of method-a was the encoded version of the string. Hence, the assertion failed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-17-38",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 183,
        "inspection-start-time": "2022-01-15-17-39",
        "project": "commons-codec",
        "spec-id": "00304",
        "method-a": "org.apache.commons.codec.net.BCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.getEncoding()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00304.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testEncodeObjects",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:246",
                        "method-b-site": "RFC1522Codec.java:77",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain (\"Hello there\"), but the assertion was checking whether the return value of method-a was the encoded version of the string. Hence, the assertion failed.",
                "notes": "EXPECTED_EXCEPTION, but not related to the spec or the failed assertion."
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-17-45",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 184,
        "inspection-start-time": "2022-01-15-17-45",
        "project": "commons-codec",
        "spec-id": "00305",
        "method-a": "org.apache.commons.codec.net.BCodec.encode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.BCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00305.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:206",
                        "method-b-site": "BCodecTest.java:92",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain (\"Hello there\"), but the assertion was checking whether the return value of method-a was the encoded version of the string. Hence, the assertion failed.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "precondition",
        "validating-test-file": "snippet and reasoning below; DSIValidationTest#testDSI00297 shows a case where method-b is called before method-a is transitively called.",
        "notes": "Similar to 00297, but the method-a of 00297 is the caller of this method-a. This particular test shows a bit of an ordering relation because method-a's return value is passed into method-b, mainly as a way to check that the decoded version of the encoding is equal to the original string. However, in general, I don't think one must call encode() before decode() - One can also write a similar test where method-b's return value is passed into method-a, like DSIValidationTest#testDSI00297. DECISION see last two sentences",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-15-17-50",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 185,
        "inspection-start-time": "2022-01-15-17-49",
        "project": "commons-codec",
        "spec-id": "00306",
        "method-a": "org.apache.commons.codec.net.BCodec.encode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.BCodec.decodeText(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00306.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:206",
                        "method-b-site": "BCodec.java:225",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain (\"Hello there\"), but the assertion was checking whether the return value of method-a was the encoded version of the string. Hence, the assertion failed.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "precondition",
        "validating-test-file": "snippet and reasoning below; DSIValidationTest#testDSI00297 shows a case where method-b is transitively called before method-a is transitively called.",
        "notes": "Similar to 00298, but the method-a of 00298 is the caller of this method-a. This particular test shows a bit of an ordering relation because method-a's return value is passed into method-b, mainly as a way to check that the decoded version of the encoding is equal to the original string. However, in general, I don't think one must call encode() before decode() - One can also write a similar test where method-b's return value is passed into method-a, like DSIValidationTest#testDSI00297. DECISION see last two sentences",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-15-17-55",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 186,
        "inspection-start-time": "2022-01-15-17-55",
        "project": "commons-codec",
        "spec-id": "00307",
        "method-a": "org.apache.commons.codec.net.BCodec.encode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.BCodec.encodeText(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00307.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:206",
                        "method-b-site": "BCodec.java:167",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain (\"Hello there\"), but the assertion was checking whether the return value of method-a was the encoded version of the string. Hence, the assertion failed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-17-59",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 187,
        "inspection-start-time": "2022-01-15-18-00",
        "project": "commons-codec",
        "spec-id": "00308",
        "method-a": "org.apache.commons.codec.net.BCodec.encode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doDecoding([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00308.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:206",
                        "method-b-site": "RFC1522Codec.java:154",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain (\"Hello there\"), but the assertion was checking whether the return value of method-a was the encoded version of the string. Hence, the assertion failed.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00297 shows a case where method-b is transitively called before method-a.",
        "notes": "While one can potentially make the same argument as 00305 and 00306 that this spec is potentially a true spec because method-a can be somehow composed with method-b, here one must insert an intermediary step between passing the return value of method-a to method-b, because method-b's argument type is different from method-a's return value. So, I'm leaning towards this spec being a spurious-spec.",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-15-18-06",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 188,
        "inspection-start-time": "2022-01-15-18-06",
        "project": "commons-codec",
        "spec-id": "00309",
        "method-a": "org.apache.commons.codec.net.BCodec.encode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doEncoding([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00309.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:206",
                        "method-b-site": "RFC1522Codec.java:79",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain (\"Hello there\"), but the assertion was checking whether the return value of method-a was the encoded version of the string. Hence, the assertion failed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-18-09",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 189,
        "inspection-start-time": "2022-01-15-18-09",
        "project": "commons-codec",
        "spec-id": "00310",
        "method-a": "org.apache.commons.codec.net.BCodec.encode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.getEncoding()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00310.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testEncodeObjects",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:206",
                        "method-b-site": "RFC1522Codec.java:77",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain (\"what not\"), but the assertion was checking whether the return value of method-a was the encoded version of the string. Hence, the assertion failed.",
                "notes": "EXPECTED_EXCEPTION, but not related to the spec or the failed assertion."
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-18-12",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 190,
        "inspection-start-time": "2022-01-15-18-18",
        "project": "commons-codec",
        "spec-id": "00311",
        "method-a": "org.apache.commons.codec.net.BCodec.encodeText(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.BCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00311.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:167",
                        "method-b-site": "BCodecTest.java:92",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain (\"Hello there\"), but the assertion was checking whether the return value of method-a was the encoded version of the string. Hence, the assertion failed.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "precondition",
        "validating-test-file": "snippet and reasoning below; DSIValidationTest#testDSI00297 shows a case where method-b is called before method-a is transitively called.",
        "notes": "Similar to 00305, but the method-a of 00305 is the caller of this method-a. This particular test shows a bit of an ordering relation because method-a's return value is passed into method-b, mainly as a way to check that the decoded version of the encoding is equal to the original string. However, in general, I don't think one must call encodeText() before decode() - One can also write a similar test where method-b's return value is transitively passed into method-a, like DSIValidationTest#testDSI00297. DECISION see last two sentences",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-15-18-26",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 191,
        "inspection-start-time": "2022-01-15-18-27",
        "project": "commons-codec",
        "spec-id": "00312",
        "method-a": "org.apache.commons.codec.net.BCodec.encodeText(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.BCodec.decodeText(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00312.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:167",
                        "method-b-site": "BCodecTest.java:225",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain (\"Hello there\"), but the assertion was checking whether the return value of method-a was the encoded version of the string. Hence, the assertion failed.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "precondition",
        "validating-test-file": "snippet and reasoning below; DSIValidationTest#testDSI00297 shows a case where method-b is called transitively before method-a is transitively called.",
        "notes": "Similar to 00306, but the method-a of 00305 is the caller of this method-a. This particular test shows a bit of an ordering relation because method-a's return value is passed into method-b, mainly as a way to check that the decoded version of the encoding is equal to the original string. However, in general, I don't think one must call encodeText() before decode() - One can also write a similar test where method-b's return value is transitively passed into method-a, like DSIValidationTest#testDSI00297. DECISION see last two sentences",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-15-18-32",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 192,
        "inspection-start-time": "2022-01-15-18-32",
        "project": "commons-codec",
        "spec-id": "00313",
        "method-a": "org.apache.commons.codec.net.BCodec.encodeText(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doDecoding([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00313.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:167",
                        "method-b-site": "RFC1522Codec.java:154",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain (\"Hello there\"), but the assertion was checking whether the return value of method-a was the encoded version of the string. Hence, the assertion failed.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00297 shows a case where method-b is transitively called before method-a is transitively called.",
        "notes": "While one can potentially make the same argument as 00310 and 00311 that this spec is potentially a true spec because method-a can be somehow composed with method-b, here one must insert an intermediary step between passing the return value of method-a to method-b, because method-b's argument type is different from method-a's return value. So, I'm leaning towards this spec being a spurious-spec.",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-15-18-37",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 193,
        "inspection-start-time": "2022-01-15-18-41",
        "project": "commons-codec",
        "spec-id": "00314",
        "method-a": "org.apache.commons.codec.net.BCodec.encodeText(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doEncoding([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00314.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:167",
                        "method-b-site": "RFC1522Codec.java:79",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain (\"Hello there\"), but the assertion was checking whether the return value of method-a was the encoded version of the string. Hence, the assertion failed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-18-45",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 194,
        "inspection-start-time": "2022-01-15-18-45",
        "project": "commons-codec",
        "spec-id": "00315",
        "method-a": "org.apache.commons.codec.net.BCodec.encodeText(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.getEncoding()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00315.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testEncodeObjects",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:167",
                        "method-b-site": "RFC1522Codec.java:77",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain (\"what not\"), but the assertion was checking whether the return value of method-a was the encoded version of the string. Hence, the assertion failed.",
                "notes": "EXPECTED_EXCEPTION, but not related to the spec or the failed assertion."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-18-47",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 195,
        "inspection-start-time": "2022-01-15-18-48",
        "project": "commons-codec",
        "spec-id": "00316",
        "method-a": "org.apache.commons.codec.net.BCodec.getCharset()Ljava/nio/charset/Charset;",
        "method-b": "org.apache.commons.codec.net.BCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.nio.charset.Charset",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00316.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:206",
                        "method-b-site": "BCodecTest.java:92",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at RFC1522Codec.java:79",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "The snippet shows that method-a is a 1-line getter that does not change state. Moreover, the only place where the variable that method-a returns is set is in BCodec's constructor. Therefore, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-18-54",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 196,
        "inspection-start-time": "2022-01-15-18-55",
        "project": "commons-codec",
        "spec-id": "00317",
        "method-a": "org.apache.commons.codec.net.BCodec.getCharset()Ljava/nio/charset/Charset;",
        "method-b": "org.apache.commons.codec.net.BCodec.decodeText(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.nio.charset.Charset",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00317.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:206",
                        "method-b-site": "BCodec.java:225",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at RFC1522Codec.java:79",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "The snippet shows that method-a is a 1-line getter that does not change state. Moreover, the only place where the variable that method-a returns is set is in BCodec's constructor. Therefore, this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-18-57",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 197,
        "inspection-start-time": "2022-01-15-19-17",
        "project": "commons-codec",
        "spec-id": "00320",
        "method-a": "org.apache.commons.codec.net.BCodec.getCharset()Ljava/nio/charset/Charset;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doDecoding([B)[B",
        "method-a-return-type": "java.nio.charset.Charset",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00320.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:206",
                        "method-b-site": "RFC1522Codec.java:154",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at RFC1522Codec.java:79.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00320",
        "notes": "method-a is a 1-line getter that doesn't change state. The validating test file shows that method-b can be safely called before method-a. ONE_STATELESS_METHOD",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-19-21",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 198,
        "inspection-start-time": "2022-01-15-19-22",
        "project": "commons-codec",
        "spec-id": "00321",
        "method-a": "org.apache.commons.codec.net.BCodec.getCharset()Ljava/nio/charset/Charset;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doEncoding([B)[B",
        "method-a-return-type": "java.nio.charset.Charset",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00321.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "BCodec.java:206",
                        "method-b-site": "RFC1522Codec.java:79",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at RFC1522Codec.java:79.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet",
        "notes": "method-a is a 1-line getter that doesn't change state. The critical location in RFC1522Codec.encodeText() that **may** need a call to method-a before it is on RFC1522Codec.java:79, the location where the argument to method-b is computed. Hence, method-b itself does not have a relationship with method-a. ONE_STATELESS_METHOD",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-19-32",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 199,
        "inspection-start-time": "2022-01-15-22-45",
        "project": "commons-codec",
        "spec-id": "00325",
        "method-a": "org.apache.commons.codec.net.PercentCodec.containsSpace([B)Z",
        "method-b": "org.apache.commons.codec.net.PercentCodec.doEncode([BIZ)[B",
        "method-a-return-type": "boolean",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00325.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.PercentCodecTest#testPercentEncoderDecoderWithPlusForSpace",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "PercentCodec.java:127",
                        "method-b-site": "PercentCodec.java:128",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns true, and the subsequent computation is based on a conditional checking for the return value of method-a. By replacing the return value of method-a with false, DSI corrupted the state and subsequently made the test fail. REPLACEMENT_TRIGGERS_CHECK_THAT_PREVENTS_B",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet?",
        "notes": "method-a is called from a conditional guard around method-b. Hence, if method-a was false, then method-b would not run (which is why the experiment ended at stage-0-failure). However, looking at the snippet, I don't think method-a is a requirement for calling method-b. If anything, passing the outcome of method-b to method-a may lead to a different return value from method-a, but I don't think this is a true spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-22-55",
        "inspection-time-in-minutes": 10
    },
    {
        "iid": 200,
        "inspection-start-time": "2022-01-15-23-04",
        "project": "commons-codec",
        "spec-id": "00327",
        "method-a": "org.apache.commons.codec.net.PercentCodec.decode(Ljava/lang/Object;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.codec.net.PercentCodec.decode([B)[B",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00327.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "PercentCodecTest.java:133",
                        "method-b-site": "PercentCodec.java:259",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT. DSI most likely replaced the return value of method-a with the Object value encoded. However, in the test, the input, encodedS, and decodedS (the two values that are compared against input; decodedS is the string casted return value of method-a) are all equal. Hence, the test passed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-23-11",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 201,
        "inspection-start-time": "2022-01-15-23-12",
        "project": "commons-codec",
        "spec-id": "00328",
        "method-a": "org.apache.commons.codec.net.PercentCodec.decode(Ljava/lang/Object;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.codec.net.PercentCodec.expectedDecodingBytes([B)I",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00328.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "PercentCodecTest.java:133",
                        "method-b-site": "PercentCodec.java:196",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT. DSI most likely replaced the return value of method-a with the Object value encoded. However, in the test, the input, encodedS, and decodedS (the two values that are compared against input; decodedS is the string casted return value of method-a) are all equal. Hence, the test passed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-23-13",
        "inspection-time-in-minutes": 1
    },
    {
        "iid": 202,
        "inspection-start-time": "2022-01-15-23-13",
        "project": "commons-codec",
        "spec-id": "00329",
        "method-a": "org.apache.commons.codec.net.PercentCodec.decode([B)[B",
        "method-b": "org.apache.commons.codec.net.PercentCodec.expectedDecodingBytes([B)I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/u/00329.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "PercentCodec.java:259",
                        "method-b-site": "PercentCodec.java:196",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_EXPECTED_OUTPUT. DSI most likely replaced the return value of method-a with the Object value encoded. However, in the test, the input, encodedS, and decodedS (the two values that are compared against input; decodedS is the string casted return value of method-a) are all equal. Hence, the test passed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-15-23-16",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 203,
        "inspection-start-time": "2022-01-16-00-15",
        "project": "commons-codec",
        "spec-id": "00332",
        "method-a": "org.apache.commons.codec.net.PercentCodec.encode(Ljava/lang/Object;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.codec.net.PercentCodec.containsSpace([B)Z",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00332.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "PercentCodecTest.java:131",
                        "method-b-site": "PercentCodec.java:127",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at PercentCodecTest.java:132.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-16-00-19",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 204,
        "inspection-start-time": "2022-01-16-00-21",
        "project": "commons-codec",
        "spec-id": "00333",
        "method-a": "org.apache.commons.codec.net.PercentCodec.encode(Ljava/lang/Object;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.codec.net.PercentCodec.decode(Ljava/lang/Object;)Ljava/lang/Object;",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00333.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "PercentCodecTest.java:131",
                        "method-b-site": "PercentCodecTest.java:133",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at PercentCodecTest.java:132.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "precondition",
        "validating-test-file": "DSI with org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject with PercentCodecTest.java:132 moved to after PercentCodecTest.java:133",
        "notes": "The DSI experiment ended at stage-0-failure because an exception was thrown before method-b was called, due to the replacement value that DSI put in. This is another spec of the case where the return value of method-a is passed into method-b, but that is the main reason why a potential precondition relationship can be established. So, this may be a spurious spec. DECISION see last two sentences",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-16-00-28",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 205,
        "inspection-start-time": "2022-01-16-03-04",
        "project": "commons-codec",
        "spec-id": "00334",
        "method-a": "org.apache.commons.codec.net.PercentCodec.encode(Ljava/lang/Object;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.codec.net.PercentCodec.decode([B)[B",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00334.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "PercentCodecTest.java:131",
                        "method-b-site": "PercentCodec.java:259",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at PercentCodecTest.java:132.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "precondition",
        "validating-test-file": "DSI with org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject with PercentCodecTest.java:132 moved to after PercentCodecTest.java:133",
        "notes": "The DSI experiment ended at stage-0-failure because an exception was thrown before method-b was called, due to the replacement value that DSI put in. This is another spec of the case where the return value of method-a is passed into method-b, but that is the main reason why a potential precondition relationship can be established. So, this may be a spurious spec. DECISION see last two sentences",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-16-03-08",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 206,
        "inspection-start-time": "2022-01-16-03-08",
        "project": "commons-codec",
        "spec-id": "00335",
        "method-a": "org.apache.commons.codec.net.PercentCodec.encode(Ljava/lang/Object;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.codec.net.PercentCodec.encode([B)[B",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00335.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "PercentCodecTest.java:131",
                        "method-b-site": "PercentCodec.java:241",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at PercentCodecTest.java:132.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-16-03-10",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 207,
        "inspection-start-time": "2022-01-16-03-10",
        "project": "commons-codec",
        "spec-id": "00336",
        "method-a": "org.apache.commons.codec.net.PercentCodec.encode(Ljava/lang/Object;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.codec.net.PercentCodec.expectedDecodingBytes([B)I",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00336.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "PercentCodecTest.java:131",
                        "method-b-site": "PercentCodec.java:196",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at PercentCodecTest.java:132.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet and logic below?",
        "notes": "The DSI experiment ended at stage-0-failure because an exception was thrown before method-b was called, due to the replacement value that DSI put in. While method-b in this test does end up taking in as argument the return value of method-a, I do feel like this method-b is general and stateless (it somewhat counts the number of bytes with some tweaks) that it seems unlikely that there's a clear precondition relationship here? So, I'm leaning towards calling this a spurious-spec. DECISION see last two sentences",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-16-03-17",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 208,
        "inspection-start-time": "2022-01-16-03-17",
        "project": "commons-codec",
        "spec-id": "00337",
        "method-a": "org.apache.commons.codec.net.PercentCodec.encode(Ljava/lang/Object;)Ljava/lang/Object;",
        "method-b": "org.apache.commons.codec.net.PercentCodec.expectedEncodingBytes([B)I",
        "method-a-return-type": "java.lang.Object",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00337.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "PercentCodecTest.java:131",
                        "method-b-site": "PercentCodec.java:125",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at PercentCodecTest.java:132.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-16-03-19",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 209,
        "inspection-start-time": "2022-01-16-03-21",
        "project": "commons-codec",
        "spec-id": "00338",
        "method-a": "org.apache.commons.codec.net.PercentCodec.encode([B)[B",
        "method-b": "org.apache.commons.codec.net.PercentCodec.containsSpace([B)Z",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "boolean",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00338.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "PercentCodecTest.java:131",
                        "method-b-site": "PercentCodec.java:127",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at PercentCodecTest.java:132.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-16-03-27",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 210,
        "inspection-start-time": "2022-01-16-03-27",
        "project": "commons-codec",
        "spec-id": "00339",
        "method-a": "org.apache.commons.codec.net.PercentCodec.encode([B)[B",
        "method-b": "org.apache.commons.codec.net.PercentCodec.decode(Ljava/lang/Object;)Ljava/lang/Object;",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00339.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "PercentCodec.java:241",
                        "method-b-site": "PercentCodecTest.java:133",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at PercentCodecTest.java:132.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "precondition",
        "validating-test-file": "DSI with org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject with PercentCodecTest.java:132 moved to after PercentCodecTest.java:133",
        "notes": "The DSI experiment ended at stage-0-failure because an exception was thrown before method-b was called, due to the replacement value that DSI put in. This is another spec of the case where the return value of method-a is passed into method-b, but that is the main reason why a potential precondition relationship can be established. So, this may be a spurious spec. DECISION see last two sentences",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-16-03-32",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 211,
        "inspection-start-time": "2022-01-16-03-32",
        "project": "commons-codec",
        "spec-id": "00340",
        "method-a": "org.apache.commons.codec.net.PercentCodec.encode([B)[B",
        "method-b": "org.apache.commons.codec.net.PercentCodec.decode([B)[B",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/u/00340.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "PercentCodec.java:241",
                        "method-b-site": "PercentCodec.java:259",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at PercentCodecTest.java:132.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "precondition",
        "validating-test-file": "? The validating test file field for previous entries (DSI with org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject with PercentCodecTest.java:132 moved to after PercentCodecTest.java:133) does not work here because the caller of method-b filters out the null argument before calling method-b...",
        "notes": "The DSI experiment ended at stage-0-failure because an exception was thrown before method-b was called, due to the replacement value that DSI put in. This is another spec of the case where the return value of method-a is passed into method-b, but that is the main reason why a potential precondition relationship can be established. So, this may be a spurious spec. DECISION see last two sentences",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-16-03-37",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 212,
        "inspection-start-time": "2022-01-16-03-37",
        "project": "commons-codec",
        "spec-id": "00341",
        "method-a": "org.apache.commons.codec.net.PercentCodec.encode([B)[B",
        "method-b": "org.apache.commons.codec.net.PercentCodec.doEncode([BIZ)[B",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 4,
        "code-snippets-file": "snippets/u/00341.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.PercentCodecTest#testConfigurablePercentEncoder",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "PercentCodecTest.java:62",
                        "method-b-site": "PercentCodec.java:128",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at PercentCodecTest.java:63",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-16-03-41",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 213,
        "inspection-start-time": "2022-01-16-03-41",
        "project": "commons-codec",
        "spec-id": "00342",
        "method-a": "org.apache.commons.codec.net.PercentCodec.encode([B)[B",
        "method-b": "org.apache.commons.codec.net.PercentCodec.expectedDecodingBytes([B)I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/u/00342.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "PercentCodec.java:241",
                        "method-b-site": "PercentCodec.java:196",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at PercentCodecTest.java:132.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet and logic below?",
        "notes": "Similar case to 00336 - The DSI experiment ended at stage-0-failure because an exception was thrown before method-b was called, due to the replacement value that DSI put in. While method-b in this test does end up taking in as argument the return value of method-a, I do feel like this method-b is general and stateless (it somewhat counts the number of bytes with some tweaks) that it seems unlikely that there's a clear precondition relationship here? So, I'm leaning towards calling this a spurious-spec.",
        "part-of-bigger-spec": "tbd",
        "inspection-end-time": "2022-01-16-03-46",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 214,
        "inspection-start-time": "2022-01-16-03-46",
        "project": "commons-codec",
        "spec-id": "00343",
        "method-a": "org.apache.commons.codec.net.PercentCodec.encode([B)[B",
        "method-b": "org.apache.commons.codec.net.PercentCodec.expectedEncodingBytes([B)I",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "int",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/u/00343.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "PercentCodec.java:241",
                        "method-b-site": "PercentCodec.java:125",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at PercentCodecTest.java:132.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-16-03-48",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 215,
        "inspection-start-time": "2022-01-17-12-19",
        "project": "commons-codec",
        "spec-id": "00345",
        "method-a": "org.apache.commons.codec.net.PercentCodec.expectedEncodingBytes([B)I",
        "method-b": "org.apache.commons.codec.net.PercentCodec.decode(Ljava/lang/Object;)Ljava/lang/Object;",
        "method-a-return-type": "int",
        "method-b-return-type": "java.lang.Object",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00345.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "PercentCodec.java:125",
                        "method-b-site": "PercentCodecTest.java:133",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with the DSI default value 0, which caused an allocation of 0 bytes, which caused a BufferOverflowException when the execution tried to write contents to the buffer.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00345 calls method-b before method-a is indirectly called.",
        "notes": "The test failure is due to the DSI replacement value (refer to comment-on-return-values), and method-b doesn't use/affect the value that method-a returns. Hence, this is a spurious-spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-12-35",
        "inspection-time-in-minutes": 16
    },
    {
        "iid": 216,
        "inspection-start-time": "2022-01-17-12-35",
        "project": "commons-codec",
        "spec-id": "00346",
        "method-a": "org.apache.commons.codec.net.PercentCodec.expectedEncodingBytes([B)I",
        "method-b": "org.apache.commons.codec.net.PercentCodec.decode([B)[B",
        "method-a-return-type": "int",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/u/00346.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.PercentCodecTest#testSafeCharEncodeDecodeObject",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "PercentCodec.java:125",
                        "method-b-site": "PercentCodec.java:259",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with the DSI default value 0, which caused an allocation of 0 bytes, which caused a BufferOverflowException when the execution tried to write contents to the buffer.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00345 indirectly calls method-b before method-a is indirectly called.",
        "notes": "The test failure is due to the DSI replacement value (refer to comment-on-return-values), and method-b doesn't use/affect the value that method-a returns. Hence, this is a spurious-spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-12-38",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 217,
        "inspection-start-time": "2022-01-17-20-19",
        "project": "commons-codec",
        "spec-id": "00365",
        "method-a": "org.apache.commons.codec.net.PercentCodec.insertAlwaysEncodeChars([B)V",
        "method-b": "org.apache.commons.codec.net.PercentCodec.insertAlwaysEncodeChar(B)V",
        "method-a-return-type": "void",
        "method-b-return-type": "void",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00365.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.PercentCodecTest#testPercentEncoderDecoderWithPlusForSpace",
                "stage": "stage-0-failure",
                "exception-or-assertion": "NA",
                "invocation-info": [
                    {
                        "method-a-site": "PercentCodec.java:82",
                        "method-b-site": "PercentCodec.java:96",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "method-a returns void.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-20-22",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 218,
        "inspection-start-time": "2022-01-17-20-31",
        "project": "commons-codec",
        "spec-id": "00366",
        "method-a": "org.apache.commons.codec.net.QCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.QCodec.decodeText(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00366.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testDecodeObjects",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:314",
                        "method-b-site": "QCodec.java:269",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with \"\", based on the assertion failure message.",
                "notes": "Technically EXPECTED_EXCEPTION, but not related to the DSI experiment."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-20-35",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 219,
        "inspection-start-time": "2022-01-17-20-44",
        "project": "commons-codec",
        "spec-id": "00367",
        "method-a": "org.apache.commons.codec.net.QCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doDecoding([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00367.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testDecodeObjects",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:314",
                        "method-b-site": "RFC1522Codec.java:154",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with \"\", based on the assertion failure message.",
                "notes": "Technically EXPECTED_EXCEPTION, but not related to the DSI experiment."
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-20-48",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 220,
        "inspection-start-time": "2022-01-17-20-49",
        "project": "commons-codec",
        "spec-id": "00368",
        "method-a": "org.apache.commons.codec.net.QCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.getEncoding()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00368.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testDecodeObjects",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:314",
                        "method-b-site": "RFC1522Codec.java:148",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with \"\", based on the assertion failure message.",
                "notes": "Technically EXPECTED_EXCEPTION, but not related to the DSI experiment."
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-20-52",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 221,
        "inspection-start-time": "2022-01-17-20-52",
        "project": "commons-codec",
        "spec-id": "00369",
        "method-a": "org.apache.commons.codec.net.QCodec.decodeText(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doDecoding([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00369.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testDecodeObjects",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:269",
                        "method-b-site": "RFC1522Codec.java:154",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with \"\", based on the assertion failure message.",
                "notes": "Technically EXPECTED_EXCEPTION, but not related to the DSI experiment."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-20-55",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 222,
        "inspection-start-time": "2022-01-17-20-55",
        "project": "commons-codec",
        "spec-id": "00370",
        "method-a": "org.apache.commons.codec.net.QCodec.decodeText(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.getEncoding()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00370.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testDecodeObjects",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:269",
                        "method-b-site": "RFC1522Codec.java:148",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "Most likely replaced with \"\", based on the assertion failure message.",
                "notes": "Technically EXPECTED_EXCEPTION, but not related to the DSI experiment."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-20-58",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 223,
        "inspection-start-time": "2022-01-17-21-09",
        "project": "commons-codec",
        "spec-id": "00372",
        "method-a": "org.apache.commons.codec.net.QCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.QCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00372.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodecTest.java:89",
                        "method-b-site": "QCodecTest.java:93",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Return value of method-a is replaced by the String variable plain, which was the pre-encoded value; hence, the test failed when it tried to check the replaced value against what its encoding should be.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00372",
        "notes": "Refer to comment-on-return-values to see why the test failed. In general, one can compose method-a with method-b by passing in as method-b's argument the return value of method-a, one can also do the opposite (i.e. validating-test-file). Hence, this is most likely a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-21-24",
        "inspection-time-in-minutes": 15
    },
    {
        "iid": 224,
        "inspection-start-time": "2022-01-17-21-24",
        "project": "commons-codec",
        "spec-id": "00373",
        "method-a": "org.apache.commons.codec.net.QCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.QCodec.decodeText(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00373.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodecTest.java:89",
                        "method-b-site": "QCodecTest.java:93",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Return value of method-a is replaced by the String variable plain, which was the pre-encoded value; hence, the test failed when it tried to check the replaced value against what its encoding should be.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00372 indirectly calls method-b before method-a.",
        "notes": "Refer to comment-on-return-values to see why the test failed. In general, one can compose method-a with method-b by passing in as method-b's argument the return value of method-a, one can also do the opposite (i.e. validating-test-file). Hence, this is most likely a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-21-28",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 225,
        "inspection-start-time": "2022-01-17-21-28",
        "project": "commons-codec",
        "spec-id": "00374",
        "method-a": "org.apache.commons.codec.net.QCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.QCodec.encode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00374.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodecTest.java:89",
                        "method-b-site": "QCodec.java:269",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Return value of method-a is replaced by the String variable plain, which was the pre-encoded value; hence, the test failed when it tried to check the replaced value against what its encoding should be.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-21-32",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 226,
        "inspection-start-time": "2022-01-17-21-32",
        "project": "commons-codec",
        "spec-id": "00375",
        "method-a": "org.apache.commons.codec.net.QCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.QCodec.encodeText(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00375.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodecTest.java:89",
                        "method-b-site": "QCodec.java:269",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Return value of method-a is replaced by the String variable plain, which was the pre-encoded value; hence, the test failed when it tried to check the replaced value against what its encoding should be.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-21-34",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 227,
        "inspection-start-time": "2022-01-17-21-34",
        "project": "commons-codec",
        "spec-id": "00376",
        "method-a": "org.apache.commons.codec.net.QCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.QCodec.getCharset()Ljava/nio/charset/Charset;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.nio.charset.Charset",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00376.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodecTest.java:89",
                        "method-b-site": "QCodec.java:211",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Return value of method-a is replaced by the String variable plain, which was the pre-encoded value; hence, the test failed when it tried to check the replaced value against what its encoding should be.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-21-36",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 228,
        "inspection-start-time": "2022-01-17-21-59",
        "project": "commons-codec",
        "spec-id": "00377",
        "method-a": "org.apache.commons.codec.net.QCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doDecoding([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00377.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodecTest.java:89",
                        "method-b-site": "RFC1522Codec.java:154",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Return value of method-a is replaced by the String variable plain, which was the pre-encoded value; hence, the test failed when it tried to check the replaced value against what its encoding should be.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00372 indirectly calls method-b before method-a.",
        "notes": "Refer to comment-on-return-values to see why the test failed. In general, one can compose method-a with method-b by passing in as method-b's argument the byte[] casted return value of method-a, one can also do the opposite (i.e. validating-test-file). Hence, this is most likely a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-22-05",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 229,
        "inspection-start-time": "2022-01-17-22-10",
        "project": "commons-codec",
        "spec-id": "00378",
        "method-a": "org.apache.commons.codec.net.QCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doEncoding([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00378.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodecTest.java:89",
                        "method-b-site": "RFC1522Codec.java:79",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Return value of method-a is replaced by the String variable plain, which was the pre-encoded value; hence, the test failed when it tried to check the replaced value against what its encoding should be.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-22-13",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 230,
        "inspection-start-time": "2022-01-17-22-13",
        "project": "commons-codec",
        "spec-id": "00379",
        "method-a": "org.apache.commons.codec.net.QCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.getEncoding()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00379.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testEncodeObjects",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:290",
                        "method-b-site": "RFC1522Codec.java:77",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "According to the log file, method-a was replaced with the object equivalent of \"\" (the empty string), but I'm not quite sure where DSI got that value from?",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-22-19",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 231,
        "inspection-start-time": "2022-01-17-22-21",
        "project": "commons-codec",
        "spec-id": "00380",
        "method-a": "org.apache.commons.codec.net.QCodec.encode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.QCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00380.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:250",
                        "method-b-site": "QCodecTest.java:93",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Return value of method-a is replaced by the String variable plain, which was the pre-encoded value; hence, the test failed when it tried to check the replaced value against what its encoding should be.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00372 calls method-b before method-a is indirectly called.",
        "notes": "Refer to comment-on-return-values on why the test failed. In general, one can possibly compose method-a and method-b (by passing in the return value of method-a to method-b), but one can also call method-b after method-a. So, this seems like a spurious spec?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-22-25",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 232,
        "inspection-start-time": "2022-01-17-22-25",
        "project": "commons-codec",
        "spec-id": "00381",
        "method-a": "org.apache.commons.codec.net.QCodec.encode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.QCodec.decodeText(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00381.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:250",
                        "method-b-site": "QCodec.java:269",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Return value of method-a is replaced by the String variable plain, which was the pre-encoded value; hence, the test failed when it tried to check the replaced value against what its encoding should be.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00372 indirectly calls method-b before method-a is indirectly called.",
        "notes": "Refer to comment-on-return-values on why the test failed. In general, one can possibly compose method-a and method-b (by passing in the return value of method-a to method-b), but one can also call method-b after method-a. So, this seems like a spurious spec?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-22-30",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 233,
        "inspection-start-time": "2022-01-17-22-30",
        "project": "commons-codec",
        "spec-id": "00382",
        "method-a": "org.apache.commons.codec.net.QCodec.encode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.QCodec.encodeText(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00382.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:250",
                        "method-b-site": "QCodec.java:211",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Return value of method-a is replaced by the String variable plain, which was the pre-encoded value; hence, the test failed when it tried to check the replaced value against what its encoding should be.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-22-37",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 234,
        "inspection-start-time": "2022-01-17-22-37",
        "project": "commons-codec",
        "spec-id": "00383",
        "method-a": "org.apache.commons.codec.net.QCodec.encode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doDecoding([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00383.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:250",
                        "method-b-site": "RFC1522Codec.java:154",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Return value of method-a is replaced by the String variable plain, which was the pre-encoded value; hence, the test failed when it tried to check the replaced value against what its encoding should be.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00372 indirectly calls method-b before method-a is indirectly called.",
        "notes": "Refer to comment-on-return-values on why the test failed. In general, one can possibly use the return value of method-a to construct an argument to method-b, but one can also call method-b after method-a. So, this seems like a spurious spec?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-22-40",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 235,
        "inspection-start-time": "2022-01-17-22-40",
        "project": "commons-codec",
        "spec-id": "00384",
        "method-a": "org.apache.commons.codec.net.QCodec.encode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doEncoding([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00384.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:250",
                        "method-b-site": "RFC1522Codec.java:79",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Return value of method-a is replaced by the String variable plain, which was the pre-encoded value; hence, the test failed when it tried to check the replaced value against what its encoding should be.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-22-43",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 236,
        "inspection-start-time": "2022-01-17-22-43",
        "project": "commons-codec",
        "spec-id": "00385",
        "method-a": "org.apache.commons.codec.net.QCodec.encode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.getEncoding()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00385.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testEncodeObjects",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:250",
                        "method-b-site": "RFC1522Codec.java:77",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Return value of method-a is replaced by the String variable plain, which was the pre-encoded value; hence, the test failed when it tried to check the replaced value against what its encoding should be.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-22-49",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 237,
        "inspection-start-time": "2022-01-17-22-50",
        "project": "commons-codec",
        "spec-id": "00386",
        "method-a": "org.apache.commons.codec.net.QCodec.encodeText(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.QCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00386.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:211",
                        "method-b-site": "QCodecTest.java:93",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Return value of method-a is replaced by the String variable plain, which was the pre-encoded value; hence, the test failed when it tried to check the replaced value against what its encoding should be.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00372 calls method-b before method-a is indirectly called.",
        "notes": "Refer to comment-on-return-values on why the test failed. In general, one can possibly compose method-a and method-b (by passing in the return value of method-a to method-b), but one can also call method-b after method-a. So, this seems like a spurious spec?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-22-53",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 238,
        "inspection-start-time": "2022-01-17-22-53",
        "project": "commons-codec",
        "spec-id": "00387",
        "method-a": "org.apache.commons.codec.net.QCodec.encodeText(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.QCodec.decodeText(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00387.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:211",
                        "method-b-site": "QCodec.java:269",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Return value of method-a is replaced by the String variable plain, which was the pre-encoded value; hence, the test failed when it tried to check the replaced value against what its encoding should be.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00372 calls method-b before method-a is indirectly called.",
        "notes": "Refer to comment-on-return-values on why the test failed. In general, one can possibly compose method-a and method-b (by passing in the return value of method-a to method-b), but one can also call method-b after method-a. So, this seems like a spurious spec?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-22-57",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 239,
        "inspection-start-time": "2022-01-17-22-57",
        "project": "commons-codec",
        "spec-id": "00388",
        "method-a": "org.apache.commons.codec.net.QCodec.encodeText(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doDecoding([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00388.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:211",
                        "method-b-site": "RFC1522Codec.java:154",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Return value of method-a is replaced by the String variable plain, which was the pre-encoded value; hence, the test failed when it tried to check the replaced value against what its encoding should be.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00372 calls method-b before method-a is indirectly called.",
        "notes": "Refer to comment-on-return-values on why the test failed. In general, one can possibly compose method-a and method-b (by passing in the return value of method-a to method-b), but one can also call method-b after method-a. So, this seems like a spurious spec?",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-23-02",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 240,
        "inspection-start-time": "2022-01-17-23-02",
        "project": "commons-codec",
        "spec-id": "00389",
        "method-a": "org.apache.commons.codec.net.QCodec.encodeText(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doEncoding([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00389.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:211",
                        "method-b-site": "RFC1522Codec.java:79",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Return value of method-a is replaced by the String variable plain, which was the pre-encoded value; hence, the test failed when it tried to check the replaced value against what its encoding should be.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-23-06",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 241,
        "inspection-start-time": "2022-01-17-23-35",
        "project": "commons-codec",
        "spec-id": "00390",
        "method-a": "org.apache.commons.codec.net.QCodec.encodeText(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.getEncoding()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00390.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testEncodeObjects",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:211",
                        "method-b-site": "RFC1522Codec.java:77",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. Return value of method-a is replaced by the String variable plain, which was the pre-encoded value; hence, the test failed when it tried to check the replaced value against what its encoding should be.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-23-43",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 242,
        "inspection-start-time": "2022-01-17-23-43",
        "project": "commons-codec",
        "spec-id": "00391",
        "method-a": "org.apache.commons.codec.net.QCodec.getCharset()Ljava/nio/charset/Charset;",
        "method-b": "org.apache.commons.codec.net.QCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.nio.charset.Charset",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00391.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:250",
                        "method-b-site": "QCodecTest.java:93",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at RFC1522Codec.java:79. (The return value of method-a was passed into RFC1522Codec.encodeText(), in which a call to String.getBytes() was called with the return value of method-a as an argument. However, this caused a NullPointerException)",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet and notes below",
        "notes": "method-a is a 1-line stateless getter that retrieves QCodec.charset, and the value of QCodec.charset is not set or modified by a call to method-b (because the only place that sets QCodec.charset is the constructor of QCodec itself). Hence, this is a spurious spec. ONE_STATELESS_METHOD",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-17-23-55",
        "inspection-time-in-minutes": 12
    },
    {
        "iid": 243,
        "inspection-start-time": "2022-01-18-00-16",
        "project": "commons-codec",
        "spec-id": "00392",
        "method-a": "org.apache.commons.codec.net.QCodec.getCharset()Ljava/nio/charset/Charset;",
        "method-b": "org.apache.commons.codec.net.QCodec.decodeText(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.nio.charset.Charset",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00392.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:250",
                        "method-b-site": "QCodec.java:269",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at RFC1522Codec.java:79. (The return value of method-a was passed into RFC1522Codec.encodeText(), in which a call to String.getBytes() was called with the return value of method-a as an argument. However, this caused a NullPointerException)",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet and notes below",
        "notes": "method-a is a 1-line stateless getter that retrieves QCodec.charset, and the value of QCodec.charset is not set or modified by a call to method-b (because the only place that sets QCodec.charset is the constructor of QCodec itself). Hence, this is a spurious spec. ONE_STATELESS_METHOD",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-00-19",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 244,
        "inspection-start-time": "2022-01-18-00-47",
        "project": "commons-codec",
        "spec-id": "00395",
        "method-a": "org.apache.commons.codec.net.QCodec.getCharset()Ljava/nio/charset/Charset;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doDecoding([B)[B",
        "method-a-return-type": "java.nio.charset.Charset",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00395.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:250",
                        "method-b-site": "RFC1522Codec.java:154",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at RFC1522Codec.java:79. (The return value of method-a was passed into RFC1522Codec.encodeText(), in which a call to String.getBytes() was called with the return value of method-a as an argument. However, this caused a NullPointerException)",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "snippet and notes below",
        "notes": "method-a is a 1-line stateless getter that retrieves QCodec.charset, and the value of QCodec.charset is not set or modified by a call to method-b (because the only place that sets QCodec.charset is the constructor of QCodec itself). Hence, this is a spurious spec. ONE_STATELESS_METHOD",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-00-51",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 245,
        "inspection-start-time": "2022-01-18-00-51",
        "project": "commons-codec",
        "spec-id": "00396",
        "method-a": "org.apache.commons.codec.net.QCodec.getCharset()Ljava/nio/charset/Charset;",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doEncoding([B)[B",
        "method-a-return-type": "java.nio.charset.Charset",
        "method-b-return-type": "byte[]",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00396.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "QCodec.java:250",
                        "method-b-site": "RFC1522Codec.java:154",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at RFC1522Codec.java:79. (The return value of method-a was passed into RFC1522Codec.encodeText(), in which a call to String.getBytes() was called with the return value of method-a as an argument. However, this caused a NullPointerException)",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "reasoning below? Might be wrong though. Also the fact that the exception was thrown *before* method-b was called should indicate that it's not the relationship with method-b that caused the exception to be thrown...",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-01-04",
        "inspection-time-in-minutes": 13
    },
    {
        "iid": 246,
        "inspection-start-time": "2022-01-18-01-04",
        "project": "commons-codec",
        "spec-id": "00398",
        "method-a": "org.apache.commons.codec.net.QuotedPrintableCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.QuotedPrintableCodec.decode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 7,
        "code-snippets-file": "snippets/u/00398.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QuotedPrintableCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QuotedPrintableCodecTest.java:81",
                        "method-b-site": "QuotedPrintableCodec.java:493",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - replaced with String variable encoded, but the return value of method-a was being compared against the String variable plain.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-01-10",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 247,
        "inspection-start-time": "2022-01-18-01-10",
        "project": "commons-codec",
        "spec-id": "00399",
        "method-a": "org.apache.commons.codec.net.QuotedPrintableCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.QuotedPrintableCodec.decode([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00399.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QuotedPrintableCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QuotedPrintableCodecTest.java:81",
                        "method-b-site": "QuotedPrintableCodec.java:455",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT - replaced with String variable encoded, but the return value of method-a was being compared against the String variable plain.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-01-14",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 248,
        "inspection-start-time": "2022-01-18-01-14",
        "project": "commons-codec",
        "spec-id": "00400",
        "method-a": "org.apache.commons.codec.net.QuotedPrintableCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.QuotedPrintableCodec.getCharset()Ljava/nio/charset/Charset;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.nio.charset.Charset",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00400.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QuotedPrintableCodecTest#testDecodeObjects",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QuotedPrintableCodec.java:542",
                        "method-b-site": "QuotedPrintableCodec.java:493",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "The assertion failed because DSI replaced the return value of method-a with the Object equivalent of \"\" (the empty string), while the return value of method-a was compared against a specific string via assertion.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-01-20",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 249,
        "inspection-start-time": "2022-01-18-12-18",
        "project": "commons-codec",
        "spec-id": "00401",
        "method-a": "org.apache.commons.codec.net.QuotedPrintableCodec.decode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.QuotedPrintableCodec.decode([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00401.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QuotedPrintableCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QuotedPrintableCodec.java:493",
                        "method-b-site": "QuotedPrintableCodec.java:455",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value encoded, which is the encoded version of the input string. However, the test was checking whether the retrun value of method-a is equal to the decoded version of the encoded string.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-12-21",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 250,
        "inspection-start-time": "2022-01-18-12-52",
        "project": "commons-codec",
        "spec-id": "00405",
        "method-a": "org.apache.commons.codec.net.QuotedPrintableCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.QuotedPrintableCodec.encode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 8,
        "code-snippets-file": "snippets/u/00405.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QuotedPrintableCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QuotedPrintableCodecTest.java:77",
                        "method-b-site": "QuotedPrintableCodec.java:435",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain, which was the original string, but the test was trying to check whether method-a would return the encoded version of the string. Hence, the test failed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-12-54",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 251,
        "inspection-start-time": "2022-01-18-12-54",
        "project": "commons-codec",
        "spec-id": "00406",
        "method-a": "org.apache.commons.codec.net.QuotedPrintableCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.QuotedPrintableCodec.encode([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/u/00406.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QuotedPrintableCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QuotedPrintableCodecTest.java:77",
                        "method-b-site": "QuotedPrintableCodec.java:586",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String value plain, which was the original string, but the test was trying to check whether method-a would return the encoded version of the string. Hence, the test failed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-12-58",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 252,
        "inspection-start-time": "2022-01-18-12-58",
        "project": "commons-codec",
        "spec-id": "00407",
        "method-a": "org.apache.commons.codec.net.QuotedPrintableCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.QuotedPrintableCodec.getCharset()Ljava/nio/charset/Charset;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.nio.charset.Charset",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00407.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QuotedPrintableCodecTest#testEncodeObjects",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QuotedPrintableCodec.java:515",
                        "method-b-site": "QuotedPrintableCodec.java:435",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "The assertion shows that DSI replaced the return value of method-a with the Object equivalent of \"\", but not sure where that object came from?",
                "notes": "Technically EXPECTED_EXCEPTION, but not related to DSI experiment."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-13-05",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 253,
        "inspection-start-time": "2022-01-18-13-27",
        "project": "commons-codec",
        "spec-id": "00411",
        "method-a": "org.apache.commons.codec.net.QuotedPrintableCodec.encode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.QuotedPrintableCodec.encode([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/u/00411.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QuotedPrintableCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QuotedPrintableCodec.java:435",
                        "method-b-site": "QuotedPrintableCodec.java:586",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with String variable plain/sourceStr, which is not equal to the value that method-a was supposed to return, because method-a's return value is expected to be the encoded version of that string.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-13-31",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 254,
        "inspection-start-time": "2022-01-18-13-31",
        "project": "commons-codec",
        "spec-id": "00412",
        "method-a": "org.apache.commons.codec.net.QuotedPrintableCodec.encode([B)[B",
        "method-b": "org.apache.commons.codec.net.QuotedPrintableCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00412.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QuotedPrintableCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QuotedPrintableCodec.java:586",
                        "method-b-site": "QuotedPrintableCodecTest.java:81",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with null, which was not equal to the expected output.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00402 calls method-b before indirectly calling method-a.",
        "notes": "While these tests illustrate a sort of relationship between method-a and method-b in which the return value of method-a is converted to a String object and indirectly passed to method-b, one can also illustrate a scenario where the return value of method-b is indirectly converted into a byte[] object and passed to method-a (ex. validating-test-file). Hence, I think this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-13-42",
        "inspection-time-in-minutes": 12
    },
    {
        "iid": 255,
        "inspection-start-time": "2022-01-18-13-42",
        "project": "commons-codec",
        "spec-id": "00413",
        "method-a": "org.apache.commons.codec.net.QuotedPrintableCodec.encode([B)[B",
        "method-b": "org.apache.commons.codec.net.QuotedPrintableCodec.decode(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00413.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QuotedPrintableCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QuotedPrintableCodec.java:586",
                        "method-b-site": "QuotedPrintableCodec.java:493",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with null, which was not equal to the expected output.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00402 indirectly calls method-b before indirectly calling method-a.",
        "notes": "While these tests illustrate a sort of relationship between method-a and method-b in which the return value of method-a is converted to a String object and indirectly passed to method-b, one can also illustrate a scenario where the return value of method-b is indirectly converted into a byte[] object and passed to method-a (ex. validating-test-file). Hence, I think this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-13-45",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 256,
        "inspection-start-time": "2022-01-18-14-00",
        "project": "commons-codec",
        "spec-id": "00414",
        "method-a": "org.apache.commons.codec.net.QuotedPrintableCodec.encode([B)[B",
        "method-b": "org.apache.commons.codec.net.QuotedPrintableCodec.decode([B)[B",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00414.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QuotedPrintableCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "QuotedPrintableCodec.java:586",
                        "method-b-site": "QuotedPrintableCodec.java:455",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with null, which was not equal to the expected output.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00402 indirectly calls method-b before indirectly calling method-a.",
        "notes": "While these tests illustrate a sort of relationship between method-a and method-b in which the return value of method-a is converted to a String object, converted back to a byte[] object, and indirectly passed to method-b, one can also illustrate a scenario where the return value of method-b is indirectly called after method-a (like the validating-test-file). Hence, I think this is a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-14-06",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 257,
        "inspection-start-time": "2022-01-18-14-42",
        "project": "commons-codec",
        "spec-id": "00418",
        "method-a": "org.apache.commons.codec.net.QuotedPrintableCodec.getCharset()Ljava/nio/charset/Charset;",
        "method-b": "org.apache.commons.codec.net.QuotedPrintableCodec.encode([B)[B",
        "method-a-return-type": "java.nio.charset.Charset",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00418.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QuotedPrintableCodecTest#testFinalBytes",
                "stage": "stage-0-failure",
                "exception-or-assertion": "exception",
                "invocation-info": [
                    {
                        "method-a-site": "QuotedPrintableCodec.java:435",
                        "method-b-site": "QuotedPrintableCodec.java:586",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "NULL_REPLACEMENT_CAUSED_NULLPOINTEREXCEPTION. NullPointerException at QuotedPrintableCodec.java:586.",
                "notes": ""
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "org.apache.commons.codec.net.QuotedPrintableCodecTest#testFinalBytes",
        "notes": "The point of failure of org.apache.commons.codec.net.QuotedPrintableCodecTest#testFinalBytes is *before* method-b is called because the return value of method-a was used to generate? provide? an argument to method-b. So, the failure itself has no connection to method-b itself. Moreover, method-b and its callees do not call method-a or use the return value of method-a directly, and method-a is a 1-line stateless getter. So, this seems like a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-14-55",
        "inspection-time-in-minutes": 13
    },
    {
        "iid": 258,
        "inspection-start-time": "2022-01-18-14-55",
        "project": "commons-codec",
        "spec-id": "00419",
        "method-a": "org.apache.commons.codec.net.RFC1522Codec.doEncoding([B)[B",
        "method-b": "org.apache.commons.codec.net.BCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00419.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "RFC1522Codec.java:79",
                        "method-b-site": "BCodecTest.java:92",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with null, which was then propagated to the output of BCodec.encode() (called from the test), and differed with the expected value.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00419 calls method-b before indirectly calling method-a.",
        "notes": "While one can compose method-a and method-b in such a way that one can convert the return value of method-a into a String value, and pass that value into method-b, one can also take the return value of method-b, convert it to a byte[] value, and use it as an input to method-b. Hence, this seems like a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-15-12",
        "inspection-time-in-minutes": 17
    },
    {
        "iid": 259,
        "inspection-start-time": "2022-01-18-16-00",
        "project": "commons-codec",
        "spec-id": "00420",
        "method-a": "org.apache.commons.codec.net.RFC1522Codec.doEncoding([B)[B",
        "method-b": "org.apache.commons.codec.net.BCodec.decodeText(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00420.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.BCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "RFC1522Codec.java:79",
                        "method-b-site": "BCodec.java:225",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with null, which was then propagated to the output of BCodec.encode() (called from the test), and differed with the expected value.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00419 calls method-b before indirectly calling method-a.",
        "notes": "While one can compose method-a and method-b in such a way that one can convert the return value of method-a into a String value, and pass that value into method-b, one can also take the return value of method-b, convert it to a byte[] value, and use it as an input to method-b. Hence, this seems like a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-16-06",
        "inspection-time-in-minutes": 6
    },
    {
        "iid": 260,
        "inspection-start-time": "2022-01-18-16-15",
        "project": "commons-codec",
        "spec-id": "00421",
        "method-a": "org.apache.commons.codec.net.RFC1522Codec.doEncoding([B)[B",
        "method-b": "org.apache.commons.codec.net.QCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00421.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "RFC1522Codec.java:79",
                        "method-b-site": "QCodecTest.java:93",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with null, which was then propagated to the output of BCodec.encode() (called from the test), and differed with the expected value.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00372 calls method-b before indirectly calling method-a.",
        "notes": "While one can compose method-a and method-b in such a way that one can convert the return value of method-a into a String value, and pass that value into method-b, one can also take the return value of method-b, convert it to a byte[] value, and use it as an input to method-b. Hence, this seems like a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-16-23",
        "inspection-time-in-minutes": 8
    },
    {
        "iid": 261,
        "inspection-start-time": "2022-01-18-16-23",
        "project": "commons-codec",
        "spec-id": "00422",
        "method-a": "org.apache.commons.codec.net.RFC1522Codec.doEncoding([B)[B",
        "method-b": "org.apache.commons.codec.net.QCodec.decodeText(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "java.lang.String",
        "same-class": "inheritance",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00422.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "RFC1522Codec.java:79",
                        "method-b-site": "QCodec.java:269",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with null, which was then propagated to the output of BCodec.encode() (called from the test), and differed with the expected value.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00372 indirectly calls method-b before indirectly calling method-a.",
        "notes": "While one can compose method-a and method-b in such a way that one can convert the return value of method-a into a String value, and pass that value into method-b, one can also take the return value of method-b, convert it to a byte[] value, and use it as an input to method-b. Hence, this seems like a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-16-28",
        "inspection-time-in-minutes": 5
    },
    {
        "iid": 262,
        "inspection-start-time": "2022-01-18-16-28",
        "project": "commons-codec",
        "spec-id": "00423",
        "method-a": "org.apache.commons.codec.net.RFC1522Codec.doEncoding([B)[B",
        "method-b": "org.apache.commons.codec.net.RFC1522Codec.doDecoding([B)[B",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00423.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.QCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "RFC1522Codec.java:79",
                        "method-b-site": "RFC1522Codec.java:154",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with null, which was then propagated to the output of BCodec.encode() (called from the test), and differed with the expected value.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00372 indirectly calls method-b before indirectly calling method-a.",
        "notes": "While one can compose method-a and method-b in such a way that one can pass the return value of method-a into method-b, one can also do the opposite. Hence, this seems like a spurious spec.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-16-31",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 263,
        "inspection-start-time": "2022-01-18-18-35",
        "project": "commons-codec",
        "spec-id": "00426",
        "method-a": "org.apache.commons.codec.net.URLCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.URLCodec.decode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 6,
        "code-snippets-file": "snippets/u/00426.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.URLCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "URLCodecTest.java:89",
                        "method-b-site": "URLCodec.java:299",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaces the return value of method-a with the String value encoded, but the return value of method-a was supposed to be the decoded version of that string. Hence, the test fails.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-18-39",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 264,
        "inspection-start-time": "2022-01-18-18-39",
        "project": "commons-codec",
        "spec-id": "00427",
        "method-a": "org.apache.commons.codec.net.URLCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.URLCodec.decode([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00427.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.URLCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "URLCodecTest.java:89",
                        "method-b-site": "URLCodec.java:279",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaces the return value of method-a with the String value encoded, but the return value of method-a was supposed to be the decoded version of that string. Hence, the test fails.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-18-41",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 265,
        "inspection-start-time": "2022-01-18-18-41",
        "project": "commons-codec",
        "spec-id": "00428",
        "method-a": "org.apache.commons.codec.net.URLCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.URLCodec.getDefaultCharset()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 2,
        "code-snippets-file": "snippets/u/00428.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.URLCodecTest#testDecodeObjects",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "URLCodec.java:348",
                        "method-b-site": "URLCodec.java:299",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaces the return value of method-a with the Object equivalent of \"\", but I'm not sure where that value came from?.",
                "notes": "Technically EXPECTED_EXCEPTION, but not related to DSI experiment."
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-18-45",
        "inspection-time-in-minutes": 4
    },
    {
        "iid": 266,
        "inspection-start-time": "2022-01-18-18-45",
        "project": "commons-codec",
        "spec-id": "00429",
        "method-a": "org.apache.commons.codec.net.URLCodec.decode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.URLCodec.decode([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00429.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.URLCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "URLCodec.java:299",
                        "method-b-site": "URLCodec.java:279",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaces the return value of method-a with the String value encoded, but the return value of method-a was supposed to be the decoded version of that string. Hence, the test fails.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-18-47",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 267,
        "inspection-start-time": "2022-01-18-19-21",
        "project": "commons-codec",
        "spec-id": "00433",
        "method-a": "org.apache.commons.codec.net.URLCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.URLCodec.encode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 5,
        "code-snippets-file": "snippets/u/00433.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.URLCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "URLCodecTest.java:85",
                        "method-b-site": "URLCodec.java:253",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String variable plain, which was also the argument to method-a. However, method-a was expected to return the encoded version of that string variable, and hence the test failed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-19-24",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 268,
        "inspection-start-time": "2022-01-18-19-24",
        "project": "commons-codec",
        "spec-id": "00434",
        "method-a": "org.apache.commons.codec.net.URLCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.URLCodec.encode([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00434.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.URLCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "URLCodecTest.java:85",
                        "method-b-site": "URLCodec.java:233",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String variable plain, which was also the argument to method-a. However, method-a was expected to return the encoded version of that string variable, and hence the test failed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (indirect)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-19-26",
        "inspection-time-in-minutes": 2
    },
    {
        "iid": 269,
        "inspection-start-time": "2022-01-18-19-28",
        "project": "commons-codec",
        "spec-id": "00435",
        "method-a": "org.apache.commons.codec.net.URLCodec.encode(Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.URLCodec.getDefaultCharset()Ljava/lang/String;",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 1,
        "code-snippets-file": "snippets/u/00435.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.URLCodecTest#testEncodeObjects",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "URLCodec.java:323",
                        "method-b-site": "URLCodec.java:253",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. It seems like DSI replaced the return value of method-a with the Object equivalent of \"\", but I'm not sure where that value came from...",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-19-37",
        "inspection-time-in-minutes": 9
    },
    {
        "iid": 270,
        "inspection-start-time": "2022-01-18-19-50",
        "project": "commons-codec",
        "spec-id": "00439",
        "method-a": "org.apache.commons.codec.net.URLCodec.encode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;",
        "method-b": "org.apache.commons.codec.net.URLCodec.encode([B)[B",
        "method-a-return-type": "java.lang.String",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00439.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.URLCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "URLCodec.java:253",
                        "method-b-site": "URLCodec.java:233",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with the String variable plain, which was also the argument to method-a. However, method-a was expected to return the encoded version of that string variable, and hence the test failed.",
                "notes": ""
            }
        ],
        "verdict": "no-break-pass (direct)",
        "spec-type": "precondition",
        "validating-test-file": "snippet",
        "notes": "",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-19-53",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 271,
        "inspection-start-time": "2022-01-18-19-53",
        "project": "commons-codec",
        "spec-id": "00440",
        "method-a": "org.apache.commons.codec.net.URLCodec.encode([B)[B",
        "method-b": "org.apache.commons.codec.net.URLCodec.decode(Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00440.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.URLCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "URLCodec.java:233",
                        "method-b-site": "URLCodecTest.java:89",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with null (given that there were no declared byte[] objects), which propagated as output of URLCodec.encode(). However, the expected value was different from null.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00430 calls method-b before indirectly calling method-a.",
        "notes": "In the use case depicted in the test, the return value of method-a is converted to a String and passed into method-b as an argument. However, this is not necessarily the only kind of use case, as the validating-test-file shows another use case where the return value of method-b is converted to a byte[] and indirectly passed in as argument to method-a. Hence, there are no strict ordering rules between the two methods, and the spec is spurious.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-20-00",
        "inspection-time-in-minutes": 7
    },
    {
        "iid": 272,
        "inspection-start-time": "2022-01-18-20-00",
        "project": "commons-codec",
        "spec-id": "00441",
        "method-a": "org.apache.commons.codec.net.URLCodec.encode([B)[B",
        "method-b": "org.apache.commons.codec.net.URLCodec.decode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "java.lang.String",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00441.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.URLCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "URLCodec.java:233",
                        "method-b-site": "URLCodec.java:299",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with null (given that there were no declared byte[] objects), which propagated as output of URLCodec.encode(). However, the expected value was different from null.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00430 indirectly calls method-b before indirectly calling method-a.",
        "notes": "In the use case depicted in the test, the return value of method-a is converted to a String and indirectly passed into method-b as an argument. However, this is not necessarily the only kind of use case, as the validating-test-file shows another use case where the return value of method-b is converted to a byte[] and indirectly passed in as argument to method-a. Hence, there are no strict ordering rules between the two methods, and the spec is spurious.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-20-03",
        "inspection-time-in-minutes": 3
    },
    {
        "iid": 273,
        "inspection-start-time": "2022-01-18-20-03",
        "project": "commons-codec",
        "spec-id": "00442",
        "method-a": "org.apache.commons.codec.net.URLCodec.encode([B)[B",
        "method-b": "org.apache.commons.codec.net.URLCodec.decode([B)[B",
        "method-a-return-type": "byte[]",
        "method-b-return-type": "byte[]",
        "same-class": "yes",
        "all-tests-mined": false,
        "test-classes-mine-count": 0,
        "test-methods-mine-count": 3,
        "code-snippets-file": "snippets/u/00442.java",
        "inspected-cases": [
            {
                "test": "org.apache.commons.codec.net.URLCodecTest#testBasicEncodeDecode",
                "stage": "stage-0-failure",
                "exception-or-assertion": "assertion",
                "invocation-info": [
                    {
                        "method-a-site": "URLCodec.java:233",
                        "method-b-site": "URLCodec.java:279",
                        "invocation-count": 1
                    }
                ],
                "perturbation-count": 1,
                "comment-on-return-values": "REPLACE_RETURN_WITH_UNEXPECTED_OUTPUT. DSI replaced the return value of method-a with null (given that there were no declared byte[] objects), which propagated as output of URLCodec.encode(). However, the expected value was different from null.",
                "notes": "ORDER_OF_ASSERTIONS"
            }
        ],
        "verdict": "spurious-spec",
        "spec-type": "NA",
        "validating-test-file": "DSIValidationTest#testDSI00430 indirectly calls method-b before indirectly calling method-a.",
        "notes": "In the use case depicted in the test, the return value of method-a is converted to a String and indirectly passed into method-b as an argument after being converted back to a byte[]. However, this is not necessarily the only kind of use case, as the validating-test-file shows another use case where the return value of method-b is used to pass in an argument to method-a. Hence, there are no strict ordering rules between the two methods, and the spec is spurious.",
        "part-of-bigger-spec": "no",
        "inspection-end-time": "2022-01-18-20-06",
        "inspection-time-in-minutes": 3
    }
]
